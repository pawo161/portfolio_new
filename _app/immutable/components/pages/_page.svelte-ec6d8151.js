import{I as Jh,S as Jr,i as Kr,s as Qr,k as ne,q as me,a as ke,l as ie,m as $,r as ge,h as U,c as Ue,n as k,J as re,p as xt,b as je,G as D,u as Tt,B as kt,K as gi,L as vi,e as Ht,f as ht,M as ar,N as Tr,O as th,w as Us,x as Hs,P as qa,y as Gs,Q as Kh,R as xo,t as Ni,d as Qh,z as Vs,T as $h,o as eu,A as tu,U as nu,g as iu,V as ru}from"../../chunks/index-5694fe5f.js";import{b as Qn}from"../../chunks/paths-6cd3a76e.js";const su="124",ou=0,Xa=1,au=2,nh=1,lu=2,Mr=3,uo=0,vt=1,fo=2,ih=1,Er=0,Ar=1,Ko=2,Ya=3,Za=4,cu=5,zi=100,hu=101,uu=102,Ja=103,Ka=104,fu=200,du=201,pu=202,mu=203,rh=204,sh=205,gu=206,vu=207,yu=208,xu=209,_u=210,bu=0,wu=1,Mu=2,Qo=3,Su=4,Tu=5,Eu=6,Au=7,po=0,Lu=1,Cu=2,Lr=0,Pu=1,Ru=2,Iu=3,Du=4,Nu=5,oh=300,Na=301,za=302,Qa=303,$a=304,Fa=306,Oa=307,$o=1e3,Rt=1001,ea=1002,St=1003,el=1004,tl=1005,bt=1006,zu=1007,mo=1008,Ba=1009,Fu=1010,Ou=1011,Xs=1012,Bu=1013,Ws=1014,Bn=1015,Ys=1016,ku=1017,Uu=1018,Hu=1019,Cr=1020,Gu=1021,si=1022,Kt=1023,Vu=1024,Wu=1025,Vi=1026,Fr=1027,ju=1028,qu=1029,Xu=1030,Yu=1031,Zu=1032,Ju=1033,nl=33776,il=33777,rl=33778,sl=33779,ol=35840,al=35841,ll=35842,cl=35843,Ku=36196,hl=37492,ul=37496,Qu=37808,$u=37809,ef=37810,tf=37811,nf=37812,rf=37813,sf=37814,of=37815,af=37816,lf=37817,cf=37818,hf=37819,uf=37820,ff=37821,df=36492,pf=37840,mf=37841,gf=37842,vf=37843,yf=37844,xf=37845,_f=37846,bf=37847,wf=37848,Mf=37849,Sf=37850,Tf=37851,Ef=37852,Af=37853,Lf=2200,Cf=2201,Pf=2202,Zs=2300,js=2301,_o=2302,Fi=2400,Oi=2401,Js=2402,ka=2500,ah=2501,Rf=0,$r=3e3,lh=3001,If=3007,Df=3002,Nf=3003,zf=3004,Ff=3005,Of=3006,Bf=3200,kf=3201,lr=0,Uf=1,bo=7680,Hf=519,go=35044,Or=35048,fl="300 es";function Ln(){}Object.assign(Ln.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,t)}}});const gt=[];for(let t=0;t<256;t++)gt[t]=(t<16?"0":"")+t.toString(16);let ss=1234567;const ze={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(gt[t&255]+gt[t>>8&255]+gt[t>>16&255]+gt[t>>24&255]+"-"+gt[e&255]+gt[e>>8&255]+"-"+gt[e>>16&15|64]+gt[e>>24&255]+"-"+gt[n&63|128]+gt[n>>8&255]+"-"+gt[n>>16&255]+gt[n>>24&255]+gt[i&255]+gt[i>>8&255]+gt[i>>16&255]+gt[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return t!==void 0&&(ss=t%2147483647),ss=ss*16807%2147483647,(ss-1)/2147483646},degToRad:function(t){return t*ze.DEG2RAD},radToDeg:function(t){return t*ze.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),l=o(n/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),d=o((e-i)/2),f=s((i-e)/2),p=o((i-e)/2);switch(r){case"XYX":t.set(a*u,l*h,l*d,a*c);break;case"YZY":t.set(l*d,a*u,l*h,a*c);break;case"ZXZ":t.set(l*h,l*d,a*u,a*c);break;case"XZX":t.set(a*u,l*p,l*f,a*c);break;case"YXY":t.set(l*f,a*u,l*p,a*c);break;case"ZYZ":t.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class q{constructor(e=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class At{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=n,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],d=i[2],f=i[5],p=i[8],v=r[0],y=r[3],g=r[6],m=r[1],w=r[4],S=r[7],M=r[2],x=r[5],A=r[8];return s[0]=o*v+a*m+l*M,s[3]=o*y+a*w+l*x,s[6]=o*g+a*S+l*A,s[1]=c*v+u*m+h*M,s[4]=c*y+u*w+h*x,s[7]=c*g+u*S+h*A,s[2]=d*v+f*m+p*M,s[5]=d*y+f*w+p*x,s[8]=d*g+f*S+p*A,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return n*o*u-n*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=n*h+i*d+r*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=h*v,e[1]=(r*c-u*i)*v,e[2]=(a*i-r*o)*v,e[3]=d*v,e[4]=(u*n-r*l)*v,e[5]=(r*s-a*n)*v,e[6]=f*v,e[7]=(i*l-c*n)*v,e[8]=(o*n-i*s)*v,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+n,0,0,1),this}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=n*s+i*l,r[3]=n*o+i*c,r[6]=n*a+i*u,r[1]=-i*s+n*l,r[4]=-i*o+n*c,r[7]=-i*a+n*u,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}}let yi;const cr={getDataURL:function(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{yi===void 0&&(yi=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),yi.width=t.width,yi.height=t.height;const n=yi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=yi}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let Gf=0;function $e(t=$e.DEFAULT_IMAGE,e=$e.DEFAULT_MAPPING,n=Rt,i=Rt,r=bt,s=mo,o=Kt,a=Ba,l=1,c=$r){Object.defineProperty(this,"id",{value:Gf++}),this.uuid=ze.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new At,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}$e.DEFAULT_IMAGE=void 0;$e.DEFAULT_MAPPING=oh;$e.prototype=Object.assign(Object.create(Ln.prototype),{constructor:$e,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=ze.generateUUID()),!e&&t.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(wo(i[s].image)):r.push(wo(i[s]))}else r=wo(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==oh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case $o:t.x=t.x-Math.floor(t.x);break;case Rt:t.x=t.x<0?0:1;break;case ea:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case $o:t.y=t.y-Math.floor(t.y);break;case Rt:t.y=t.y<0?0:1;break;case ea:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}});Object.defineProperty($e.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function wo(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?cr.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Je{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],v=l[2],y=l[6],g=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-v)<.01&&Math.abs(p-y)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+v)<.1&&Math.abs(p+y)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const w=(c+1)/2,S=(f+1)/2,M=(g+1)/2,x=(u+d)/4,A=(h+v)/4,H=(p+y)/4;return w>S&&w>M?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=x/i,s=A/i):S>M?S<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(S),i=x/r,s=H/r):M<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(M),i=A/s,r=H/s),this.set(i,r,s,n),this}let m=Math.sqrt((y-p)*(y-p)+(h-v)*(h-v)+(d-u)*(d-u));return Math.abs(m)<.001&&(m=1),this.x=(y-p)/m,this.y=(h-v)/m,this.z=(d-u)/m,this.w=Math.acos((c+f+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function Qt(t,e,n){this.width=t,this.height=e,this.scissor=new Je(0,0,t,e),this.scissorTest=!1,this.viewport=new Je(0,0,t,e),n=n||{},this.texture=new $e(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:bt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Qt.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Qt,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function dl(t,e,n){Qt.call(this,t,e,n),this.samples=4}dl.prototype=Object.assign(Object.create(Qt.prototype),{constructor:dl,isWebGLMultisampleRenderTarget:!0,copy:function(t){return Qt.prototype.copy.call(this,t),this.samples=t.samples,this}});class It{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return i.copy(e).slerp(n,r)}static slerpFlat(e,n,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const d=s[o+0],f=s[o+1],p=s[o+2],v=s[o+3];if(h!==v||l!==d||c!==f||u!==p){let y=1-a;const g=l*d+c*f+u*p+h*v,m=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const M=Math.sqrt(w),x=Math.atan2(M,g*m);y=Math.sin(y*x)/M,a=Math.sin(a*x)/M}const S=a*m;if(l=l*y+d*S,c=c*y+f*S,u=u*y+p*S,h=h*y+v*S,y===1-a){const M=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=M,c*=M,u*=M,h*=M}}e[n]=l,e[n+1]=c,e[n+2]=u,e[n+3]=h}static multiplyQuaternionsFlat(e,n,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return e[n]=a*p+u*h+l*f-c*d,e[n+1]=l*p+u*d+c*h-a*f,e[n+2]=c*p+u*f+a*d-l*h,e[n+3]=u*p-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),h=a(s/2),d=l(i/2),f=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],o=n[1],a=n[5],l=n[9],c=n[2],u=n[6],h=n[10],d=i+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-r)*f}else if(i>a&&i>h){const f=2*Math.sqrt(1+i-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(r+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-i-h);this._w=(s-c)/f,this._x=(r+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-i-a);this._w=(o-r)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let r=e.dot(n)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ze.clamp(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,o=e._w,a=n._x,l=n._y,c=n._z,u=n._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-n;return this._w=f*o+n*this._w,this._x=f*i+n*this._x,this._y=f*r+n*this._y,this._z=f*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-n)*u)/c,d=Math.sin(n*u)/c;return this._w=o*h+this._w*d,this._x=i*h+this._x*d,this._y=r*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class E{constructor(e=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(pl.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(pl.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*n+o*r-a*i,u=l*i+a*n-s*r,h=l*r+s*i-o*n,d=-s*n-o*i-a*r;return this.x=c*l+d*-s+u*-a-h*-o,this.y=u*l+d*-o+h*-s-c*-a,this.z=h*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,o=n.x,a=n.y,l=n.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Mo.copy(this).projectOnVector(e),this.sub(Mo)}reflect(e){return this.sub(Mo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(ze.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Mo=new E,pl=new It;class Yn{constructor(e,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new E(1/0,1/0,1/0),this.max=n!==void 0?n:new E(-1/0,-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],d=e[l+2];u<n&&(n=u),h<i&&(i=h),d<r&&(r=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),d=e.getZ(l);u<n&&(n=u),h<i&&(i=h),d<r&&(r=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=pr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new E),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new E),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const n=e.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),To.copy(n.boundingBox),To.applyMatrix4(e.matrixWorld),this.union(To));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new E),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,pr),pr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(mr),os.subVectors(this.max,mr),xi.subVectors(e.a,mr),_i.subVectors(e.b,mr),bi.subVectors(e.c,mr),Cn.subVectors(_i,xi),Pn.subVectors(bi,_i),$n.subVectors(xi,bi);let n=[0,-Cn.z,Cn.y,0,-Pn.z,Pn.y,0,-$n.z,$n.y,Cn.z,0,-Cn.x,Pn.z,0,-Pn.x,$n.z,0,-$n.x,-Cn.y,Cn.x,0,-Pn.y,Pn.x,0,-$n.y,$n.x,0];return!So(n,xi,_i,bi,os)||(n=[1,0,0,0,1,0,0,0,1],!So(n,xi,_i,bi,os))?!1:(as.crossVectors(Cn,Pn),n=[as.x,as.y,as.z],So(n,xi,_i,bi,os))}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new E),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return pr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(pr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(gn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),gn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),gn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),gn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),gn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),gn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),gn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),gn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(gn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function So(t,e,n,i,r){for(let s=0,o=t.length-3;s<=o;s+=3){ei.fromArray(t,s);const a=r.x*Math.abs(ei.x)+r.y*Math.abs(ei.y)+r.z*Math.abs(ei.z),l=e.dot(ei),c=n.dot(ei),u=i.dot(ei);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const gn=[new E,new E,new E,new E,new E,new E,new E,new E],pr=new E,To=new Yn,xi=new E,_i=new E,bi=new E,Cn=new E,Pn=new E,$n=new E,mr=new E,os=new E,as=new E,ei=new E,Vf=new Yn;class Zn{constructor(e,n){this.center=e!==void 0?e:new E,this.radius=n!==void 0?n:-1}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):Vf.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new E),n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Yn),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const vn=new E,Eo=new E,ls=new E,Rn=new E,Ao=new E,cs=new E,Lo=new E;class es{constructor(e,n){this.origin=e!==void 0?e:new E,this.direction=n!==void 0?n:new E(0,0,-1)}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new E),n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,vn)),this}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new E),n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=vn.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(vn.copy(this.direction).multiplyScalar(n).add(this.origin),vn.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Eo.copy(e).add(n).multiplyScalar(.5),ls.copy(n).sub(e).normalize(),Rn.copy(this.origin).sub(Eo);const s=e.distanceTo(n)*.5,o=-this.direction.dot(ls),a=Rn.dot(this.direction),l=-Rn.dot(ls),c=Rn.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=s*u,h>=0)if(d>=-p)if(d<=p){const v=1/u;h*=v,d*=v,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),r&&r.copy(ls).multiplyScalar(d).add(Eo),f}intersectSphere(e,n){vn.subVectors(e.center,this.origin);const i=vn.dot(this.direction),r=vn.dot(vn)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,n):this.at(a,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,vn)!==null}intersectTriangle(e,n,i,r,s){Ao.subVectors(n,e),cs.subVectors(i,e),Lo.crossVectors(Ao,cs);let o=this.direction.dot(Lo),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Rn.subVectors(this.origin,e);const l=a*this.direction.dot(cs.crossVectors(Rn,cs));if(l<0)return null;const c=a*this.direction.dot(Ao.cross(Rn));if(c<0||l+c>o)return null;const u=-a*Rn.dot(Lo);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Fe{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,l,c,u,h,d,f,p,v,y){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Fe().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/wi.setFromMatrixColumn(e,0).length(),s=1/wi.setFromMatrixColumn(e,1).length(),o=1/wi.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,v=a*h;n[0]=l*u,n[4]=-l*h,n[8]=c,n[1]=f+p*c,n[5]=d-v*c,n[9]=-a*l,n[2]=v-d*c,n[6]=p+f*c,n[10]=o*l}else if(e.order==="YXZ"){const d=l*u,f=l*h,p=c*u,v=c*h;n[0]=d+v*a,n[4]=p*a-f,n[8]=o*c,n[1]=o*h,n[5]=o*u,n[9]=-a,n[2]=f*a-p,n[6]=v+d*a,n[10]=o*l}else if(e.order==="ZXY"){const d=l*u,f=l*h,p=c*u,v=c*h;n[0]=d-v*a,n[4]=-o*h,n[8]=p+f*a,n[1]=f+p*a,n[5]=o*u,n[9]=v-d*a,n[2]=-o*c,n[6]=a,n[10]=o*l}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,v=a*h;n[0]=l*u,n[4]=p*c-f,n[8]=d*c+v,n[1]=l*h,n[5]=v*c+d,n[9]=f*c-p,n[2]=-c,n[6]=a*l,n[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;n[0]=l*u,n[4]=v-d*h,n[8]=p*h+f,n[1]=h,n[5]=o*u,n[9]=-a*u,n[2]=-c*u,n[6]=f*h+p,n[10]=d-v*h}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;n[0]=l*u,n[4]=-h,n[8]=c*u,n[1]=d*h+v,n[5]=o*u,n[9]=f*h-p,n[2]=p*h-f,n[6]=a*u,n[10]=v*h+d}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Wf,e,jf)}lookAt(e,n,i){const r=this.elements;return Ct.subVectors(e,n),Ct.lengthSq()===0&&(Ct.z=1),Ct.normalize(),In.crossVectors(i,Ct),In.lengthSq()===0&&(Math.abs(i.z)===1?Ct.x+=1e-4:Ct.z+=1e-4,Ct.normalize(),In.crossVectors(i,Ct)),In.normalize(),hs.crossVectors(Ct,In),r[0]=In.x,r[4]=hs.x,r[8]=Ct.x,r[1]=In.y,r[5]=hs.y,r[9]=Ct.y,r[2]=In.z,r[6]=hs.z,r[10]=Ct.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],d=i[9],f=i[13],p=i[2],v=i[6],y=i[10],g=i[14],m=i[3],w=i[7],S=i[11],M=i[15],x=r[0],A=r[4],H=r[8],O=r[12],J=r[1],P=r[5],N=r[9],C=r[13],I=r[2],R=r[6],z=r[10],W=r[14],Q=r[3],se=r[7],ce=r[11],ue=r[15];return s[0]=o*x+a*J+l*I+c*Q,s[4]=o*A+a*P+l*R+c*se,s[8]=o*H+a*N+l*z+c*ce,s[12]=o*O+a*C+l*W+c*ue,s[1]=u*x+h*J+d*I+f*Q,s[5]=u*A+h*P+d*R+f*se,s[9]=u*H+h*N+d*z+f*ce,s[13]=u*O+h*C+d*W+f*ue,s[2]=p*x+v*J+y*I+g*Q,s[6]=p*A+v*P+y*R+g*se,s[10]=p*H+v*N+y*z+g*ce,s[14]=p*O+v*C+y*W+g*ue,s[3]=m*x+w*J+S*I+M*Q,s[7]=m*A+w*P+S*R+M*se,s[11]=m*H+w*N+S*z+M*ce,s[15]=m*O+w*C+S*W+M*ue,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],v=e[7],y=e[11],g=e[15];return p*(+s*l*h-r*c*h-s*a*d+i*c*d+r*a*f-i*l*f)+v*(+n*l*f-n*c*d+s*o*d-r*o*f+r*c*u-s*l*u)+y*(+n*c*h-n*a*f-s*o*h+i*o*f+s*a*u-i*c*u)+g*(-r*a*u-n*l*h+n*a*d+r*o*h-i*o*d+i*l*u)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],v=e[13],y=e[14],g=e[15],m=h*y*c-v*d*c+v*l*f-a*y*f-h*l*g+a*d*g,w=p*d*c-u*y*c-p*l*f+o*y*f+u*l*g-o*d*g,S=u*v*c-p*h*c+p*a*f-o*v*f-u*a*g+o*h*g,M=p*h*l-u*v*l-p*a*d+o*v*d+u*a*y-o*h*y,x=n*m+i*w+r*S+s*M;if(x===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/x;return e[0]=m*A,e[1]=(v*d*s-h*y*s-v*r*f+i*y*f+h*r*g-i*d*g)*A,e[2]=(a*y*s-v*l*s+v*r*c-i*y*c-a*r*g+i*l*g)*A,e[3]=(h*l*s-a*d*s-h*r*c+i*d*c+a*r*f-i*l*f)*A,e[4]=w*A,e[5]=(u*y*s-p*d*s+p*r*f-n*y*f-u*r*g+n*d*g)*A,e[6]=(p*l*s-o*y*s-p*r*c+n*y*c+o*r*g-n*l*g)*A,e[7]=(o*d*s-u*l*s+u*r*c-n*d*c-o*r*f+n*l*f)*A,e[8]=S*A,e[9]=(p*h*s-u*v*s-p*i*f+n*v*f+u*i*g-n*h*g)*A,e[10]=(o*v*s-p*a*s+p*i*c-n*v*c-o*i*g+n*a*g)*A,e[11]=(u*a*s-o*h*s-u*i*c+n*h*c+o*i*f-n*a*f)*A,e[12]=M*A,e[13]=(u*v*r-p*h*r+p*i*d-n*v*d-u*i*y+n*h*y)*A,e[14]=(p*a*r-o*v*r-p*i*l+n*v*l+o*i*y-n*a*y)*A,e[15]=(o*h*r-u*a*r+u*i*l-n*h*l-o*i*d+n*a*d)*A,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i){return this.set(1,n,i,0,e,1,i,0,e,n,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,o=n._y,a=n._z,l=n._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,v=o*u,y=o*h,g=a*h,m=l*c,w=l*u,S=l*h,M=i.x,x=i.y,A=i.z;return r[0]=(1-(v+g))*M,r[1]=(f+S)*M,r[2]=(p-w)*M,r[3]=0,r[4]=(f-S)*x,r[5]=(1-(d+g))*x,r[6]=(y+m)*x,r[7]=0,r[8]=(p+w)*A,r[9]=(y-m)*A,r[10]=(1-(d+v))*A,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=wi.set(r[0],r[1],r[2]).length();const o=wi.set(r[4],r[5],r[6]).length(),a=wi.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],qt.copy(this);const c=1/s,u=1/o,h=1/a;return qt.elements[0]*=c,qt.elements[1]*=c,qt.elements[2]*=c,qt.elements[4]*=u,qt.elements[5]*=u,qt.elements[6]*=u,qt.elements[8]*=h,qt.elements[9]*=h,qt.elements[10]*=h,n.setFromRotationMatrix(qt),i.x=s,i.y=o,i.z=a,this}makePerspective(e,n,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(n-e),c=2*s/(i-r),u=(n+e)/(n-e),h=(i+r)/(i-r),d=-(o+s)/(o-s),f=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,n,i,r,s,o){const a=this.elements,l=1/(n-e),c=1/(i-r),u=1/(o-s),h=(n+e)*l,d=(i+r)*c,f=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const wi=new E,qt=new Fe,Wf=new E(0,0,0),jf=new E(1,1,1),In=new E,hs=new E,Ct=new E;class ts{constructor(e=0,n=0,i=0,r=ts.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n,i){const r=ze.clamp,s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],h=s[9],d=s[2],f=s[6],p=s[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(f,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-r(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,u),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return ml.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ml,n,i)}setFromVector3(e,n){return this.set(e.x,e.y,e.z,n||this._order)}reorder(e){return gl.setFromEuler(this),this.setFromQuaternion(gl,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new E(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ts.DefaultOrder="XYZ";ts.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const ml=new Fe,gl=new It;class ch{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let qf=0;const vl=new E,Mi=new It,yn=new Fe,us=new E,gr=new E,Xf=new E,Yf=new It,yl=new E(1,0,0),xl=new E(0,1,0),_l=new E(0,0,1),Zf={type:"added"},bl={type:"removed"};function Me(){Object.defineProperty(this,"id",{value:qf++}),this.uuid=ze.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Me.DefaultUp.clone();const t=new E,e=new ts,n=new It,i=new E(1,1,1);function r(){n.setFromEuler(e,!1)}function s(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Fe},normalMatrix:{value:new At}}),this.matrix=new Fe,this.matrixWorld=new Fe,this.matrixAutoUpdate=Me.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ch,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}Me.DefaultUp=new E(0,1,0);Me.DefaultMatrixAutoUpdate=!0;Me.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Me,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Mi.setFromAxisAngle(t,e),this.quaternion.multiply(Mi),this},rotateOnWorldAxis:function(t,e){return Mi.setFromAxisAngle(t,e),this.quaternion.premultiply(Mi),this},rotateX:function(t){return this.rotateOnAxis(yl,t)},rotateY:function(t){return this.rotateOnAxis(xl,t)},rotateZ:function(t){return this.rotateOnAxis(_l,t)},translateOnAxis:function(t,e){return vl.copy(t).applyQuaternion(this.quaternion),this.position.add(vl.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(yl,t)},translateY:function(t){return this.translateOnAxis(xl,t)},translateZ:function(t){return this.translateOnAxis(_l,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(yn.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?us.copy(t):us.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),gr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?yn.lookAt(gr,us,this.up):yn.lookAt(us,gr,this.up),this.quaternion.setFromRotationMatrix(yn),i&&(yn.extractRotation(i.matrixWorld),Mi.setFromRotationMatrix(yn),this.quaternion.premultiply(Mi.invert()))},add:function(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Zf)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(bl)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(bl)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),yn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),yn.multiply(t.parent.matrixWorld)),t.applyMatrix4(yn),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(t,e);if(s!==void 0)return s}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new E),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new It),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gr,t,Xf),t},getWorldScale:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new E),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gr,Yf,t),t},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new E),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const u=a[l];r(t.shapes,u)}else r(t.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(r(t.materials,this.material[a]));i.material=o}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(r(t.animations,a))}}if(e){const o=s(t.geometries),a=s(t.materials),l=s(t.textures),c=s(t.images),u=s(t.shapes),h=s(t.skeletons),d=s(t.animations);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),l.length>0&&(n.textures=l),c.length>0&&(n.images=c),u.length>0&&(n.shapes=u),h.length>0&&(n.skeletons=h),d.length>0&&(n.animations=d)}return n.object=i,n;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}});const Co=new E,Jf=new E,Kf=new At;class bn{constructor(e,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new E(1,0,0),this.constant=n!==void 0?n:0}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=Co.subVectors(i,n).cross(Jf.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new E),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new E);const i=e.delta(Co),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return n.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new E),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||Kf.getNormalMatrix(e),r=this.coplanarPoint(Co).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const Xt=new E,xn=new E,Po=new E,_n=new E,Si=new E,Ti=new E,wl=new E,Ro=new E,Io=new E,Do=new E;class _t{constructor(e,n,i){this.a=e!==void 0?e:new E,this.b=n!==void 0?n:new E,this.c=i!==void 0?i:new E}static getNormal(e,n,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new E),r.subVectors(i,n),Xt.subVectors(e,n),r.cross(Xt);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){Xt.subVectors(r,n),xn.subVectors(i,n),Po.subVectors(e,n);const o=Xt.dot(Xt),a=Xt.dot(xn),l=Xt.dot(Po),c=xn.dot(xn),u=xn.dot(Po),h=o*c-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new E),h===0)return s.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,_n),_n.x>=0&&_n.y>=0&&_n.x+_n.y<=1}static getUV(e,n,i,r,s,o,a,l){return this.getBarycoord(e,n,i,r,_n),l.set(0,0),l.addScaledVector(s,_n.x),l.addScaledVector(o,_n.y),l.addScaledVector(a,_n.z),l}static isFrontFacing(e,n,i,r){return Xt.subVectors(i,n),xn.subVectors(e,n),Xt.cross(xn).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Xt.subVectors(this.c,this.b),xn.subVectors(this.a,this.b),Xt.cross(xn).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new E),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return _t.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new bn),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return _t.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,s){return _t.getUV(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return _t.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return _t.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new E);const i=this.a,r=this.b,s=this.c;let o,a;Si.subVectors(r,i),Ti.subVectors(s,i),Ro.subVectors(e,i);const l=Si.dot(Ro),c=Ti.dot(Ro);if(l<=0&&c<=0)return n.copy(i);Io.subVectors(e,r);const u=Si.dot(Io),h=Ti.dot(Io);if(u>=0&&h<=u)return n.copy(r);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),n.copy(i).addScaledVector(Si,o);Do.subVectors(e,s);const f=Si.dot(Do),p=Ti.dot(Do);if(p>=0&&f<=p)return n.copy(s);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),n.copy(i).addScaledVector(Ti,a);const y=u*p-f*h;if(y<=0&&h-u>=0&&f-p>=0)return wl.subVectors(s,r),a=(h-u)/(h-u+(f-p)),n.copy(r).addScaledVector(wl,a);const g=1/(y+v+d);return o=v*g,a=d*g,n.copy(i).addScaledVector(Si,o).addScaledVector(Ti,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const hh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Yt={h:0,s:0,l:0},fs={h:0,s:0,l:0};function No(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function zo(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Fo(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}class _e{constructor(e,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,n,i){return this.r=e,this.g=n,this.b=i,this}setHSL(e,n,i){if(e=ze.euclideanModulo(e,1),n=ze.clamp(n,0,1),i=ze.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,s=2*i-r;this.r=No(s,r,e+1/3),this.g=No(s,r,e),this.b=No(s,r,e-1/3)}return this}setStyle(e){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[4]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[4]),this;break;case"hsl":case"hsla":if(r=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(a,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const n=hh[e];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,n=2){return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}copyLinearToGamma(e,n=2){const i=n>0?1/n:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=zo(e.r),this.g=zo(e.g),this.b=zo(e.b),this}copyLinearToSRGB(e){return this.r=Fo(e.r),this.g=Fo(e.g),this.b=Fo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const u=s-o;switch(l=c<=.5?u/(s+o):u/(2-s-o),s){case n:a=(i-r)/u+(i<r?6:0);break;case i:a=(r-n)/u+2;break;case r:a=(n-i)/u+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,n,i){return this.getHSL(Yt),Yt.h+=e,Yt.s+=n,Yt.l+=i,this.setHSL(Yt.h,Yt.s,Yt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpHSL(e,n){this.getHSL(Yt),e.getHSL(fs);const i=ze.lerp(Yt.h,fs.h,n),r=ze.lerp(Yt.s,fs.s,n),s=ze.lerp(Yt.l,fs.l,n);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}_e.NAMES=hh;_e.prototype.r=1;_e.prototype.g=1;_e.prototype.b=1;class ta{constructor(e,n,i,r,s,o=0){this.a=e,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new E,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new _e,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}let Qf=0;function Te(){Object.defineProperty(this,"id",{value:Qf++}),this.uuid=ze.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Ar,this.side=uo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=rh,this.blendDst=sh,this.blendEquation=zi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Qo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Hf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=bo,this.stencilZFail=bo,this.stencilZPass=bo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Te.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Te,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===ih;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ar&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==uo&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(e){const r=i(t.textures),s=i(t.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Te.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function Wn(t){Te.call(this),this.type="MeshBasicMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Wn.prototype=Object.create(Te.prototype);Wn.prototype.constructor=Wn;Wn.prototype.isMeshBasicMaterial=!0;Wn.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Qe=new E,ds=new q;function Ae(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=go,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ae.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Ae.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new _e),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new q),e[n++]=s.x,e[n++]=s.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new E),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new Je),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this},applyMatrix3:function(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ds.fromBufferAttribute(this,e),ds.applyMatrix3(t),this.setXY(e,ds.x,ds.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Qe.fromBufferAttribute(this,e),Qe.applyMatrix3(t),this.setXYZ(e,Qe.x,Qe.y,Qe.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Qe.x=this.getX(e),Qe.y=this.getY(e),Qe.z=this.getZ(e),Qe.applyMatrix4(t),this.setXYZ(e,Qe.x,Qe.y,Qe.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Qe.x=this.getX(e),Qe.y=this.getY(e),Qe.z=this.getZ(e),Qe.applyNormalMatrix(t),this.setXYZ(e,Qe.x,Qe.y,Qe.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Qe.x=this.getX(e),Qe.y=this.getY(e),Qe.z=this.getZ(e),Qe.transformDirection(t),this.setXYZ(e,Qe.x,Qe.y,Qe.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function na(t,e,n){Ae.call(this,new Int8Array(t),e,n)}na.prototype=Object.create(Ae.prototype);na.prototype.constructor=na;function ia(t,e,n){Ae.call(this,new Uint8Array(t),e,n)}ia.prototype=Object.create(Ae.prototype);ia.prototype.constructor=ia;function ra(t,e,n){Ae.call(this,new Uint8ClampedArray(t),e,n)}ra.prototype=Object.create(Ae.prototype);ra.prototype.constructor=ra;function sa(t,e,n){Ae.call(this,new Int16Array(t),e,n)}sa.prototype=Object.create(Ae.prototype);sa.prototype.constructor=sa;function Br(t,e,n){Ae.call(this,new Uint16Array(t),e,n)}Br.prototype=Object.create(Ae.prototype);Br.prototype.constructor=Br;function oa(t,e,n){Ae.call(this,new Int32Array(t),e,n)}oa.prototype=Object.create(Ae.prototype);oa.prototype.constructor=oa;function kr(t,e,n){Ae.call(this,new Uint32Array(t),e,n)}kr.prototype=Object.create(Ae.prototype);kr.prototype.constructor=kr;function Ks(t,e,n){Ae.call(this,new Uint16Array(t),e,n)}Ks.prototype=Object.create(Ae.prototype);Ks.prototype.constructor=Ks;Ks.prototype.isFloat16BufferAttribute=!0;function We(t,e,n){Ae.call(this,new Float32Array(t),e,n)}We.prototype=Object.create(Ae.prototype);We.prototype.constructor=We;function aa(t,e,n){Ae.call(this,new Float64Array(t),e,n)}aa.prototype=Object.create(Ae.prototype);aa.prototype.constructor=aa;class $f{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const n=[];let i,r,s;const o=e.faces;for(r=0;r<o.length;r++){const a=o[r];a.materialIndex!==s&&(s=a.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(e){const n=e.faces,i=e.vertices,r=e.faceVertexUvs,s=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,a=e.morphTargets,l=a.length;let c;if(l>0){c=[];for(let g=0;g<l;g++)c[g]={name:a[g].name,data:[]};this.morphTargets.position=c}const u=e.morphNormals,h=u.length;let d;if(h>0){d=[];for(let g=0;g<h;g++)d[g]={name:u[g].name,data:[]};this.morphTargets.normal=d}const f=e.skinIndices,p=e.skinWeights,v=f.length===i.length,y=p.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let g=0;g<n.length;g++){const m=n[g];this.vertices.push(i[m.a],i[m.b],i[m.c]);const w=m.vertexNormals;if(w.length===3)this.normals.push(w[0],w[1],w[2]);else{const M=m.normal;this.normals.push(M,M,M)}const S=m.vertexColors;if(S.length===3)this.colors.push(S[0],S[1],S[2]);else{const M=m.color;this.colors.push(M,M,M)}if(s===!0){const M=r[0][g];M!==void 0?this.uvs.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",g),this.uvs.push(new q,new q,new q))}if(o===!0){const M=r[1][g];M!==void 0?this.uvs2.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),this.uvs2.push(new q,new q,new q))}for(let M=0;M<l;M++){const x=a[M].vertices;c[M].data.push(x[m.a],x[m.b],x[m.c])}for(let M=0;M<h;M++){const x=u[M].vertexNormals[g];d[M].data.push(x.a,x.b,x.c)}v&&this.skinIndices.push(f[m.a],f[m.b],f[m.c]),y&&this.skinWeights.push(p[m.a],p[m.b],p[m.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}function uh(t){if(t.length===0)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}const ed={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ps(t,e){return new ed[t](e)}let td=1;const $t=new Fe,Oo=new Me,Ei=new E,Pt=new Yn,vr=new Yn,dt=new E;function Ye(){Object.defineProperty(this,"id",{value:td+=2}),this.uuid=ze.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Ye.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Ye,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(uh(t)>65535?kr:Br)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return this.attributes[t]!==void 0},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new At().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(t){return $t.makeRotationX(t),this.applyMatrix4($t),this},rotateY:function(t){return $t.makeRotationY(t),this.applyMatrix4($t),this},rotateZ:function(t){return $t.makeRotationZ(t),this.applyMatrix4($t),this},translate:function(t,e,n){return $t.makeTranslation(t,e,n),this.applyMatrix4($t),this},scale:function(t,e,n){return $t.makeScale(t,e,n),this.applyMatrix4($t),this},lookAt:function(t){return Oo.lookAt(t),Oo.updateMatrix(),this.applyMatrix4(Oo.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ei).negate(),this.translate(Ei.x,Ei.y,Ei.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const n=new We(e.vertices.length*3,3),i=new We(e.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(e.vertices)),this.setAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const r=new We(e.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new We(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}if(e.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1}if(e.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1}if(e.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new $f().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(t.vertices.length*3);if(this.setAttribute("position",new Ae(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const n=new Float32Array(t.normals.length*3);this.setAttribute("normal",new Ae(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const n=new Float32Array(t.colors.length*3);this.setAttribute("color",new Ae(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const n=new Float32Array(t.uvs.length*2);this.setAttribute("uv",new Ae(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const n=new Float32Array(t.uvs2.length*2);this.setAttribute("uv2",new Ae(n,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const n in t.morphTargets){const i=[],r=t.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],l=new We(a.data.length*3,3);l.name=a.name,i.push(l.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(t.skinIndices.length>0){const n=new We(t.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const n=new We(t.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Yn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new E(-1/0,-1/0,-1/0),new E(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Pt.setFromBufferAttribute(r),this.morphTargetsRelative?(dt.addVectors(this.boundingBox.min,Pt.min),this.boundingBox.expandByPoint(dt),dt.addVectors(this.boundingBox.max,Pt.max),this.boundingBox.expandByPoint(dt)):(this.boundingBox.expandByPoint(Pt.min),this.boundingBox.expandByPoint(Pt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Zn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new E,1/0);return}if(t){const n=this.boundingSphere.center;if(Pt.setFromBufferAttribute(t),e)for(let r=0,s=e.length;r<s;r++){const o=e[r];vr.setFromBufferAttribute(o),this.morphTargetsRelative?(dt.addVectors(Pt.min,vr.min),Pt.expandByPoint(dt),dt.addVectors(Pt.max,vr.max),Pt.expandByPoint(dt)):(Pt.expandByPoint(vr.min),Pt.expandByPoint(vr.max))}Pt.getCenter(n);let i=0;for(let r=0,s=t.count;r<s;r++)dt.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(dt));if(e)for(let r=0,s=e.length;r<s;r++){const o=e[r],a=this.morphTargetsRelative;for(let l=0,c=o.count;l<c;l++)dt.fromBufferAttribute(o,l),a&&(Ei.fromBufferAttribute(t,l),dt.add(Ei)),i=Math.max(i,n.distanceToSquared(dt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ae(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let h=0,d=n.count;h<d;h++)n.setXYZ(h,0,0,0);const i=new E,r=new E,s=new E,o=new E,a=new E,l=new E,c=new E,u=new E;if(t)for(let h=0,d=t.count;h<d;h+=3){const f=t.getX(h+0),p=t.getX(h+1),v=t.getX(h+2);i.fromBufferAttribute(e,f),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,v),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),o.fromBufferAttribute(n,f),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),o.add(c),a.add(c),l.add(c),n.setXYZ(f,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z)}else for(let h=0,d=e.count;h<d;h+=3)i.fromBufferAttribute(e,h+0),r.fromBufferAttribute(e,h+1),s.fromBufferAttribute(e,h+2),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),n.setXYZ(h+0,c.x,c.y,c.z),n.setXYZ(h+1,c.x,c.y,c.z),n.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const s=n[i].array,o=t.attributes[i],a=o.array,l=o.itemSize*e,c=Math.min(a.length,s.length-l);for(let u=0,h=l;u<c;u++,h++)s[h]=a[u]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)dt.fromBufferAttribute(t,e),dt.normalize(),t.setXYZ(e,dt.x,dt.y,dt.z)},toNonIndexed:function(){function t(o,a){const l=o.array,c=o.itemSize,u=o.normalized,h=new l.constructor(a.length*c);let d=0,f=0;for(let p=0,v=a.length;p<v;p++){d=a[p]*c;for(let y=0;y<c;y++)h[f++]=l[d++]}return new Ae(h,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new Ye,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=t(a,n);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,u=l.length;c<u;c++){const h=l[c],d=t(h,n);a.push(d)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const l=s[o];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(t[l]=a[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const a in n){const l=n[a],c=l.toJSON(t.data);l.name!==""&&(c.name=l.name),t.data.attributes[a]=c}const i={};let r=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=d.toJSON(t.data);d.name!==""&&(f.name=d.name),c.push(f)}c.length>0&&(i[a]=c,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t},clone:function(){return new Ye().copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const r=t.morphAttributes;for(const l in r){const c=[],u=r[l];for(let h=0,d=u.length;h<d;h++)c.push(u[h].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let l=0,c=s.length;l<c;l++){const u=s[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ml=new Fe,ti=new es,Bo=new Zn,Dn=new E,Nn=new E,zn=new E,ko=new E,Uo=new E,Ho=new E,ms=new E,gs=new E,vs=new E,Bi=new q,ki=new q,Ui=new q,Pr=new E,ys=new E;function ut(t=new Ye,e=new Wn){Me.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}ut.prototype=Object.assign(Object.create(Me.prototype),{constructor:ut,isMesh:!0,copy:function(t){return Me.prototype.copy.call(this,t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Bo.copy(n.boundingSphere),Bo.applyMatrix4(r),t.ray.intersectsSphere(Bo)===!1)||(Ml.copy(r).invert(),ti.copy(t.ray).applyMatrix4(Ml),n.boundingBox!==null&&ti.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,u=n.attributes.uv,h=n.attributes.uv2,d=n.groups,f=n.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,v=d.length;p<v;p++){const y=d[p],g=i[y.materialIndex],m=Math.max(y.start,f.start),w=Math.min(y.start+y.count,f.start+f.count);for(let S=m,M=w;S<M;S+=3){const x=o.getX(S),A=o.getX(S+1),H=o.getX(S+2);s=xs(this,g,t,ti,a,l,c,u,h,x,A,H),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,f.start),v=Math.min(o.count,f.start+f.count);for(let y=p,g=v;y<g;y+=3){const m=o.getX(y),w=o.getX(y+1),S=o.getX(y+2);s=xs(this,i,t,ti,a,l,c,u,h,m,w,S),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,v=d.length;p<v;p++){const y=d[p],g=i[y.materialIndex],m=Math.max(y.start,f.start),w=Math.min(y.start+y.count,f.start+f.count);for(let S=m,M=w;S<M;S+=3){const x=S,A=S+1,H=S+2;s=xs(this,g,t,ti,a,l,c,u,h,x,A,H),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let y=p,g=v;y<g;y+=3){const m=y,w=y+1,S=y+2;s=xs(this,i,t,ti,a,l,c,u,h,m,w,S),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,l=n.faces;let c;const u=n.faceVertexUvs[0];u.length>0&&(c=u);for(let h=0,d=l.length;h<d;h++){const f=l[h],p=o?i[f.materialIndex]:i;if(p===void 0)continue;const v=a[f.a],y=a[f.b],g=a[f.c];if(s=fh(this,p,t,ti,v,y,g,Pr),s){if(c&&c[h]){const m=c[h];Bi.copy(m[0]),ki.copy(m[1]),Ui.copy(m[2]),s.uv=_t.getUV(Pr,v,y,g,Bi,ki,Ui,new q)}s.face=f,s.faceIndex=h,e.push(s)}}}}});function fh(t,e,n,i,r,s,o,a){let l;if(e.side===vt?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==fo,a),l===null)return null;ys.copy(a),ys.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(ys);return c<n.near||c>n.far?null:{distance:c,point:ys.clone(),object:t}}function xs(t,e,n,i,r,s,o,a,l,c,u,h){Dn.fromBufferAttribute(r,c),Nn.fromBufferAttribute(r,u),zn.fromBufferAttribute(r,h);const d=t.morphTargetInfluences;if(e.morphTargets&&s&&d){ms.set(0,0,0),gs.set(0,0,0),vs.set(0,0,0);for(let p=0,v=s.length;p<v;p++){const y=d[p],g=s[p];y!==0&&(ko.fromBufferAttribute(g,c),Uo.fromBufferAttribute(g,u),Ho.fromBufferAttribute(g,h),o?(ms.addScaledVector(ko,y),gs.addScaledVector(Uo,y),vs.addScaledVector(Ho,y)):(ms.addScaledVector(ko.sub(Dn),y),gs.addScaledVector(Uo.sub(Nn),y),vs.addScaledVector(Ho.sub(zn),y)))}Dn.add(ms),Nn.add(gs),zn.add(vs)}t.isSkinnedMesh&&(t.boneTransform(c,Dn),t.boneTransform(u,Nn),t.boneTransform(h,zn));const f=fh(t,e,n,i,Dn,Nn,zn,Pr);if(f){a&&(Bi.fromBufferAttribute(a,c),ki.fromBufferAttribute(a,u),Ui.fromBufferAttribute(a,h),f.uv=_t.getUV(Pr,Dn,Nn,zn,Bi,ki,Ui,new q)),l&&(Bi.fromBufferAttribute(l,c),ki.fromBufferAttribute(l,u),Ui.fromBufferAttribute(l,h),f.uv2=_t.getUV(Pr,Dn,Nn,zn,Bi,ki,Ui,new q));const p=new ta(c,u,h);_t.getNormal(Dn,Nn,zn,p.normal),f.face=p}return f}class dh extends Ye{constructor(e=1,n=1,i=1,r=1,s=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,i,n,e,o,s,0),p("z","y","x",1,-1,i,n,-e,o,s,1),p("x","z","y",1,1,e,i,n,r,o,2),p("x","z","y",1,-1,e,i,-n,r,o,3),p("x","y","z",1,-1,e,n,i,r,s,4),p("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new We(c,3)),this.setAttribute("normal",new We(u,3)),this.setAttribute("uv",new We(h,2));function p(v,y,g,m,w,S,M,x,A,H,O){const J=S/A,P=M/H,N=S/2,C=M/2,I=x/2,R=A+1,z=H+1;let W=0,Q=0;const se=new E;for(let ce=0;ce<z;ce++){const ue=ce*P-C;for(let Le=0;Le<R;Le++){const Pe=Le*J-N;se[v]=Pe*m,se[y]=ue*w,se[g]=I,c.push(se.x,se.y,se.z),se[v]=0,se[y]=0,se[g]=x>0?1:-1,u.push(se.x,se.y,se.z),h.push(Le/A),h.push(1-ce/H),W+=1}}for(let ce=0;ce<H;ce++)for(let ue=0;ue<A;ue++){const Le=d+ue+R*ce,Pe=d+ue+R*(ce+1),qe=d+(ue+1)+R*(ce+1),V=d+(ue+1)+R*ce;l.push(Le,Pe,V),l.push(Pe,qe,V),Q+=6}a.addGroup(f,Q,O),f+=Q,d+=W}}}function Yi(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function yt(t){const e={};for(let n=0;n<t.length;n++){const i=Yi(t[n]);for(const r in i)e[r]=i[r]}return e}const nd={clone:Yi,merge:yt};var id=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,rd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function wt(t){Te.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=id,this.fragmentShader=rd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}wt.prototype=Object.create(Te.prototype);wt.prototype.constructor=wt;wt.prototype.isShaderMaterial=!0;wt.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Yi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this};wt.prototype.toJSON=function(t){const e=Te.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(t).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e};function jn(){Me.call(this),this.type="Camera",this.matrixWorldInverse=new Fe,this.projectionMatrix=new Fe,this.projectionMatrixInverse=new Fe}jn.prototype=Object.assign(Object.create(Me.prototype),{constructor:jn,isCamera:!0,copy:function(t,e){return Me.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new E),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Me.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){Me.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function pt(t=50,e=1,n=.1,i=2e3){jn.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}pt.prototype=Object.assign(Object.create(jn.prototype),{constructor:pt,isPerspectiveCamera:!0,copy:function(t,e){return jn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=ze.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(ze.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return ze.RAD2DEG*2*Math.atan(Math.tan(ze.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(ze.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*n/l,i*=s.width/a,n*=s.height/l}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Me.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const Ai=90,Li=1;function Zi(t,e,n){if(Me.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new pt(Ai,Li,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new E(1,0,0)),this.add(i);const r=new pt(Ai,Li,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new E(-1,0,0)),this.add(r);const s=new pt(Ai,Li,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new E(0,1,0)),this.add(s);const o=new pt(Ai,Li,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new E(0,-1,0)),this.add(o);const a=new pt(Ai,Li,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new E(0,0,1)),this.add(a);const l=new pt(Ai,Li,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new E(0,0,-1)),this.add(l),this.update=function(c,u){this.parent===null&&this.updateMatrixWorld();const h=c.xr.enabled,d=c.getRenderTarget();c.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,c.setRenderTarget(n,0),c.render(u,i),c.setRenderTarget(n,1),c.render(u,r),c.setRenderTarget(n,2),c.render(u,s),c.setRenderTarget(n,3),c.render(u,o),c.setRenderTarget(n,4),c.render(u,a),n.texture.generateMipmaps=f,c.setRenderTarget(n,5),c.render(u,l),c.setRenderTarget(d),c.xr.enabled=h}}Zi.prototype=Object.create(Me.prototype);Zi.prototype.constructor=Zi;function qn(t,e,n,i,r,s,o,a,l,c){t=t!==void 0?t:[],e=e!==void 0?e:Na,o=o!==void 0?o:si,$e.call(this,t,e,n,i,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}qn.prototype=Object.create($e.prototype);qn.prototype.constructor=qn;qn.prototype.isCubeTexture=!0;Object.defineProperty(qn.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});function oi(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),Qt.call(this,t,t,e),e=e||{},this.texture=new qn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}oi.prototype=Object.create(Qt.prototype);oi.prototype.constructor=oi;oi.prototype.isWebGLCubeRenderTarget=!0;oi.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=Kt,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new dh(5,5,5),r=new wt({name:"CubemapFromEquirect",uniforms:Yi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:vt,blending:Er});r.uniforms.tEquirect.value=e;const s=new ut(i,r),o=e.minFilter;return e.minFilter===mo&&(e.minFilter=bt),new Zi(1,10,this).update(t,s),e.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};oi.prototype.clear=function(t,e,n,i){const r=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,i);t.setRenderTarget(r)};function Ji(t,e,n,i,r,s,o,a,l,c,u,h){$e.call(this,null,s,o,a,l,c,i,r,u,h),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=l!==void 0?l:St,this.minFilter=c!==void 0?c:St,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Ji.prototype=Object.create($e.prototype);Ji.prototype.constructor=Ji;Ji.prototype.isDataTexture=!0;const Ci=new Zn,_s=new E;class vo{constructor(e,n,i,r,s,o){this.planes=[e!==void 0?e:new bn,n!==void 0?n:new bn,i!==void 0?i:new bn,r!==void 0?r:new bn,s!==void 0?s:new bn,o!==void 0?o:new bn]}set(e,n,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(n),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],h=i[7],d=i[8],f=i[9],p=i[10],v=i[11],y=i[12],g=i[13],m=i[14],w=i[15];return n[0].setComponents(a-r,h-l,v-d,w-y).normalize(),n[1].setComponents(a+r,h+l,v+d,w+y).normalize(),n[2].setComponents(a+s,h+c,v+f,w+g).normalize(),n[3].setComponents(a-s,h-c,v-f,w-g).normalize(),n[4].setComponents(a-o,h-u,v-p,w-m).normalize(),n[5].setComponents(a+o,h+u,v+p,w+m).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),Ci.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ci)}intersectsSprite(e){return Ci.center.set(0,0,0),Ci.radius=.7071067811865476,Ci.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ci)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(_s.x=r.normal.x>0?e.max.x:e.min.x,_s.y=r.normal.y>0?e.max.y:e.min.y,_s.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(_s)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}}function ph(){let t=null,e=!1,n=null,i=null;function r(s,o){n(s,o),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function sd(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,u){const h=c.array,d=c.usage,f=t.createBuffer();t.bindBuffer(u,f),t.bufferData(u,h,d),c.onUploadCallback();let p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?n?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:h instanceof Uint8Array&&(p=5121),{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const d=u.array,f=u.updateRange;t.bindBuffer(h,c),f.count===-1?t.bufferSubData(h,0,d):(n?t.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):t.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(t.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=i.get(c);(!d||d.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h===void 0?i.set(c,r(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class od extends Ye{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const s=e/2,o=n/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,h=e/a,d=n/l,f=[],p=[],v=[],y=[];for(let g=0;g<u;g++){const m=g*d-o;for(let w=0;w<c;w++){const S=w*h-s;p.push(S,-m,0),v.push(0,0,1),y.push(w/a),y.push(1-g/l)}}for(let g=0;g<l;g++)for(let m=0;m<a;m++){const w=m+c*g,S=m+c*(g+1),M=m+1+c*(g+1),x=m+1+c*g;f.push(w,S,x),f.push(S,M,x)}this.setIndex(f),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(v,3)),this.setAttribute("uv",new We(y,2))}}var ad=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,ld=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cd=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,hd=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,ud=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,fd="vec3 transformed = vec3( position );",dd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,pd=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,md=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,vd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,yd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,xd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_d=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,bd=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,wd=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Md=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Sd=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Td=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ed=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Ad=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ld=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Cd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Pd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Rd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Id=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Dd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Nd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,zd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Fd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Od=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Bd=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,kd=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,Ud=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Hd=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Gd=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Vd=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,Wd=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,jd=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,qd=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,Xd=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,Yd=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Zd=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Jd=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Kd=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Qd=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,$d=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ep=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,tp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,np=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,ip=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,rp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,sp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,op=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,ap=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,lp=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,cp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,hp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,up=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,fp=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,dp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,pp=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,mp=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,gp=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,vp=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,yp=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,xp=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,_p=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,bp=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,wp=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Mp=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sp=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Tp=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Ep=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Ap=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Lp=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Cp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Pp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Rp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Ip=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Dp=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Np=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,zp=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Fp=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Op=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Bp=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,kp=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Up=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Hp=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,Gp=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,Vp=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Wp=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,jp=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,qp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Xp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Yp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Zp=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,Jp=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Kp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Qp=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$p=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,em=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,tm=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,nm=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,im=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,rm=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,sm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,om=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,am=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lm=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cm=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,hm=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,um=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fm=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dm=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,pm=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mm=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gm=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vm=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ym=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xm=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_m=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,bm=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,wm=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Mm=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Sm=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Tm=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Em=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Am=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Ge={alphamap_fragment:ad,alphamap_pars_fragment:ld,alphatest_fragment:cd,aomap_fragment:hd,aomap_pars_fragment:ud,begin_vertex:fd,beginnormal_vertex:dd,bsdfs:pd,bumpmap_pars_fragment:md,clipping_planes_fragment:gd,clipping_planes_pars_fragment:vd,clipping_planes_pars_vertex:yd,clipping_planes_vertex:xd,color_fragment:_d,color_pars_fragment:bd,color_pars_vertex:wd,color_vertex:Md,common:Sd,cube_uv_reflection_fragment:Td,defaultnormal_vertex:Ed,displacementmap_pars_vertex:Ad,displacementmap_vertex:Ld,emissivemap_fragment:Cd,emissivemap_pars_fragment:Pd,encodings_fragment:Rd,encodings_pars_fragment:Id,envmap_fragment:Dd,envmap_common_pars_fragment:Nd,envmap_pars_fragment:zd,envmap_pars_vertex:Fd,envmap_physical_pars_fragment:Xd,envmap_vertex:Od,fog_vertex:Bd,fog_pars_vertex:kd,fog_fragment:Ud,fog_pars_fragment:Hd,gradientmap_pars_fragment:Gd,lightmap_fragment:Vd,lightmap_pars_fragment:Wd,lights_lambert_vertex:jd,lights_pars_begin:qd,lights_toon_fragment:Yd,lights_toon_pars_fragment:Zd,lights_phong_fragment:Jd,lights_phong_pars_fragment:Kd,lights_physical_fragment:Qd,lights_physical_pars_fragment:$d,lights_fragment_begin:ep,lights_fragment_maps:tp,lights_fragment_end:np,logdepthbuf_fragment:ip,logdepthbuf_pars_fragment:rp,logdepthbuf_pars_vertex:sp,logdepthbuf_vertex:op,map_fragment:ap,map_pars_fragment:lp,map_particle_fragment:cp,map_particle_pars_fragment:hp,metalnessmap_fragment:up,metalnessmap_pars_fragment:fp,morphnormal_vertex:dp,morphtarget_pars_vertex:pp,morphtarget_vertex:mp,normal_fragment_begin:gp,normal_fragment_maps:vp,normalmap_pars_fragment:yp,clearcoat_normal_fragment_begin:xp,clearcoat_normal_fragment_maps:_p,clearcoat_pars_fragment:bp,packing:wp,premultiplied_alpha_fragment:Mp,project_vertex:Sp,dithering_fragment:Tp,dithering_pars_fragment:Ep,roughnessmap_fragment:Ap,roughnessmap_pars_fragment:Lp,shadowmap_pars_fragment:Cp,shadowmap_pars_vertex:Pp,shadowmap_vertex:Rp,shadowmask_pars_fragment:Ip,skinbase_vertex:Dp,skinning_pars_vertex:Np,skinning_vertex:zp,skinnormal_vertex:Fp,specularmap_fragment:Op,specularmap_pars_fragment:Bp,tonemapping_fragment:kp,tonemapping_pars_fragment:Up,transmissionmap_fragment:Hp,transmissionmap_pars_fragment:Gp,uv_pars_fragment:Vp,uv_pars_vertex:Wp,uv_vertex:jp,uv2_pars_fragment:qp,uv2_pars_vertex:Xp,uv2_vertex:Yp,worldpos_vertex:Zp,background_frag:Jp,background_vert:Kp,cube_frag:Qp,cube_vert:$p,depth_frag:em,depth_vert:tm,distanceRGBA_frag:nm,distanceRGBA_vert:im,equirect_frag:rm,equirect_vert:sm,linedashed_frag:om,linedashed_vert:am,meshbasic_frag:lm,meshbasic_vert:cm,meshlambert_frag:hm,meshlambert_vert:um,meshmatcap_frag:fm,meshmatcap_vert:dm,meshtoon_frag:pm,meshtoon_vert:mm,meshphong_frag:gm,meshphong_vert:vm,meshphysical_frag:ym,meshphysical_vert:xm,normal_frag:_m,normal_vert:bm,points_frag:wm,points_vert:Mm,shadow_frag:Sm,shadow_vert:Tm,sprite_frag:Em,sprite_vert:Am},le={common:{diffuse:{value:new _e(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new At},uv2Transform:{value:new At},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _e(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new At}},sprite:{diffuse:{value:new _e(15658734)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new At}}},nn={basic:{uniforms:yt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.fog]),vertexShader:Ge.meshbasic_vert,fragmentShader:Ge.meshbasic_frag},lambert:{uniforms:yt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.fog,le.lights,{emissive:{value:new _e(0)}}]),vertexShader:Ge.meshlambert_vert,fragmentShader:Ge.meshlambert_frag},phong:{uniforms:yt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.fog,le.lights,{emissive:{value:new _e(0)},specular:{value:new _e(1118481)},shininess:{value:30}}]),vertexShader:Ge.meshphong_vert,fragmentShader:Ge.meshphong_frag},standard:{uniforms:yt([le.common,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.roughnessmap,le.metalnessmap,le.fog,le.lights,{emissive:{value:new _e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ge.meshphysical_vert,fragmentShader:Ge.meshphysical_frag},toon:{uniforms:yt([le.common,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.gradientmap,le.fog,le.lights,{emissive:{value:new _e(0)}}]),vertexShader:Ge.meshtoon_vert,fragmentShader:Ge.meshtoon_frag},matcap:{uniforms:yt([le.common,le.bumpmap,le.normalmap,le.displacementmap,le.fog,{matcap:{value:null}}]),vertexShader:Ge.meshmatcap_vert,fragmentShader:Ge.meshmatcap_frag},points:{uniforms:yt([le.points,le.fog]),vertexShader:Ge.points_vert,fragmentShader:Ge.points_frag},dashed:{uniforms:yt([le.common,le.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ge.linedashed_vert,fragmentShader:Ge.linedashed_frag},depth:{uniforms:yt([le.common,le.displacementmap]),vertexShader:Ge.depth_vert,fragmentShader:Ge.depth_frag},normal:{uniforms:yt([le.common,le.bumpmap,le.normalmap,le.displacementmap,{opacity:{value:1}}]),vertexShader:Ge.normal_vert,fragmentShader:Ge.normal_frag},sprite:{uniforms:yt([le.sprite,le.fog]),vertexShader:Ge.sprite_vert,fragmentShader:Ge.sprite_frag},background:{uniforms:{uvTransform:{value:new At},t2D:{value:null}},vertexShader:Ge.background_vert,fragmentShader:Ge.background_frag},cube:{uniforms:yt([le.envmap,{opacity:{value:1}}]),vertexShader:Ge.cube_vert,fragmentShader:Ge.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ge.equirect_vert,fragmentShader:Ge.equirect_frag},distanceRGBA:{uniforms:yt([le.common,le.displacementmap,{referencePosition:{value:new E},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ge.distanceRGBA_vert,fragmentShader:Ge.distanceRGBA_frag},shadow:{uniforms:yt([le.lights,le.fog,{color:{value:new _e(0)},opacity:{value:1}}]),vertexShader:Ge.shadow_vert,fragmentShader:Ge.shadow_frag}};nn.physical={uniforms:yt([nn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new _e(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ge.meshphysical_vert,fragmentShader:Ge.meshphysical_frag};function Lm(t,e,n,i,r){const s=new _e(0);let o=0,a,l,c=null,u=0,h=null;function d(p,v,y,g){let m=v.isScene===!0?v.background:null;m&&m.isTexture&&(m=e.get(m));const w=t.xr,S=w.getSession&&w.getSession();S&&S.environmentBlendMode==="additive"&&(m=null),m===null?f(s,o):m&&m.isColor&&(f(m,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===Fa)?(l===void 0&&(l=new ut(new dh(1,1,1),new wt({name:"BackgroundCubeMaterial",uniforms:Yi(nn.cube.uniforms),vertexShader:nn.cube.vertexShader,fragmentShader:nn.cube.fragmentShader,side:vt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(M,x,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),m.isWebGLCubeRenderTarget&&(m=m.texture),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(c!==m||u!==m.version||h!==t.toneMapping)&&(l.material.needsUpdate=!0,c=m,u=m.version,h=t.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new ut(new od(2,2),new wt({name:"BackgroundMaterial",uniforms:Yi(nn.background.uniforms),vertexShader:nn.background.vertexShader,fragmentShader:nn.background.fragmentShader,side:uo,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||u!==m.version||h!==t.toneMapping)&&(a.material.needsUpdate=!0,c=m,u=m.version,h=t.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function f(p,v){n.buffers.color.setClear(p.r,p.g,p.b,v,r)}return{getClearColor:function(){return s},setClearColor:function(p,v=1){s.set(p),o=v,f(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,f(s,o)},render:d}}function Cm(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=v(null);let c=l;function u(C,I,R,z,W){let Q=!1;if(o){const se=p(z,R,I);c!==se&&(c=se,d(c.object)),Q=y(z,W),Q&&g(z,W)}else{const se=I.wireframe===!0;(c.geometry!==z.id||c.program!==R.id||c.wireframe!==se)&&(c.geometry=z.id,c.program=R.id,c.wireframe=se,Q=!0)}C.isInstancedMesh===!0&&(Q=!0),W!==null&&n.update(W,34963),Q&&(A(C,I,R,z),W!==null&&t.bindBuffer(34963,n.get(W).buffer))}function h(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function d(C){return i.isWebGL2?t.bindVertexArray(C):s.bindVertexArrayOES(C)}function f(C){return i.isWebGL2?t.deleteVertexArray(C):s.deleteVertexArrayOES(C)}function p(C,I,R){const z=R.wireframe===!0;let W=a[C.id];W===void 0&&(W={},a[C.id]=W);let Q=W[I.id];Q===void 0&&(Q={},W[I.id]=Q);let se=Q[z];return se===void 0&&(se=v(h()),Q[z]=se),se}function v(C){const I=[],R=[],z=[];for(let W=0;W<r;W++)I[W]=0,R[W]=0,z[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:R,attributeDivisors:z,object:C,attributes:{},index:null}}function y(C,I){const R=c.attributes,z=C.attributes;let W=0;for(const Q in z){const se=R[Q],ce=z[Q];if(se===void 0||se.attribute!==ce||se.data!==ce.data)return!0;W++}return c.attributesNum!==W||c.index!==I}function g(C,I){const R={},z=C.attributes;let W=0;for(const Q in z){const se=z[Q],ce={};ce.attribute=se,se.data&&(ce.data=se.data),R[Q]=ce,W++}c.attributes=R,c.attributesNum=W,c.index=I}function m(){const C=c.newAttributes;for(let I=0,R=C.length;I<R;I++)C[I]=0}function w(C){S(C,0)}function S(C,I){const R=c.newAttributes,z=c.enabledAttributes,W=c.attributeDivisors;R[C]=1,z[C]===0&&(t.enableVertexAttribArray(C),z[C]=1),W[C]!==I&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](C,I),W[C]=I)}function M(){const C=c.newAttributes,I=c.enabledAttributes;for(let R=0,z=I.length;R<z;R++)I[R]!==C[R]&&(t.disableVertexAttribArray(R),I[R]=0)}function x(C,I,R,z,W,Q){i.isWebGL2===!0&&(R===5124||R===5125)?t.vertexAttribIPointer(C,I,R,W,Q):t.vertexAttribPointer(C,I,R,z,W,Q)}function A(C,I,R,z){if(i.isWebGL2===!1&&(C.isInstancedMesh||z.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;m();const W=z.attributes,Q=R.getAttributes(),se=I.defaultAttributeValues;for(const ce in Q){const ue=Q[ce];if(ue>=0){const Le=W[ce];if(Le!==void 0){const Pe=Le.normalized,qe=Le.itemSize,V=n.get(Le);if(V===void 0)continue;const at=V.buffer,ye=V.type,Ee=V.bytesPerElement;if(Le.isInterleavedBufferAttribute){const Se=Le.data,Ve=Se.stride,De=Le.offset;Se&&Se.isInstancedInterleavedBuffer?(S(ue,Se.meshPerAttribute),z._maxInstanceCount===void 0&&(z._maxInstanceCount=Se.meshPerAttribute*Se.count)):w(ue),t.bindBuffer(34962,at),x(ue,qe,ye,Pe,Ve*Ee,De*Ee)}else Le.isInstancedBufferAttribute?(S(ue,Le.meshPerAttribute),z._maxInstanceCount===void 0&&(z._maxInstanceCount=Le.meshPerAttribute*Le.count)):w(ue),t.bindBuffer(34962,at),x(ue,qe,ye,Pe,0,0)}else if(ce==="instanceMatrix"){const Pe=n.get(C.instanceMatrix);if(Pe===void 0)continue;const qe=Pe.buffer,V=Pe.type;S(ue+0,1),S(ue+1,1),S(ue+2,1),S(ue+3,1),t.bindBuffer(34962,qe),t.vertexAttribPointer(ue+0,4,V,!1,64,0),t.vertexAttribPointer(ue+1,4,V,!1,64,16),t.vertexAttribPointer(ue+2,4,V,!1,64,32),t.vertexAttribPointer(ue+3,4,V,!1,64,48)}else if(ce==="instanceColor"){const Pe=n.get(C.instanceColor);if(Pe===void 0)continue;const qe=Pe.buffer,V=Pe.type;S(ue,1),t.bindBuffer(34962,qe),t.vertexAttribPointer(ue,3,V,!1,12,0)}else if(se!==void 0){const Pe=se[ce];if(Pe!==void 0)switch(Pe.length){case 2:t.vertexAttrib2fv(ue,Pe);break;case 3:t.vertexAttrib3fv(ue,Pe);break;case 4:t.vertexAttrib4fv(ue,Pe);break;default:t.vertexAttrib1fv(ue,Pe)}}}}M()}function H(){P();for(const C in a){const I=a[C];for(const R in I){const z=I[R];for(const W in z)f(z[W].object),delete z[W];delete I[R]}delete a[C]}}function O(C){if(a[C.id]===void 0)return;const I=a[C.id];for(const R in I){const z=I[R];for(const W in z)f(z[W].object),delete z[W];delete I[R]}delete a[C.id]}function J(C){for(const I in a){const R=a[I];if(R[C.id]===void 0)continue;const z=R[C.id];for(const W in z)f(z[W].object),delete z[W];delete R[C.id]}}function P(){N(),c!==l&&(c=l,d(c.object))}function N(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:P,resetDefaultState:N,dispose:H,releaseStatesOfGeometry:O,releaseStatesOfProgram:J,initAttributes:m,enableAttribute:w,disableUnusedAttributes:M}}function Pm(t,e,n,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,u){t.drawArrays(s,c,u),n.update(u,s,1)}function l(c,u,h){if(h===0)return;let d,f;if(r)d=t,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](s,c,u,h),n.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function Rm(t,e,n){let i;function r(){if(i!==void 0)return i;const x=e.get("EXT_texture_filter_anisotropic");return x!==null?i=t.getParameter(x.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(x){if(x==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";x="mediump"}return x==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&t instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=n.logarithmicDepthBuffer===!0,u=t.getParameter(34930),h=t.getParameter(35660),d=t.getParameter(3379),f=t.getParameter(34076),p=t.getParameter(34921),v=t.getParameter(36347),y=t.getParameter(36348),g=t.getParameter(36349),m=h>0,w=o||!!e.get("OES_texture_float"),S=m&&w,M=o?t.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:v,maxVaryings:y,maxFragmentUniforms:g,vertexTextures:m,floatFragmentTextures:w,floatVertexTextures:S,maxSamples:M}}function Im(t){const e=this;let n=null,i=0,r=!1,s=!1;const o=new bn,a=new At,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||i!==0||r;return r=d,n=u(h,f,0),i=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,v=h.clipIntersection,y=h.clipShadows,g=t.get(h);if(!r||p===null||p.length===0||s&&!y)s?u(null):c();else{const m=s?0:i,w=m*4;let S=g.clippingState||null;l.value=S,S=u(p,d,w,f);for(let M=0;M!==w;++M)S[M]=n[M];g.clippingState=S,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=m}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,d,f,p){const v=h!==null?h.length:0;let y=null;if(v!==0){if(y=l.value,p!==!0||y===null){const g=f+v*4,m=d.matrixWorldInverse;a.getNormalMatrix(m),(y===null||y.length<g)&&(y=new Float32Array(g));for(let w=0,S=f;w!==v;++w,S+=4)o.copy(h[w]).applyMatrix4(m,a),o.normal.toArray(y,S),y[S+3]=o.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,y}}function Dm(t){let e=new WeakMap;function n(o,a){return a===Qa?o.mapping=Na:a===$a&&(o.mapping=za),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Qa||a===$a)if(e.has(o)){const l=e.get(o).texture;return n(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=t.getRenderList(),u=t.getRenderTarget(),h=new oi(l.height/2);return h.fromEquirectangularTexture(t,o),e.set(o,h),t.setRenderTarget(u),t.setRenderList(c),o.addEventListener("dispose",r),n(h.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}function Nm(t){const e={};return{has:function(n){if(e[n]!==void 0)return e[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]}}}function zm(t,e,n,i){const r=new WeakMap,s=new WeakMap;function o(h){const d=h.target,f=r.get(d);f.index!==null&&e.remove(f.index);for(const v in f.attributes)e.remove(f.attributes[v]);d.removeEventListener("dispose",o),r.delete(d);const p=s.get(f);p&&(e.remove(p),s.delete(f)),i.releaseStatesOfGeometry(f),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,n.memory.geometries--}function a(h,d){let f=r.get(d);return f||(d.addEventListener("dispose",o),d.isBufferGeometry?f=d:d.isGeometry&&(d._bufferGeometry===void 0&&(d._bufferGeometry=new Ye().setFromObject(h)),f=d._bufferGeometry),r.set(d,f),n.memory.geometries++,f)}function l(h){const d=h.attributes;for(const p in d)e.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const v=f[p];for(let y=0,g=v.length;y<g;y++)e.update(v[y],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let v=0;if(f!==null){const m=f.array;v=f.version;for(let w=0,S=m.length;w<S;w+=3){const M=m[w+0],x=m[w+1],A=m[w+2];d.push(M,x,x,A,A,M)}}else{const m=p.array;v=p.version;for(let w=0,S=m.length/3-1;w<S;w+=3){const M=w+0,x=w+1,A=w+2;d.push(M,x,x,A,A,M)}}const y=new(uh(d)>65535?kr:Br)(d,1);y.version=v;const g=s.get(h);g&&e.remove(g),s.set(h,y)}function u(h){const d=s.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function Fm(t,e,n,i){const r=i.isWebGL2;let s;function o(d){s=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){t.drawElements(s,f,a,d*l),n.update(f,s,1)}function h(d,f,p){if(p===0)return;let v,y;if(r)v=t,y="drawElementsInstanced";else if(v=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[y](s,f,a,d*l,p),n.update(f,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function Om(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(n.calls++,o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function Bm(t,e){return t[0]-e[0]}function km(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Um(t){const e={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,l){const c=s.morphTargetInfluences,u=c===void 0?0:c.length;let h=e[o.id];if(h===void 0){h=[];for(let y=0;y<u;y++)h[y]=[y,0];e[o.id]=h}for(let y=0;y<u;y++){const g=h[y];g[0]=y,g[1]=c[y]}h.sort(km);for(let y=0;y<8;y++)y<u&&h[y][1]?(i[y][0]=h[y][0],i[y][1]=h[y][1]):(i[y][0]=Number.MAX_SAFE_INTEGER,i[y][1]=0);i.sort(Bm);const d=a.morphTargets&&o.morphAttributes.position,f=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let y=0;y<8;y++){const g=i[y],m=g[0],w=g[1];m!==Number.MAX_SAFE_INTEGER&&w?(d&&o.getAttribute("morphTarget"+y)!==d[m]&&o.setAttribute("morphTarget"+y,d[m]),f&&o.getAttribute("morphNormal"+y)!==f[m]&&o.setAttribute("morphNormal"+y,f[m]),n[y]=w,p+=w):(d&&o.hasAttribute("morphTarget"+y)===!0&&o.deleteAttribute("morphTarget"+y),f&&o.hasAttribute("morphNormal"+y)===!0&&o.deleteAttribute("morphNormal"+y),n[y]=0)}const v=o.morphTargetsRelative?1:1-p;l.getUniforms().setValue(t,"morphTargetBaseInfluence",v),l.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:r}}function Hm(t,e,n,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);return r.get(h)!==c&&(u.isGeometry&&h.updateFromObject(l),e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:s,dispose:o}}function Ur(t=null,e=1,n=1,i=1){$e.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=St,this.minFilter=St,this.wrapR=Rt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ur.prototype=Object.create($e.prototype);Ur.prototype.constructor=Ur;Ur.prototype.isDataTexture2DArray=!0;function Hr(t=null,e=1,n=1,i=1){$e.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=St,this.minFilter=St,this.wrapR=Rt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Hr.prototype=Object.create($e.prototype);Hr.prototype.constructor=Hr;Hr.prototype.isDataTexture3D=!0;const mh=new $e,Gm=new Ur,Vm=new Hr,gh=new qn,Sl=[],Tl=[],El=new Float32Array(16),Al=new Float32Array(9),Ll=new Float32Array(4);function hr(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=Sl[r];if(s===void 0&&(s=new Float32Array(r),Sl[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=n,t[o].toArray(s,a)}return s}function Gt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Dt(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function vh(t,e){let n=Tl[e];n===void 0&&(n=new Int32Array(e),Tl[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Wm(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function jm(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Gt(n,e))return;t.uniform2fv(this.addr,e),Dt(n,e)}}function qm(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Gt(n,e))return;t.uniform3fv(this.addr,e),Dt(n,e)}}function Xm(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Gt(n,e))return;t.uniform4fv(this.addr,e),Dt(n,e)}}function Ym(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Gt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Dt(n,e)}else{if(Gt(n,i))return;Ll.set(i),t.uniformMatrix2fv(this.addr,!1,Ll),Dt(n,i)}}function Zm(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Gt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Dt(n,e)}else{if(Gt(n,i))return;Al.set(i),t.uniformMatrix3fv(this.addr,!1,Al),Dt(n,i)}}function Jm(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Gt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Dt(n,e)}else{if(Gt(n,i))return;El.set(i),t.uniformMatrix4fv(this.addr,!1,El),Dt(n,i)}}function Km(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||mh,r)}function Qm(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Gm,r)}function $m(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Vm,r)}function eg(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||gh,r)}function tg(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ng(t,e){const n=this.cache;Gt(n,e)||(t.uniform2iv(this.addr,e),Dt(n,e))}function ig(t,e){const n=this.cache;Gt(n,e)||(t.uniform3iv(this.addr,e),Dt(n,e))}function rg(t,e){const n=this.cache;Gt(n,e)||(t.uniform4iv(this.addr,e),Dt(n,e))}function sg(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function og(t){switch(t){case 5126:return Wm;case 35664:return jm;case 35665:return qm;case 35666:return Xm;case 35674:return Ym;case 35675:return Zm;case 35676:return Jm;case 5124:case 35670:return tg;case 35667:case 35671:return ng;case 35668:case 35672:return ig;case 35669:case 35673:return rg;case 5125:return sg;case 35678:case 36198:case 36298:case 36306:case 35682:return Km;case 35679:case 36299:case 36307:return $m;case 35680:case 36300:case 36308:case 36293:return eg;case 36289:case 36303:case 36311:case 36292:return Qm}}function ag(t,e){t.uniform1fv(this.addr,e)}function lg(t,e){t.uniform1iv(this.addr,e)}function cg(t,e){t.uniform2iv(this.addr,e)}function hg(t,e){t.uniform3iv(this.addr,e)}function ug(t,e){t.uniform4iv(this.addr,e)}function fg(t,e){const n=hr(e,this.size,2);t.uniform2fv(this.addr,n)}function dg(t,e){const n=hr(e,this.size,3);t.uniform3fv(this.addr,n)}function pg(t,e){const n=hr(e,this.size,4);t.uniform4fv(this.addr,n)}function mg(t,e){const n=hr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function gg(t,e){const n=hr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function vg(t,e){const n=hr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function yg(t,e,n){const i=e.length,r=vh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(e[s]||mh,r[s])}function xg(t,e,n){const i=e.length,r=vh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(e[s]||gh,r[s])}function _g(t){switch(t){case 5126:return ag;case 35664:return fg;case 35665:return dg;case 35666:return pg;case 35674:return mg;case 35675:return gg;case 35676:return vg;case 5124:case 35670:return lg;case 35667:case 35671:return cg;case 35668:case 35672:return hg;case 35669:case 35673:return ug;case 35678:case 36198:case 36298:case 36306:case 35682:return yg;case 35680:case 36300:case 36308:case 36293:return xg}}function bg(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=og(e.type)}function yh(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=_g(e.type)}yh.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Dt(e,t)};function xh(t){this.id=t,this.seq=[],this.map={}}xh.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(t,e[o.id],n)}};const Go=/(\w+)(\])?(\[|\.)?/g;function Cl(t,e){t.seq.push(e),t.map[e.id]=e}function wg(t,e,n){const i=t.name,r=i.length;for(Go.lastIndex=0;;){const s=Go.exec(i),o=Go.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Cl(n,c===void 0?new bg(a,t,e):new yh(a,t,e));break}else{let h=n.map[a];h===void 0&&(h=new xh(a),Cl(n,h)),n=h}}}function Hn(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),s=t.getUniformLocation(e,r.name);wg(r,s,this)}}Hn.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)};Hn.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};Hn.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(t,a.value,i)}};Hn.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.id in e&&n.push(s)}return n};function Pl(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let Mg=0;function Sg(t){const e=t.split(`
`);for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function _h(t){switch(t){case $r:return["Linear","( value )"];case lh:return["sRGB","( value )"];case Df:return["RGBE","( value )"];case zf:return["RGBM","( value, 7.0 )"];case Ff:return["RGBM","( value, 16.0 )"];case Of:return["RGBD","( value, 256.0 )"];case If:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Nf:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Rl(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Sg(s)}function yr(t,e){const n=_h(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Tg(t,e){const n=_h(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Eg(t,e){let n;switch(e){case Pu:n="Linear";break;case Ru:n="Reinhard";break;case Iu:n="OptimizedCineon";break;case Du:n="ACESFilmic";break;case Nu:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ag(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Sr).join(`
`)}function Lg(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function Cg(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const o=t.getActiveAttrib(e,r).name;n[o]=t.getAttribLocation(e,o)}return n}function Sr(t){return t!==""}function Il(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Dl(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Pg=/^[ \t]*#include +<([\w\d./]+)>/gm;function la(t){return t.replace(Pg,Rg)}function Rg(t,e){const n=Ge[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return la(n)}const Ig=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Dg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nl(t){return t.replace(Dg,bh).replace(Ig,Ng)}function Ng(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),bh(t,e,n,i)}function bh(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function zl(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function zg(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===nh?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===lu?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Mr&&(e="SHADOWMAP_TYPE_VSM"),e}function Fg(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Na:case za:e="ENVMAP_TYPE_CUBE";break;case Fa:case Oa:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Og(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case za:case Oa:e="ENVMAP_MODE_REFRACTION";break}return e}function Bg(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case po:e="ENVMAP_BLENDING_MULTIPLY";break;case Lu:e="ENVMAP_BLENDING_MIX";break;case Cu:e="ENVMAP_BLENDING_ADD";break}return e}function kg(t,e,n,i){const r=t.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=zg(n),c=Fg(n),u=Og(n),h=Bg(n),d=t.gammaFactor>0?t.gammaFactor:1,f=n.isWebGL2?"":Ag(n),p=Lg(s),v=r.createProgram();let y,g,m=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=[p].filter(Sr).join(`
`),y.length>0&&(y+=`
`),g=[f,p].filter(Sr).join(`
`),g.length>0&&(g+=`
`)):(y=[zl(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Sr).join(`
`),g=[f,zl(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Lr?"#define TONE_MAPPING":"",n.toneMapping!==Lr?Ge.tonemapping_pars_fragment:"",n.toneMapping!==Lr?Eg("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ge.encodings_pars_fragment,n.map?yr("mapTexelToLinear",n.mapEncoding):"",n.matcap?yr("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?yr("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?yr("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?yr("lightMapTexelToLinear",n.lightMapEncoding):"",Tg("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Sr).join(`
`)),o=la(o),o=Il(o,n),o=Dl(o,n),a=la(a),a=Il(a,n),a=Dl(a,n),o=Nl(o),a=Nl(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,y=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===fl?"":"out highp vec4 pc_fragColor;",n.glslVersion===fl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const w=m+y+o,S=m+g+a,M=Pl(r,35633,w),x=Pl(r,35632,S);if(r.attachShader(v,M),r.attachShader(v,x),n.index0AttributeName!==void 0?r.bindAttribLocation(v,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v),t.debug.checkShaderErrors){const O=r.getProgramInfoLog(v).trim(),J=r.getShaderInfoLog(M).trim(),P=r.getShaderInfoLog(x).trim();let N=!0,C=!0;if(r.getProgramParameter(v,35714)===!1){N=!1;const I=Rl(r,M,"vertex"),R=Rl(r,x,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(v,35715),"gl.getProgramInfoLog",O,I,R)}else O!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",O):(J===""||P==="")&&(C=!1);C&&(this.diagnostics={runnable:N,programLog:O,vertexShader:{log:J,prefix:y},fragmentShader:{log:P,prefix:g}})}r.deleteShader(M),r.deleteShader(x);let A;this.getUniforms=function(){return A===void 0&&(A=new Hn(r,v)),A};let H;return this.getAttributes=function(){return H===void 0&&(H=Cg(r,v)),H},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.name=n.shaderName,this.id=Mg++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=M,this.fragmentShader=x,this}function Ug(t,e,n,i,r,s){const o=[],a=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,u=i.maxVertexUniforms,h=i.vertexTextures;let d=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function v(x){const H=x.skeleton.bones;if(c)return 1024;{const J=Math.floor((u-20)/4),P=Math.min(J,H.length);return P<H.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+H.length+" bones. This GPU supports "+P+"."),0):P}}function y(x){let A;return x&&x.isTexture?A=x.encoding:x&&x.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),A=x.texture.encoding):A=$r,A}function g(x,A,H,O,J){const P=O.fog,N=x.isMeshStandardMaterial?O.environment:null,C=e.get(x.envMap||N),I=f[x.type],R=J.isSkinnedMesh?v(J):0;x.precision!==null&&(d=i.getMaxPrecision(x.precision),d!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",d,"instead."));let z,W;if(I){const ce=nn[I];z=ce.vertexShader,W=ce.fragmentShader}else z=x.vertexShader,W=x.fragmentShader;const Q=t.getRenderTarget();return{isWebGL2:a,shaderID:I,shaderName:x.type,vertexShader:z,fragmentShader:W,defines:x.defines,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:d,instancing:J.isInstancedMesh===!0,instancingColor:J.isInstancedMesh===!0&&J.instanceColor!==null,supportsVertexTextures:h,outputEncoding:Q!==null?y(Q.texture):t.outputEncoding,map:!!x.map,mapEncoding:y(x.map),matcap:!!x.matcap,matcapEncoding:y(x.matcap),envMap:!!C,envMapMode:C&&C.mapping,envMapEncoding:y(C),envMapCubeUV:!!C&&(C.mapping===Fa||C.mapping===Oa),lightMap:!!x.lightMap,lightMapEncoding:y(x.lightMap),aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,emissiveMapEncoding:y(x.emissiveMap),bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===Uf,tangentSpaceNormalMap:x.normalMapType===lr,clearcoatMap:!!x.clearcoatMap,clearcoatRoughnessMap:!!x.clearcoatRoughnessMap,clearcoatNormalMap:!!x.clearcoatNormalMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,alphaMap:!!x.alphaMap,gradientMap:!!x.gradientMap,sheen:!!x.sheen,transmissionMap:!!x.transmissionMap,combine:x.combine,vertexTangents:x.normalMap&&x.vertexTangents,vertexColors:x.vertexColors,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.displacementMap||!!x.transmissionMap,uvsVertexOnly:!(!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatNormalMap||!!x.transmissionMap)&&!!x.displacementMap,fog:!!P,useFog:x.fog,fogExp2:P&&P.isFogExp2,flatShading:x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:l,skinning:x.skinning&&R>0,maxBones:R,useVertexTexture:c,morphTargets:x.morphTargets,morphNormals:x.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:x.dithering,shadowMapEnabled:t.shadowMap.enabled&&H.length>0,shadowMapType:t.shadowMap.type,toneMapping:x.toneMapped?t.toneMapping:Lr,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,alphaTest:x.alphaTest,doubleSided:x.side===fo,flipSided:x.side===vt,depthPacking:x.depthPacking!==void 0?x.depthPacking:!1,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function m(x){const A=[];if(x.shaderID?A.push(x.shaderID):(A.push(x.fragmentShader),A.push(x.vertexShader)),x.defines!==void 0)for(const H in x.defines)A.push(H),A.push(x.defines[H]);if(x.isRawShaderMaterial===!1){for(let H=0;H<p.length;H++)A.push(x[p[H]]);A.push(t.outputEncoding),A.push(t.gammaFactor)}return A.push(x.customProgramCacheKey),A.join()}function w(x){const A=f[x.type];let H;if(A){const O=nn[A];H=nd.clone(O.uniforms)}else H=x.uniforms;return H}function S(x,A){let H;for(let O=0,J=o.length;O<J;O++){const P=o[O];if(P.cacheKey===A){H=P,++H.usedTimes;break}}return H===void 0&&(H=new kg(t,A,x,r),o.push(H)),H}function M(x){if(--x.usedTimes===0){const A=o.indexOf(x);o[A]=o[o.length-1],o.pop(),x.destroy()}}return{getParameters:g,getProgramCacheKey:m,getUniforms:w,acquireProgram:S,releaseProgram:M,programs:o}}function Hg(){let t=new WeakMap;function e(s){let o=t.get(s);return o===void 0&&(o={},t.set(s,o)),o}function n(s){t.delete(s)}function i(s,o,a){t.get(s)[o]=a}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function Gg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Vg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Fl(t){const e=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(d,f,p,v,y,g){let m=e[n];const w=t.get(p);return m===void 0?(m={id:d.id,object:d,geometry:f,material:p,program:w.program||s,groupOrder:v,renderOrder:d.renderOrder,z:y,group:g},e[n]=m):(m.id=d.id,m.object=d,m.geometry=f,m.material=p,m.program=w.program||s,m.groupOrder=v,m.renderOrder=d.renderOrder,m.z=y,m.group=g),n++,m}function l(d,f,p,v,y,g){const m=a(d,f,p,v,y,g);(p.transparent===!0?r:i).push(m)}function c(d,f,p,v,y,g){const m=a(d,f,p,v,y,g);(p.transparent===!0?r:i).unshift(m)}function u(d,f){i.length>1&&i.sort(d||Gg),r.length>1&&r.sort(f||Vg)}function h(){for(let d=n,f=e.length;d<f;d++){const p=e[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:l,unshift:c,finish:h,sort:u}}function Wg(t){let e=new WeakMap;function n(r,s){const o=e.get(r);let a;return o===void 0?(a=new Fl(t),e.set(r,new WeakMap),e.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new Fl(t),o.set(s,a))),a}function i(){e=new WeakMap}return{get:n,dispose:i}}function jg(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new E,color:new _e};break;case"SpotLight":n={position:new E,direction:new E,color:new _e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new E,color:new _e,distance:0,decay:0};break;case"HemisphereLight":n={direction:new E,skyColor:new _e,groundColor:new _e};break;case"RectAreaLight":n={color:new _e,position:new E,halfWidth:new E,halfHeight:new E};break}return t[e.id]=n,n}}}function qg(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let Xg=0;function Yg(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Zg(t,e){const n=new jg,i=qg(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new E);const s=new E,o=new Fe,a=new Fe;function l(u){let h=0,d=0,f=0;for(let A=0;A<9;A++)r.probe[A].set(0,0,0);let p=0,v=0,y=0,g=0,m=0,w=0,S=0,M=0;u.sort(Yg);for(let A=0,H=u.length;A<H;A++){const O=u[A],J=O.color,P=O.intensity,N=O.distance,C=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)h+=J.r*P,d+=J.g*P,f+=J.b*P;else if(O.isLightProbe)for(let I=0;I<9;I++)r.probe[I].addScaledVector(O.sh.coefficients[I],P);else if(O.isDirectionalLight){const I=n.get(O);if(I.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const R=O.shadow,z=i.get(O);z.shadowBias=R.bias,z.shadowNormalBias=R.normalBias,z.shadowRadius=R.radius,z.shadowMapSize=R.mapSize,r.directionalShadow[p]=z,r.directionalShadowMap[p]=C,r.directionalShadowMatrix[p]=O.shadow.matrix,w++}r.directional[p]=I,p++}else if(O.isSpotLight){const I=n.get(O);if(I.position.setFromMatrixPosition(O.matrixWorld),I.color.copy(J).multiplyScalar(P),I.distance=N,I.coneCos=Math.cos(O.angle),I.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),I.decay=O.decay,O.castShadow){const R=O.shadow,z=i.get(O);z.shadowBias=R.bias,z.shadowNormalBias=R.normalBias,z.shadowRadius=R.radius,z.shadowMapSize=R.mapSize,r.spotShadow[y]=z,r.spotShadowMap[y]=C,r.spotShadowMatrix[y]=O.shadow.matrix,M++}r.spot[y]=I,y++}else if(O.isRectAreaLight){const I=n.get(O);I.color.copy(J).multiplyScalar(P),I.halfWidth.set(O.width*.5,0,0),I.halfHeight.set(0,O.height*.5,0),r.rectArea[g]=I,g++}else if(O.isPointLight){const I=n.get(O);if(I.color.copy(O.color).multiplyScalar(O.intensity),I.distance=O.distance,I.decay=O.decay,O.castShadow){const R=O.shadow,z=i.get(O);z.shadowBias=R.bias,z.shadowNormalBias=R.normalBias,z.shadowRadius=R.radius,z.shadowMapSize=R.mapSize,z.shadowCameraNear=R.camera.near,z.shadowCameraFar=R.camera.far,r.pointShadow[v]=z,r.pointShadowMap[v]=C,r.pointShadowMatrix[v]=O.shadow.matrix,S++}r.point[v]=I,v++}else if(O.isHemisphereLight){const I=n.get(O);I.skyColor.copy(O.color).multiplyScalar(P),I.groundColor.copy(O.groundColor).multiplyScalar(P),r.hemi[m]=I,m++}}g>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=le.LTC_FLOAT_1,r.rectAreaLTC2=le.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=le.LTC_HALF_1,r.rectAreaLTC2=le.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=d,r.ambient[2]=f;const x=r.hash;(x.directionalLength!==p||x.pointLength!==v||x.spotLength!==y||x.rectAreaLength!==g||x.hemiLength!==m||x.numDirectionalShadows!==w||x.numPointShadows!==S||x.numSpotShadows!==M)&&(r.directional.length=p,r.spot.length=y,r.rectArea.length=g,r.point.length=v,r.hemi.length=m,r.directionalShadow.length=w,r.directionalShadowMap.length=w,r.pointShadow.length=S,r.pointShadowMap.length=S,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=w,r.pointShadowMatrix.length=S,r.spotShadowMatrix.length=M,x.directionalLength=p,x.pointLength=v,x.spotLength=y,x.rectAreaLength=g,x.hemiLength=m,x.numDirectionalShadows=w,x.numPointShadows=S,x.numSpotShadows=M,r.version=Xg++)}function c(u,h){let d=0,f=0,p=0,v=0,y=0;const g=h.matrixWorldInverse;for(let m=0,w=u.length;m<w;m++){const S=u[m];if(S.isDirectionalLight){const M=r.directional[d];M.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(g),d++}else if(S.isSpotLight){const M=r.spot[p];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(g),M.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(g),p++}else if(S.isRectAreaLight){const M=r.rectArea[v];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(g),a.identity(),o.copy(S.matrixWorld),o.premultiply(g),a.extractRotation(o),M.halfWidth.set(S.width*.5,0,0),M.halfHeight.set(0,S.height*.5,0),M.halfWidth.applyMatrix4(a),M.halfHeight.applyMatrix4(a),v++}else if(S.isPointLight){const M=r.point[f];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(g),f++}else if(S.isHemisphereLight){const M=r.hemi[y];M.direction.setFromMatrixPosition(S.matrixWorld),M.direction.transformDirection(g),M.direction.normalize(),y++}}}return{setup:l,setupView:c,state:r}}function Ol(t,e){const n=new Zg(t,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(h){i.push(h)}function a(h){r.push(h)}function l(){n.setup(i)}function c(h){n.setupView(i,h)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function Jg(t,e){let n=new WeakMap;function i(s,o=0){let a;return n.has(s)===!1?(a=new Ol(t,e),n.set(s,[]),n.get(s).push(a)):o>=n.get(s).length?(a=new Ol(t,e),n.get(s).push(a)):a=n.get(s)[o],a}function r(){n=new WeakMap}return{get:i,dispose:r}}function ai(t){Te.call(this),this.type="MeshDepthMaterial",this.depthPacking=Bf,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}ai.prototype=Object.create(Te.prototype);ai.prototype.constructor=ai;ai.prototype.isMeshDepthMaterial=!0;ai.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function li(t){Te.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new E,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}li.prototype=Object.create(Te.prototype);li.prototype.constructor=li;li.prototype.isMeshDistanceMaterial=!0;li.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var Kg=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,Qg=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function wh(t,e,n){let i=new vo;const r=new q,s=new q,o=new Je,a=[],l=[],c={},u={0:vt,1:uo,2:fo},h=new wt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:Qg,fragmentShader:Kg}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const f=new Ye;f.setAttribute("position",new Ae(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new ut(f,h),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=nh,this.render=function(M,x,A){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||M.length===0)return;const H=t.getRenderTarget(),O=t.getActiveCubeFace(),J=t.getActiveMipmapLevel(),P=t.state;P.setBlending(Er),P.buffers.color.setClear(1,1,1,1),P.buffers.depth.setTest(!0),P.setScissorTest(!1);for(let N=0,C=M.length;N<C;N++){const I=M[N],R=I.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",I,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;r.copy(R.mapSize);const z=R.getFrameExtents();if(r.multiply(z),s.copy(R.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/z.x),r.x=s.x*z.x,R.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/z.y),r.y=s.y*z.y,R.mapSize.y=s.y)),R.map===null&&!R.isPointLightShadow&&this.type===Mr){const Q={minFilter:bt,magFilter:bt,format:Kt};R.map=new Qt(r.x,r.y,Q),R.map.texture.name=I.name+".shadowMap",R.mapPass=new Qt(r.x,r.y,Q),R.camera.updateProjectionMatrix()}if(R.map===null){const Q={minFilter:St,magFilter:St,format:Kt};R.map=new Qt(r.x,r.y,Q),R.map.texture.name=I.name+".shadowMap",R.camera.updateProjectionMatrix()}t.setRenderTarget(R.map),t.clear();const W=R.getViewportCount();for(let Q=0;Q<W;Q++){const se=R.getViewport(Q);o.set(s.x*se.x,s.y*se.y,s.x*se.z,s.y*se.w),P.viewport(o),R.updateMatrices(I,Q),i=R.getFrustum(),S(x,A,R.camera,I,this.type)}!R.isPointLightShadow&&this.type===Mr&&y(R,A),R.needsUpdate=!1}v.needsUpdate=!1,t.setRenderTarget(H,O,J)};function y(M,x){const A=e.update(p);h.uniforms.shadow_pass.value=M.map.texture,h.uniforms.resolution.value=M.mapSize,h.uniforms.radius.value=M.radius,t.setRenderTarget(M.mapPass),t.clear(),t.renderBufferDirect(x,null,A,h,p,null),d.uniforms.shadow_pass.value=M.mapPass.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,t.setRenderTarget(M.map),t.clear(),t.renderBufferDirect(x,null,A,d,p,null)}function g(M,x,A){const H=M<<0|x<<1|A<<2;let O=a[H];return O===void 0&&(O=new ai({depthPacking:kf,morphTargets:M,skinning:x}),a[H]=O),O}function m(M,x,A){const H=M<<0|x<<1|A<<2;let O=l[H];return O===void 0&&(O=new li({morphTargets:M,skinning:x}),l[H]=O),O}function w(M,x,A,H,O,J,P){let N=null,C=g,I=M.customDepthMaterial;if(H.isPointLight===!0&&(C=m,I=M.customDistanceMaterial),I===void 0){let R=!1;A.morphTargets===!0&&(R=x.morphAttributes&&x.morphAttributes.position&&x.morphAttributes.position.length>0);let z=!1;M.isSkinnedMesh===!0&&(A.skinning===!0?z=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",M));const W=M.isInstancedMesh===!0;N=C(R,z,W)}else N=I;if(t.localClippingEnabled&&A.clipShadows===!0&&A.clippingPlanes.length!==0){const R=N.uuid,z=A.uuid;let W=c[R];W===void 0&&(W={},c[R]=W);let Q=W[z];Q===void 0&&(Q=N.clone(),W[z]=Q),N=Q}return N.visible=A.visible,N.wireframe=A.wireframe,P===Mr?N.side=A.shadowSide!==null?A.shadowSide:A.side:N.side=A.shadowSide!==null?A.shadowSide:u[A.side],N.clipShadows=A.clipShadows,N.clippingPlanes=A.clippingPlanes,N.clipIntersection=A.clipIntersection,N.wireframeLinewidth=A.wireframeLinewidth,N.linewidth=A.linewidth,H.isPointLight===!0&&N.isMeshDistanceMaterial===!0&&(N.referencePosition.setFromMatrixPosition(H.matrixWorld),N.nearDistance=O,N.farDistance=J),N}function S(M,x,A,H,O){if(M.visible===!1)return;if(M.layers.test(x.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&O===Mr)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,M.matrixWorld);const N=e.update(M),C=M.material;if(Array.isArray(C)){const I=N.groups;for(let R=0,z=I.length;R<z;R++){const W=I[R],Q=C[W.materialIndex];if(Q&&Q.visible){const se=w(M,N,Q,H,A.near,A.far,O);t.renderBufferDirect(A,null,N,se,M,W)}}}else if(C.visible){const I=w(M,N,C,H,A.near,A.far,O);t.renderBufferDirect(A,null,N,I,M,null)}}const P=M.children;for(let N=0,C=P.length;N<C;N++)S(P[N],x,A,H,O)}}function $g(t,e,n){const i=n.isWebGL2;function r(){let L=!1;const K=new Je;let oe=null;const de=new Je(0,0,0,0);return{setMask:function(te){oe!==te&&!L&&(t.colorMask(te,te,te,te),oe=te)},setLocked:function(te){L=te},setClear:function(te,pe,xe,Ce,fe){fe===!0&&(te*=Ce,pe*=Ce,xe*=Ce),K.set(te,pe,xe,Ce),de.equals(K)===!1&&(t.clearColor(te,pe,xe,Ce),de.copy(K))},reset:function(){L=!1,oe=null,de.set(-1,0,0,0)}}}function s(){let L=!1,K=null,oe=null,de=null;return{setTest:function(te){te?ce(2929):ue(2929)},setMask:function(te){K!==te&&!L&&(t.depthMask(te),K=te)},setFunc:function(te){if(oe!==te){if(te)switch(te){case bu:t.depthFunc(512);break;case wu:t.depthFunc(519);break;case Mu:t.depthFunc(513);break;case Qo:t.depthFunc(515);break;case Su:t.depthFunc(514);break;case Tu:t.depthFunc(518);break;case Eu:t.depthFunc(516);break;case Au:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);oe=te}},setLocked:function(te){L=te},setClear:function(te){de!==te&&(t.clearDepth(te),de=te)},reset:function(){L=!1,K=null,oe=null,de=null}}}function o(){let L=!1,K=null,oe=null,de=null,te=null,pe=null,xe=null,Ce=null,fe=null;return{setTest:function(be){L||(be?ce(2960):ue(2960))},setMask:function(be){K!==be&&!L&&(t.stencilMask(be),K=be)},setFunc:function(be,Ze,ft){(oe!==be||de!==Ze||te!==ft)&&(t.stencilFunc(be,Ze,ft),oe=be,de=Ze,te=ft)},setOp:function(be,Ze,ft){(pe!==be||xe!==Ze||Ce!==ft)&&(t.stencilOp(be,Ze,ft),pe=be,xe=Ze,Ce=ft)},setLocked:function(be){L=be},setClear:function(be){fe!==be&&(t.clearStencil(be),fe=be)},reset:function(){L=!1,K=null,oe=null,de=null,te=null,pe=null,xe=null,Ce=null,fe=null}}}const a=new r,l=new s,c=new o;let u={},h=null,d=null,f=null,p=null,v=null,y=null,g=null,m=null,w=null,S=!1,M=null,x=null,A=null,H=null,O=null;const J=t.getParameter(35661);let P=!1,N=0;const C=t.getParameter(7938);C.indexOf("WebGL")!==-1?(N=parseFloat(/^WebGL (\d)/.exec(C)[1]),P=N>=1):C.indexOf("OpenGL ES")!==-1&&(N=parseFloat(/^OpenGL ES (\d)/.exec(C)[1]),P=N>=2);let I=null,R={};const z=new Je,W=new Je;function Q(L,K,oe){const de=new Uint8Array(4),te=t.createTexture();t.bindTexture(L,te),t.texParameteri(L,10241,9728),t.texParameteri(L,10240,9728);for(let pe=0;pe<oe;pe++)t.texImage2D(K+pe,0,6408,1,1,0,6408,5121,de);return te}const se={};se[3553]=Q(3553,3553,1),se[34067]=Q(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ce(2929),l.setFunc(Qo),ye(!1),Ee(Xa),ce(2884),V(Er);function ce(L){u[L]!==!0&&(t.enable(L),u[L]=!0)}function ue(L){u[L]!==!1&&(t.disable(L),u[L]=!1)}function Le(L){return h!==L?(t.useProgram(L),h=L,!0):!1}const Pe={[zi]:32774,[hu]:32778,[uu]:32779};if(i)Pe[Ja]=32775,Pe[Ka]=32776;else{const L=e.get("EXT_blend_minmax");L!==null&&(Pe[Ja]=L.MIN_EXT,Pe[Ka]=L.MAX_EXT)}const qe={[fu]:0,[du]:1,[pu]:768,[rh]:770,[_u]:776,[yu]:774,[gu]:772,[mu]:769,[sh]:771,[xu]:775,[vu]:773};function V(L,K,oe,de,te,pe,xe,Ce){if(L===Er){d&&(ue(3042),d=!1);return}if(d||(ce(3042),d=!0),L!==cu){if(L!==f||Ce!==S){if((p!==zi||g!==zi)&&(t.blendEquation(32774),p=zi,g=zi),Ce)switch(L){case Ar:t.blendFuncSeparate(1,771,1,771);break;case Ko:t.blendFunc(1,1);break;case Ya:t.blendFuncSeparate(0,0,769,771);break;case Za:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case Ar:t.blendFuncSeparate(770,771,1,771);break;case Ko:t.blendFunc(770,1);break;case Ya:t.blendFunc(0,769);break;case Za:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}v=null,y=null,m=null,w=null,f=L,S=Ce}return}te=te||K,pe=pe||oe,xe=xe||de,(K!==p||te!==g)&&(t.blendEquationSeparate(Pe[K],Pe[te]),p=K,g=te),(oe!==v||de!==y||pe!==m||xe!==w)&&(t.blendFuncSeparate(qe[oe],qe[de],qe[pe],qe[xe]),v=oe,y=de,m=pe,w=xe),f=L,S=null}function at(L,K){L.side===fo?ue(2884):ce(2884);let oe=L.side===vt;K&&(oe=!oe),ye(oe),L.blending===Ar&&L.transparent===!1?V(Er):V(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),l.setFunc(L.depthFunc),l.setTest(L.depthTest),l.setMask(L.depthWrite),a.setMask(L.colorWrite);const de=L.stencilWrite;c.setTest(de),de&&(c.setMask(L.stencilWriteMask),c.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),c.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),Ve(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits)}function ye(L){M!==L&&(L?t.frontFace(2304):t.frontFace(2305),M=L)}function Ee(L){L!==ou?(ce(2884),L!==x&&(L===Xa?t.cullFace(1029):L===au?t.cullFace(1028):t.cullFace(1032))):ue(2884),x=L}function Se(L){L!==A&&(P&&t.lineWidth(L),A=L)}function Ve(L,K,oe){L?(ce(32823),(H!==K||O!==oe)&&(t.polygonOffset(K,oe),H=K,O=oe)):ue(32823)}function De(L){L?ce(3089):ue(3089)}function Z(L){L===void 0&&(L=33984+J-1),I!==L&&(t.activeTexture(L),I=L)}function X(L,K){I===null&&Z();let oe=R[I];oe===void 0&&(oe={type:void 0,texture:void 0},R[I]=oe),(oe.type!==L||oe.texture!==K)&&(t.bindTexture(L,K||se[L]),oe.type=L,oe.texture=K)}function ee(){const L=R[I];L!==void 0&&L.type!==void 0&&(t.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function ve(){try{t.compressedTexImage2D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function he(){try{t.texImage2D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function T(){try{t.texImage3D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function b(L){z.equals(L)===!1&&(t.scissor(L.x,L.y,L.z,L.w),z.copy(L))}function Y(L){W.equals(L)===!1&&(t.viewport(L.x,L.y,L.z,L.w),W.copy(L))}function j(){u={},I=null,R={},h=null,d=null,f=null,p=null,v=null,y=null,g=null,m=null,w=null,S=!1,M=null,x=null,A=null,H=null,O=null,a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ce,disable:ue,useProgram:Le,setBlending:V,setMaterial:at,setFlipSided:ye,setCullFace:Ee,setLineWidth:Se,setPolygonOffset:Ve,setScissorTest:De,activeTexture:Z,bindTexture:X,unbindTexture:ee,compressedTexImage2D:ve,texImage2D:he,texImage3D:T,scissor:b,viewport:Y,reset:j}}function ev(t,e,n,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,d=new WeakMap;let f,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(T,b){return p?new OffscreenCanvas(T,b):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(T,b,Y,j){let L=1;if((T.width>j||T.height>j)&&(L=j/Math.max(T.width,T.height)),L<1||b===!0)if(typeof HTMLImageElement<"u"&&T instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&T instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&T instanceof ImageBitmap){const K=b?ze.floorPowerOfTwo:Math.floor,oe=K(L*T.width),de=K(L*T.height);f===void 0&&(f=v(oe,de));const te=Y?v(oe,de):f;return te.width=oe,te.height=de,te.getContext("2d").drawImage(T,0,0,oe,de),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+T.width+"x"+T.height+") to ("+oe+"x"+de+")."),te}else return"data"in T&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+T.width+"x"+T.height+")."),T;return T}function g(T){return ze.isPowerOfTwo(T.width)&&ze.isPowerOfTwo(T.height)}function m(T){return a?!1:T.wrapS!==Rt||T.wrapT!==Rt||T.minFilter!==St&&T.minFilter!==bt}function w(T,b){return T.generateMipmaps&&b&&T.minFilter!==St&&T.minFilter!==bt}function S(T,b,Y,j){t.generateMipmap(T);const L=i.get(b);L.__maxMipLevel=Math.log(Math.max(Y,j))*Math.LOG2E}function M(T,b,Y){if(a===!1)return b;if(T!==null){if(t[T]!==void 0)return t[T];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+T+"'")}let j=b;return b===6403&&(Y===5126&&(j=33326),Y===5131&&(j=33325),Y===5121&&(j=33321)),b===6407&&(Y===5126&&(j=34837),Y===5131&&(j=34843),Y===5121&&(j=32849)),b===6408&&(Y===5126&&(j=34836),Y===5131&&(j=34842),Y===5121&&(j=32856)),(j===33325||j===33326||j===34842||j===34836)&&e.get("EXT_color_buffer_float"),j}function x(T){return T===St||T===el||T===tl?9728:9729}function A(T){const b=T.target;b.removeEventListener("dispose",A),O(b),b.isVideoTexture&&d.delete(b),o.memory.textures--}function H(T){const b=T.target;b.removeEventListener("dispose",H),J(b),o.memory.textures--}function O(T){const b=i.get(T);b.__webglInit!==void 0&&(t.deleteTexture(b.__webglTexture),i.remove(T))}function J(T){const b=i.get(T),Y=i.get(T.texture);if(!!T){if(Y.__webglTexture!==void 0&&t.deleteTexture(Y.__webglTexture),T.depthTexture&&T.depthTexture.dispose(),T.isWebGLCubeRenderTarget)for(let j=0;j<6;j++)t.deleteFramebuffer(b.__webglFramebuffer[j]),b.__webglDepthbuffer&&t.deleteRenderbuffer(b.__webglDepthbuffer[j]);else t.deleteFramebuffer(b.__webglFramebuffer),b.__webglDepthbuffer&&t.deleteRenderbuffer(b.__webglDepthbuffer),b.__webglMultisampledFramebuffer&&t.deleteFramebuffer(b.__webglMultisampledFramebuffer),b.__webglColorRenderbuffer&&t.deleteRenderbuffer(b.__webglColorRenderbuffer),b.__webglDepthRenderbuffer&&t.deleteRenderbuffer(b.__webglDepthRenderbuffer);i.remove(T.texture),i.remove(T)}}let P=0;function N(){P=0}function C(){const T=P;return T>=l&&console.warn("THREE.WebGLTextures: Trying to use "+T+" texture units while this GPU supports only "+l),P+=1,T}function I(T,b){const Y=i.get(T);if(T.isVideoTexture&&Z(T),T.version>0&&Y.__version!==T.version){const j=T.image;if(j===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Le(Y,T,b);return}}n.activeTexture(33984+b),n.bindTexture(3553,Y.__webglTexture)}function R(T,b){const Y=i.get(T);if(T.version>0&&Y.__version!==T.version){Le(Y,T,b);return}n.activeTexture(33984+b),n.bindTexture(35866,Y.__webglTexture)}function z(T,b){const Y=i.get(T);if(T.version>0&&Y.__version!==T.version){Le(Y,T,b);return}n.activeTexture(33984+b),n.bindTexture(32879,Y.__webglTexture)}function W(T,b){const Y=i.get(T);if(T.version>0&&Y.__version!==T.version){Pe(Y,T,b);return}n.activeTexture(33984+b),n.bindTexture(34067,Y.__webglTexture)}const Q={[$o]:10497,[Rt]:33071,[ea]:33648},se={[St]:9728,[el]:9984,[tl]:9986,[bt]:9729,[zu]:9985,[mo]:9987};function ce(T,b,Y){Y?(t.texParameteri(T,10242,Q[b.wrapS]),t.texParameteri(T,10243,Q[b.wrapT]),(T===32879||T===35866)&&t.texParameteri(T,32882,Q[b.wrapR]),t.texParameteri(T,10240,se[b.magFilter]),t.texParameteri(T,10241,se[b.minFilter])):(t.texParameteri(T,10242,33071),t.texParameteri(T,10243,33071),(T===32879||T===35866)&&t.texParameteri(T,32882,33071),(b.wrapS!==Rt||b.wrapT!==Rt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(T,10240,x(b.magFilter)),t.texParameteri(T,10241,x(b.minFilter)),b.minFilter!==St&&b.minFilter!==bt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const j=e.get("EXT_texture_filter_anisotropic");if(j){if(b.type===Bn&&e.get("OES_texture_float_linear")===null||b.type===Ys&&(a||e.get("OES_texture_half_float_linear"))===null)return;(b.anisotropy>1||i.get(b).__currentAnisotropy)&&(t.texParameterf(T,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,r.getMaxAnisotropy())),i.get(b).__currentAnisotropy=b.anisotropy)}}function ue(T,b){T.__webglInit===void 0&&(T.__webglInit=!0,b.addEventListener("dispose",A),T.__webglTexture=t.createTexture(),o.memory.textures++)}function Le(T,b,Y){let j=3553;b.isDataTexture2DArray&&(j=35866),b.isDataTexture3D&&(j=32879),ue(T,b),n.activeTexture(33984+Y),n.bindTexture(j,T.__webglTexture),t.pixelStorei(37440,b.flipY),t.pixelStorei(37441,b.premultiplyAlpha),t.pixelStorei(3317,b.unpackAlignment);const L=m(b)&&g(b.image)===!1,K=y(b.image,L,!1,u),oe=g(K)||a,de=s.convert(b.format);let te=s.convert(b.type),pe=M(b.internalFormat,de,te);ce(j,b,oe);let xe;const Ce=b.mipmaps;if(b.isDepthTexture)pe=6402,a?b.type===Bn?pe=36012:b.type===Ws?pe=33190:b.type===Cr?pe=35056:pe=33189:b.type===Bn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),b.format===Vi&&pe===6402&&b.type!==Xs&&b.type!==Ws&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),b.type=Xs,te=s.convert(b.type)),b.format===Fr&&pe===6402&&(pe=34041,b.type!==Cr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),b.type=Cr,te=s.convert(b.type))),n.texImage2D(3553,0,pe,K.width,K.height,0,de,te,null);else if(b.isDataTexture)if(Ce.length>0&&oe){for(let fe=0,be=Ce.length;fe<be;fe++)xe=Ce[fe],n.texImage2D(3553,fe,pe,xe.width,xe.height,0,de,te,xe.data);b.generateMipmaps=!1,T.__maxMipLevel=Ce.length-1}else n.texImage2D(3553,0,pe,K.width,K.height,0,de,te,K.data),T.__maxMipLevel=0;else if(b.isCompressedTexture){for(let fe=0,be=Ce.length;fe<be;fe++)xe=Ce[fe],b.format!==Kt&&b.format!==si?de!==null?n.compressedTexImage2D(3553,fe,pe,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,fe,pe,xe.width,xe.height,0,de,te,xe.data);T.__maxMipLevel=Ce.length-1}else if(b.isDataTexture2DArray)n.texImage3D(35866,0,pe,K.width,K.height,K.depth,0,de,te,K.data),T.__maxMipLevel=0;else if(b.isDataTexture3D)n.texImage3D(32879,0,pe,K.width,K.height,K.depth,0,de,te,K.data),T.__maxMipLevel=0;else if(Ce.length>0&&oe){for(let fe=0,be=Ce.length;fe<be;fe++)xe=Ce[fe],n.texImage2D(3553,fe,pe,de,te,xe);b.generateMipmaps=!1,T.__maxMipLevel=Ce.length-1}else n.texImage2D(3553,0,pe,de,te,K),T.__maxMipLevel=0;w(b,oe)&&S(j,b,K.width,K.height),T.__version=b.version,b.onUpdate&&b.onUpdate(b)}function Pe(T,b,Y){if(b.image.length!==6)return;ue(T,b),n.activeTexture(33984+Y),n.bindTexture(34067,T.__webglTexture),t.pixelStorei(37440,b.flipY);const j=b&&(b.isCompressedTexture||b.image[0].isCompressedTexture),L=b.image[0]&&b.image[0].isDataTexture,K=[];for(let fe=0;fe<6;fe++)!j&&!L?K[fe]=y(b.image[fe],!1,!0,c):K[fe]=L?b.image[fe].image:b.image[fe];const oe=K[0],de=g(oe)||a,te=s.convert(b.format),pe=s.convert(b.type),xe=M(b.internalFormat,te,pe);ce(34067,b,de);let Ce;if(j){for(let fe=0;fe<6;fe++){Ce=K[fe].mipmaps;for(let be=0;be<Ce.length;be++){const Ze=Ce[be];b.format!==Kt&&b.format!==si?te!==null?n.compressedTexImage2D(34069+fe,be,xe,Ze.width,Ze.height,0,Ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+fe,be,xe,Ze.width,Ze.height,0,te,pe,Ze.data)}}T.__maxMipLevel=Ce.length-1}else{Ce=b.mipmaps;for(let fe=0;fe<6;fe++)if(L){n.texImage2D(34069+fe,0,xe,K[fe].width,K[fe].height,0,te,pe,K[fe].data);for(let be=0;be<Ce.length;be++){const ft=Ce[be].image[fe].image;n.texImage2D(34069+fe,be+1,xe,ft.width,ft.height,0,te,pe,ft.data)}}else{n.texImage2D(34069+fe,0,xe,te,pe,K[fe]);for(let be=0;be<Ce.length;be++){const Ze=Ce[be];n.texImage2D(34069+fe,be+1,xe,te,pe,Ze.image[fe])}}T.__maxMipLevel=Ce.length}w(b,de)&&S(34067,b,oe.width,oe.height),T.__version=b.version,b.onUpdate&&b.onUpdate(b)}function qe(T,b,Y,j){const L=s.convert(b.texture.format),K=s.convert(b.texture.type),oe=M(b.texture.internalFormat,L,K);n.texImage2D(j,0,oe,b.width,b.height,0,L,K,null),t.bindFramebuffer(36160,T),t.framebufferTexture2D(36160,Y,j,i.get(b.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function V(T,b,Y){if(t.bindRenderbuffer(36161,T),b.depthBuffer&&!b.stencilBuffer){let j=33189;if(Y){const L=b.depthTexture;L&&L.isDepthTexture&&(L.type===Bn?j=36012:L.type===Ws&&(j=33190));const K=De(b);t.renderbufferStorageMultisample(36161,K,j,b.width,b.height)}else t.renderbufferStorage(36161,j,b.width,b.height);t.framebufferRenderbuffer(36160,36096,36161,T)}else if(b.depthBuffer&&b.stencilBuffer){if(Y){const j=De(b);t.renderbufferStorageMultisample(36161,j,35056,b.width,b.height)}else t.renderbufferStorage(36161,34041,b.width,b.height);t.framebufferRenderbuffer(36160,33306,36161,T)}else{const j=s.convert(b.texture.format),L=s.convert(b.texture.type),K=M(b.texture.internalFormat,j,L);if(Y){const oe=De(b);t.renderbufferStorageMultisample(36161,oe,K,b.width,b.height)}else t.renderbufferStorage(36161,K,b.width,b.height)}t.bindRenderbuffer(36161,null)}function at(T,b){if(b&&b.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,T),!(b.depthTexture&&b.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(b.depthTexture).__webglTexture||b.depthTexture.image.width!==b.width||b.depthTexture.image.height!==b.height)&&(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=!0),I(b.depthTexture,0);const j=i.get(b.depthTexture).__webglTexture;if(b.depthTexture.format===Vi)t.framebufferTexture2D(36160,36096,3553,j,0);else if(b.depthTexture.format===Fr)t.framebufferTexture2D(36160,33306,3553,j,0);else throw new Error("Unknown depthTexture format")}function ye(T){const b=i.get(T),Y=T.isWebGLCubeRenderTarget===!0;if(T.depthTexture){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");at(b.__webglFramebuffer,T)}else if(Y){b.__webglDepthbuffer=[];for(let j=0;j<6;j++)t.bindFramebuffer(36160,b.__webglFramebuffer[j]),b.__webglDepthbuffer[j]=t.createRenderbuffer(),V(b.__webglDepthbuffer[j],T,!1)}else t.bindFramebuffer(36160,b.__webglFramebuffer),b.__webglDepthbuffer=t.createRenderbuffer(),V(b.__webglDepthbuffer,T,!1);t.bindFramebuffer(36160,null)}function Ee(T){const b=i.get(T),Y=i.get(T.texture);T.addEventListener("dispose",H),Y.__webglTexture=t.createTexture(),o.memory.textures++;const j=T.isWebGLCubeRenderTarget===!0,L=T.isWebGLMultisampleRenderTarget===!0,K=g(T)||a;if(a&&T.texture.format===si&&(T.texture.type===Bn||T.texture.type===Ys)&&(T.texture.format=Kt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),j){b.__webglFramebuffer=[];for(let oe=0;oe<6;oe++)b.__webglFramebuffer[oe]=t.createFramebuffer()}else if(b.__webglFramebuffer=t.createFramebuffer(),L)if(a){b.__webglMultisampledFramebuffer=t.createFramebuffer(),b.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,b.__webglColorRenderbuffer);const oe=s.convert(T.texture.format),de=s.convert(T.texture.type),te=M(T.texture.internalFormat,oe,de),pe=De(T);t.renderbufferStorageMultisample(36161,pe,te,T.width,T.height),t.bindFramebuffer(36160,b.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,b.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),T.depthBuffer&&(b.__webglDepthRenderbuffer=t.createRenderbuffer(),V(b.__webglDepthRenderbuffer,T,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(j){n.bindTexture(34067,Y.__webglTexture),ce(34067,T.texture,K);for(let oe=0;oe<6;oe++)qe(b.__webglFramebuffer[oe],T,36064,34069+oe);w(T.texture,K)&&S(34067,T.texture,T.width,T.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Y.__webglTexture),ce(3553,T.texture,K),qe(b.__webglFramebuffer,T,36064,3553),w(T.texture,K)&&S(3553,T.texture,T.width,T.height),n.bindTexture(3553,null);T.depthBuffer&&ye(T)}function Se(T){const b=T.texture,Y=g(T)||a;if(w(b,Y)){const j=T.isWebGLCubeRenderTarget?34067:3553,L=i.get(b).__webglTexture;n.bindTexture(j,L),S(j,b,T.width,T.height),n.bindTexture(j,null)}}function Ve(T){if(T.isWebGLMultisampleRenderTarget)if(a){const b=i.get(T);t.bindFramebuffer(36008,b.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,b.__webglFramebuffer);const Y=T.width,j=T.height;let L=16384;T.depthBuffer&&(L|=256),T.stencilBuffer&&(L|=1024),t.blitFramebuffer(0,0,Y,j,0,0,Y,j,L,9728),t.bindFramebuffer(36160,b.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function De(T){return a&&T.isWebGLMultisampleRenderTarget?Math.min(h,T.samples):0}function Z(T){const b=o.render.frame;d.get(T)!==b&&(d.set(T,b),T.update())}let X=!1,ee=!1;function ve(T,b){T&&T.isWebGLRenderTarget&&(X===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),X=!0),T=T.texture),I(T,b)}function he(T,b){T&&T.isWebGLCubeRenderTarget&&(ee===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ee=!0),T=T.texture),W(T,b)}this.allocateTextureUnit=C,this.resetTextureUnits=N,this.setTexture2D=I,this.setTexture2DArray=R,this.setTexture3D=z,this.setTextureCube=W,this.setupRenderTarget=Ee,this.updateRenderTargetMipmap=Se,this.updateMultisampleRenderTarget=Ve,this.safeSetTexture2D=ve,this.safeSetTextureCube=he}function tv(t,e,n){const i=n.isWebGL2;function r(s){let o;if(s===Ba)return 5121;if(s===ku)return 32819;if(s===Uu)return 32820;if(s===Hu)return 33635;if(s===Fu)return 5120;if(s===Ou)return 5122;if(s===Xs)return 5123;if(s===Bu)return 5124;if(s===Ws)return 5125;if(s===Bn)return 5126;if(s===Ys)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===Gu)return 6406;if(s===si)return 6407;if(s===Kt)return 6408;if(s===Vu)return 6409;if(s===Wu)return 6410;if(s===Vi)return 6402;if(s===Fr)return 34041;if(s===ju)return 6403;if(s===qu)return 36244;if(s===Xu)return 33319;if(s===Yu)return 33320;if(s===Zu)return 36248;if(s===Ju)return 36249;if(s===nl||s===il||s===rl||s===sl)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===nl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===il)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===rl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===sl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===ol||s===al||s===ll||s===cl)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===ol)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===al)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===ll)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===cl)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Ku)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===hl||s===ul)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===hl)return o.COMPRESSED_RGB8_ETC2;if(s===ul)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===Qu||s===$u||s===ef||s===tf||s===nf||s===rf||s===sf||s===of||s===af||s===lf||s===cf||s===hf||s===uf||s===ff||s===pf||s===mf||s===gf||s===vf||s===yf||s===xf||s===_f||s===bf||s===wf||s===Mf||s===Sf||s===Tf||s===Ef||s===Af)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===df)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===Cr)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function ca(t=[]){pt.call(this),this.cameras=t}ca.prototype=Object.assign(Object.create(pt.prototype),{constructor:ca,isArrayCamera:!0});function kn(){Me.call(this),this.type="Group"}kn.prototype=Object.assign(Object.create(Me.prototype),{constructor:kn,isGroup:!0});function Rr(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Rr.prototype,{constructor:Rr,getHandSpace:function(){if(this._hand===null&&(this._hand=new kn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const e=new kn;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new kn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new kn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(l&&t.hand){s=!0;for(let c=0;c<=window.XRHand.LITTLE_PHALANX_TIP;c++)if(t.hand[c]){const u=e.getJointPose(t.hand[c],n),h=l.joints[c];u!==null&&(h.matrix.fromArray(u.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.jointRadius=u.radius),h.visible=u!==null;const d=l.joints[window.XRHand.INDEX_PHALANX_TIP],f=l.joints[window.XRHand.THUMB_PHALANX_TIP],p=d.position.distanceTo(f.position),v=.02,y=.005;l.inputState.pinching&&p>v+y?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&p<=v-y&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else o!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function Mh(t,e){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,u=new pt;u.layers.enable(1),u.viewport=new Je;const h=new pt;h.layers.enable(2),h.viewport=new Je;const d=[u,h],f=new ca;f.layers.enable(1),f.layers.enable(2);let p=null,v=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(P){let N=l[P];return N===void 0&&(N=new Rr,l[P]=N),N.getTargetRaySpace()},this.getControllerGrip=function(P){let N=l[P];return N===void 0&&(N=new Rr,l[P]=N),N.getGripSpace()},this.getHand=function(P){let N=l[P];return N===void 0&&(N=new Rr,l[P]=N),N.getHandSpace()};function y(P){const N=c.get(P.inputSource);N&&N.dispatchEvent({type:P.type,data:P.inputSource})}function g(){c.forEach(function(P,N){P.disconnect(N)}),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),J.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function m(P){s=P,J.setContext(i),J.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(P){r=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(P){o=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(P){if(i=P,i!==null){i.addEventListener("select",y),i.addEventListener("selectstart",y),i.addEventListener("selectend",y),i.addEventListener("squeeze",y),i.addEventListener("squeezestart",y),i.addEventListener("squeezeend",y),i.addEventListener("end",g);const N=e.getContextAttributes();N.xrCompatible!==!0&&e.makeXRCompatible();const C={antialias:N.antialias,alpha:N.alpha,depth:N.depth,stencil:N.stencil,framebufferScaleFactor:r},I=new XRWebGLLayer(i,e,C);i.updateRenderState({baseLayer:I}),i.requestReferenceSpace(o).then(m),i.addEventListener("inputsourceschange",w)}};function w(P){const N=i.inputSources;for(let C=0;C<l.length;C++)c.set(N[C],l[C]);for(let C=0;C<P.removed.length;C++){const I=P.removed[C],R=c.get(I);R&&(R.dispatchEvent({type:"disconnected",data:I}),c.delete(I))}for(let C=0;C<P.added.length;C++){const I=P.added[C],R=c.get(I);R&&R.dispatchEvent({type:"connected",data:I})}}const S=new E,M=new E;function x(P,N,C){S.setFromMatrixPosition(N.matrixWorld),M.setFromMatrixPosition(C.matrixWorld);const I=S.distanceTo(M),R=N.projectionMatrix.elements,z=C.projectionMatrix.elements,W=R[14]/(R[10]-1),Q=R[14]/(R[10]+1),se=(R[9]+1)/R[5],ce=(R[9]-1)/R[5],ue=(R[8]-1)/R[0],Le=(z[8]+1)/z[0],Pe=W*ue,qe=W*Le,V=I/(-ue+Le),at=V*-ue;N.matrixWorld.decompose(P.position,P.quaternion,P.scale),P.translateX(at),P.translateZ(V),P.matrixWorld.compose(P.position,P.quaternion,P.scale),P.matrixWorldInverse.copy(P.matrixWorld).invert();const ye=W+V,Ee=Q+V,Se=Pe-at,Ve=qe+(I-at),De=se*Q/Ee*ye,Z=ce*Q/Ee*ye;P.projectionMatrix.makePerspective(Se,Ve,De,Z,ye,Ee)}function A(P,N){N===null?P.matrixWorld.copy(P.matrix):P.matrixWorld.multiplyMatrices(N.matrixWorld,P.matrix),P.matrixWorldInverse.copy(P.matrixWorld).invert()}this.getCamera=function(P){f.near=h.near=u.near=P.near,f.far=h.far=u.far=P.far,(p!==f.near||v!==f.far)&&(i.updateRenderState({depthNear:f.near,depthFar:f.far}),p=f.near,v=f.far);const N=P.parent,C=f.cameras;A(f,N);for(let R=0;R<C.length;R++)A(C[R],N);P.matrixWorld.copy(f.matrixWorld);const I=P.children;for(let R=0,z=I.length;R<z;R++)I[R].updateMatrixWorld(!0);return C.length===2?x(f,u,h):f.projectionMatrix.copy(u.projectionMatrix),f};let H=null;function O(P,N){if(a=N.getViewerPose(s),a!==null){const I=a.views,R=i.renderState.baseLayer;t.setFramebuffer(R.framebuffer);let z=!1;I.length!==f.cameras.length&&(f.cameras.length=0,z=!0);for(let W=0;W<I.length;W++){const Q=I[W],se=R.getViewport(Q),ce=d[W];ce.matrix.fromArray(Q.transform.matrix),ce.projectionMatrix.fromArray(Q.projectionMatrix),ce.viewport.set(se.x,se.y,se.width,se.height),W===0&&f.matrix.copy(ce.matrix),z===!0&&f.cameras.push(ce)}}const C=i.inputSources;for(let I=0;I<l.length;I++){const R=l[I],z=C[I];R.update(z,N,s)}H&&H(P,N)}const J=new ph;J.setAnimationLoop(O),this.setAnimationLoop=function(P){H=P},this.dispose=function(){}}Object.assign(Mh.prototype,Ln.prototype);function nv(t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,w,S){m.isMeshBasicMaterial?i(g,m):m.isMeshLambertMaterial?(i(g,m),l(g,m)):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),m.isMeshPhysicalMaterial?d(g,m):h(g,m)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?(i(g,m),p(g,m)):m.isMeshDistanceMaterial?(i(g,m),v(g,m)):m.isMeshNormalMaterial?(i(g,m),y(g,m)):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&s(g,m)):m.isPointsMaterial?o(g,m,w,S):m.isSpriteMaterial?a(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.specularMap&&(g.specularMap.value=m.specularMap);const w=t.get(m).envMap;if(w){g.envMap.value=w,g.flipEnvMap.value=w.isCubeTexture&&w._needsFlipEnvMap?-1:1,g.reflectivity.value=m.reflectivity,g.refractionRatio.value=m.refractionRatio;const x=t.get(w).__maxMipLevel;x!==void 0&&(g.maxMipLevel.value=x)}m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let S;m.map?S=m.map:m.specularMap?S=m.specularMap:m.displacementMap?S=m.displacementMap:m.normalMap?S=m.normalMap:m.bumpMap?S=m.bumpMap:m.roughnessMap?S=m.roughnessMap:m.metalnessMap?S=m.metalnessMap:m.alphaMap?S=m.alphaMap:m.emissiveMap?S=m.emissiveMap:m.clearcoatMap?S=m.clearcoatMap:m.clearcoatNormalMap?S=m.clearcoatNormalMap:m.clearcoatRoughnessMap&&(S=m.clearcoatRoughnessMap),S!==void 0&&(S.isWebGLRenderTarget&&(S=S.texture),S.matrixAutoUpdate===!0&&S.updateMatrix(),g.uvTransform.value.copy(S.matrix));let M;m.aoMap?M=m.aoMap:m.lightMap&&(M=m.lightMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uv2Transform.value.copy(M.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function s(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function o(g,m,w,S){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*w,g.scale.value=S*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let M;m.map?M=m.map:m.alphaMap&&(M=m.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uvTransform.value.copy(M.matrix))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let w;m.map?w=m.map:m.alphaMap&&(w=m.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),g.uvTransform.value.copy(w.matrix))}function l(g,m){m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap)}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===vt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===vt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===vt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===vt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===vt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===vt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m){h(g,m),g.reflectivity.value=m.reflectivity,g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.sheen&&g.sheen.value.copy(m.sheen),m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===vt&&g.clearcoatNormalScale.value.negate()),g.transmission.value=m.transmission,m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===vt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===vt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function p(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function v(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}function y(g,m){m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===vt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===vt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function iv(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}function ns(t){t=t||{};const e=t.canvas!==void 0?t.canvas:iv(),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,s=t.stencil!==void 0?t.stencil:!0,o=t.antialias!==void 0?t.antialias:!1,a=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",u=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let h=null,d=null;const f=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=$r,this.physicallyCorrectLights=!1,this.toneMapping=Lr,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let v=!1,y=null,g=0,m=0,w=null,S=null,M=-1,x=null;const A=new Je,H=new Je;let O=null,J=e.width,P=e.height,N=1,C=null,I=null;const R=new Je(0,0,J,P),z=new Je(0,0,J,P);let W=!1;const Q=new vo;let se=!1,ce=!1;const ue=new Fe,Le=new E,Pe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function qe(){return w===null?N:1}let V=n;function at(_,B){for(let F=0;F<_.length;F++){const G=_[F],ae=e.getContext(G,B);if(ae!==null)return ae}return null}try{const _={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",Ze,!1),e.addEventListener("webglcontextrestored",ft,!1),V===null){const B=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&B.shift(),V=at(B,_),V===null)throw at(B)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(_){throw console.error("THREE.WebGLRenderer: "+_.message),_}let ye,Ee,Se,Ve,De,Z,X,ee,ve,he,T,b,Y,j,L,K,oe,de,te,pe,xe;function Ce(){ye=new Nm(V),Ee=new Rm(V,ye,t),Ee.isWebGL2===!1&&(ye.get("WEBGL_depth_texture"),ye.get("OES_texture_float"),ye.get("OES_texture_half_float"),ye.get("OES_texture_half_float_linear"),ye.get("OES_standard_derivatives"),ye.get("OES_element_index_uint"),ye.get("OES_vertex_array_object"),ye.get("ANGLE_instanced_arrays")),ye.get("OES_texture_float_linear"),pe=new tv(V,ye,Ee),Se=new $g(V,ye,Ee),Se.scissor(H.copy(z).multiplyScalar(N).floor()),Se.viewport(A.copy(R).multiplyScalar(N).floor()),Ve=new Om,De=new Hg,Z=new ev(V,ye,Se,De,Ee,pe,Ve),X=new Dm(p),ee=new sd(V,Ee),xe=new Cm(V,ye,ee,Ee),ve=new zm(V,ee,Ve,xe),he=new Hm(V,ve,ee,Ve),oe=new Um(V),L=new Im(De),T=new Ug(p,X,ye,Ee,xe,L),b=new nv(De),Y=new Wg(De),j=new Jg(ye,Ee),K=new Lm(p,X,Se,he,a),de=new Pm(V,ye,Ve,Ee),te=new Fm(V,ye,Ve,Ee),Ve.programs=T.programs,p.capabilities=Ee,p.extensions=ye,p.properties=De,p.renderLists=Y,p.state=Se,p.info=Ve}Ce();const fe=new Mh(p,V);this.xr=fe;const be=new wh(p,he,Ee.maxTextureSize);this.shadowMap=be,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const _=ye.get("WEBGL_lose_context");_&&_.loseContext()},this.forceContextRestore=function(){const _=ye.get("WEBGL_lose_context");_&&_.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(_){_!==void 0&&(N=_,this.setSize(J,P,!1))},this.getSize=function(_){return _===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),_=new q),_.set(J,P)},this.setSize=function(_,B,F){if(fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}J=_,P=B,e.width=Math.floor(_*N),e.height=Math.floor(B*N),F!==!1&&(e.style.width=_+"px",e.style.height=B+"px"),this.setViewport(0,0,_,B)},this.getDrawingBufferSize=function(_){return _===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),_=new q),_.set(J*N,P*N).floor()},this.setDrawingBufferSize=function(_,B,F){J=_,P=B,N=F,e.width=Math.floor(_*F),e.height=Math.floor(B*F),this.setViewport(0,0,_,B)},this.getCurrentViewport=function(_){return _===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),_=new Je),_.copy(A)},this.getViewport=function(_){return _.copy(R)},this.setViewport=function(_,B,F,G){_.isVector4?R.set(_.x,_.y,_.z,_.w):R.set(_,B,F,G),Se.viewport(A.copy(R).multiplyScalar(N).floor())},this.getScissor=function(_){return _.copy(z)},this.setScissor=function(_,B,F,G){_.isVector4?z.set(_.x,_.y,_.z,_.w):z.set(_,B,F,G),Se.scissor(H.copy(z).multiplyScalar(N).floor())},this.getScissorTest=function(){return W},this.setScissorTest=function(_){Se.setScissorTest(W=_)},this.setOpaqueSort=function(_){C=_},this.setTransparentSort=function(_){I=_},this.getClearColor=function(_){return _===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),_=new _e),_.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(_,B,F){let G=0;(_===void 0||_)&&(G|=16384),(B===void 0||B)&&(G|=256),(F===void 0||F)&&(G|=1024),V.clear(G)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ze,!1),e.removeEventListener("webglcontextrestored",ft,!1),Y.dispose(),j.dispose(),De.dispose(),X.dispose(),he.dispose(),xe.dispose(),fe.dispose(),rt.stop()};function Ze(_){_.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function ft(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1,Ce()}function pi(_){const B=_.target;B.removeEventListener("dispose",pi),hn(B)}function hn(_){un(_),De.remove(_)}function un(_){const B=De.get(_).program;B!==void 0&&T.releaseProgram(B)}function fr(_,B){_.render(function(F){p.renderBufferImmediate(F,B)})}this.renderBufferImmediate=function(_,B){xe.initAttributes();const F=De.get(_);_.hasPositions&&!F.position&&(F.position=V.createBuffer()),_.hasNormals&&!F.normal&&(F.normal=V.createBuffer()),_.hasUvs&&!F.uv&&(F.uv=V.createBuffer()),_.hasColors&&!F.color&&(F.color=V.createBuffer());const G=B.getAttributes();_.hasPositions&&(V.bindBuffer(34962,F.position),V.bufferData(34962,_.positionArray,35048),xe.enableAttribute(G.position),V.vertexAttribPointer(G.position,3,5126,!1,0,0)),_.hasNormals&&(V.bindBuffer(34962,F.normal),V.bufferData(34962,_.normalArray,35048),xe.enableAttribute(G.normal),V.vertexAttribPointer(G.normal,3,5126,!1,0,0)),_.hasUvs&&(V.bindBuffer(34962,F.uv),V.bufferData(34962,_.uvArray,35048),xe.enableAttribute(G.uv),V.vertexAttribPointer(G.uv,2,5126,!1,0,0)),_.hasColors&&(V.bindBuffer(34962,F.color),V.bufferData(34962,_.colorArray,35048),xe.enableAttribute(G.color),V.vertexAttribPointer(G.color,3,5126,!1,0,0)),xe.disableUnusedAttributes(),V.drawArrays(4,0,_.count),_.count=0},this.renderBufferDirect=function(_,B,F,G,ae,Oe){B===null&&(B=Pe);const Re=ae.isMesh&&ae.matrixWorld.determinant()<0,Be=ct(_,B,G,ae);Se.setMaterial(G,Re);let Ne=F.index;const et=F.attributes.position;if(Ne===null){if(et===void 0||et.count===0)return}else if(Ne.count===0)return;let tt=1;G.wireframe===!0&&(Ne=ve.getWireframeAttribute(F),tt=2),(G.morphTargets||G.morphNormals)&&oe.update(ae,F,G,Be),xe.setup(ae,G,Be,F,Ne);let Ie,He=de;Ne!==null&&(Ie=ee.get(Ne),He=te,He.setIndex(Ie));const Lt=Ne!==null?Ne.count:et.count,Xe=F.drawRange.start*tt,jt=F.drawRange.count*tt,ot=Oe!==null?Oe.start*tt:0,Kn=Oe!==null?Oe.count*tt:1/0,mt=Math.max(Xe,ot),dn=Math.min(Lt,Xe+jt,ot+Kn)-1,pn=Math.max(0,dn-mt+1);if(pn!==0){if(ae.isMesh)G.wireframe===!0?(Se.setLineWidth(G.wireframeLinewidth*qe()),He.setMode(1)):He.setMode(4);else if(ae.isLine){let mn=G.linewidth;mn===void 0&&(mn=1),Se.setLineWidth(mn*qe()),ae.isLineSegments?He.setMode(1):ae.isLineLoop?He.setMode(2):He.setMode(3)}else ae.isPoints?He.setMode(0):ae.isSprite&&He.setMode(4);if(ae.isInstancedMesh)He.renderInstances(mt,pn,ae.count);else if(F.isInstancedBufferGeometry){const mn=Math.min(F.instanceCount,F._maxInstanceCount);He.renderInstances(mt,pn,mn)}else He.render(mt,pn)}},this.compile=function(_,B){d=j.get(_),d.init(),_.traverseVisible(function(G){G.isLight&&G.layers.test(B.layers)&&(d.pushLight(G),G.castShadow&&d.pushShadow(G))}),d.setupLights();const F=new WeakMap;_.traverse(function(G){const ae=G.material;if(ae)if(Array.isArray(ae))for(let Oe=0;Oe<ae.length;Oe++){const Re=ae[Oe];F.has(Re)===!1&&(Ft(Re,_,G),F.set(Re))}else F.has(ae)===!1&&(Ft(ae,_,G),F.set(ae))})};let Jn=null;function lt(_){fe.isPresenting||Jn&&Jn(_)}const rt=new ph;rt.setAnimationLoop(lt),typeof window<"u"&&rt.setContext(window),this.setAnimationLoop=function(_){Jn=_,fe.setAnimationLoop(_),_===null?rt.stop():rt.start()},this.render=function(_,B){let F,G;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),F=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),G=arguments[3]),B!==void 0&&B.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;xe.resetDefaultState(),M=-1,x=null,_.autoUpdate===!0&&_.updateMatrixWorld(),B.parent===null&&B.updateMatrixWorld(),fe.enabled===!0&&fe.isPresenting===!0&&(B=fe.getCamera(B)),_.isScene===!0&&_.onBeforeRender(p,_,B,F||w),d=j.get(_,f.length),d.init(),f.push(d),ue.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),Q.setFromProjectionMatrix(ue),ce=this.localClippingEnabled,se=L.init(this.clippingPlanes,ce,B),h=Y.get(_,B),h.init(),dr(_,B,0,p.sortObjects),h.finish(),p.sortObjects===!0&&h.sort(C,I),se===!0&&L.beginShadows();const ae=d.state.shadowsArray;be.render(ae,_,B),d.setupLights(),d.setupLightsView(B),se===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),F!==void 0&&this.setRenderTarget(F),K.render(h,_,B,G);const Oe=h.opaque,Re=h.transparent;Oe.length>0&&fn(Oe,_,B),Re.length>0&&fn(Re,_,B),_.isScene===!0&&_.onAfterRender(p,_,B),w!==null&&(Z.updateRenderTargetMipmap(w),Z.updateMultisampleRenderTarget(w)),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1),f.pop(),f.length>0?d=f[f.length-1]:d=null,h=null};function dr(_,B,F,G){if(_.visible===!1)return;if(_.layers.test(B.layers)){if(_.isGroup)F=_.renderOrder;else if(_.isLOD)_.autoUpdate===!0&&_.update(B);else if(_.isLight)d.pushLight(_),_.castShadow&&d.pushShadow(_);else if(_.isSprite){if(!_.frustumCulled||Q.intersectsSprite(_)){G&&Le.setFromMatrixPosition(_.matrixWorld).applyMatrix4(ue);const Re=he.update(_),Be=_.material;Be.visible&&h.push(_,Re,Be,F,Le.z,null)}}else if(_.isImmediateRenderObject)G&&Le.setFromMatrixPosition(_.matrixWorld).applyMatrix4(ue),h.push(_,null,_.material,F,Le.z,null);else if((_.isMesh||_.isLine||_.isPoints)&&(_.isSkinnedMesh&&_.skeleton.frame!==Ve.render.frame&&(_.skeleton.update(),_.skeleton.frame=Ve.render.frame),!_.frustumCulled||Q.intersectsObject(_))){G&&Le.setFromMatrixPosition(_.matrixWorld).applyMatrix4(ue);const Re=he.update(_),Be=_.material;if(Array.isArray(Be)){const Ne=Re.groups;for(let et=0,tt=Ne.length;et<tt;et++){const Ie=Ne[et],He=Be[Ie.materialIndex];He&&He.visible&&h.push(_,Re,He,F,Le.z,Ie)}}else Be.visible&&h.push(_,Re,Be,F,Le.z,null)}}const Oe=_.children;for(let Re=0,Be=Oe.length;Re<Be;Re++)dr(Oe[Re],B,F,G)}function fn(_,B,F){const G=B.isScene===!0?B.overrideMaterial:null;for(let ae=0,Oe=_.length;ae<Oe;ae++){const Re=_[ae],Be=Re.object,Ne=Re.geometry,et=G===null?Re.material:G,tt=Re.group;if(F.isArrayCamera){const Ie=F.cameras;for(let He=0,Lt=Ie.length;He<Lt;He++){const Xe=Ie[He];Be.layers.test(Xe.layers)&&(Se.viewport(A.copy(Xe.viewport)),d.setupLightsView(Xe),mi(Be,B,Xe,Ne,et,tt))}}else mi(Be,B,F,Ne,et,tt)}}function mi(_,B,F,G,ae,Oe){if(_.onBeforeRender(p,B,F,G,ae,Oe),_.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,_.matrixWorld),_.normalMatrix.getNormalMatrix(_.modelViewMatrix),_.isImmediateRenderObject){const Re=ct(F,B,ae,_);Se.setMaterial(ae),xe.reset(),fr(_,Re)}else p.renderBufferDirect(F,B,G,ae,_,Oe);_.onAfterRender(p,B,F,G,ae,Oe)}function Ft(_,B,F){B.isScene!==!0&&(B=Pe);const G=De.get(_),ae=d.state.lights,Oe=d.state.shadowsArray,Re=ae.state.version,Be=T.getParameters(_,ae.state,Oe,B,F),Ne=T.getProgramCacheKey(Be);let et=G.program,tt=!0;if(et===void 0)_.addEventListener("dispose",pi);else if(et.cacheKey!==Ne)un(_);else if(G.lightsStateVersion!==Re)tt=!1;else if(Be.shaderID!==void 0){const Xe=_.isMeshStandardMaterial?B.environment:null;G.envMap=X.get(_.envMap||Xe);return}else tt=!1;tt&&(Be.uniforms=T.getUniforms(_),_.onBeforeCompile(Be,p),et=T.acquireProgram(Be,Ne),G.program=et,G.uniforms=Be.uniforms,G.outputEncoding=Be.outputEncoding);const Ie=G.uniforms;(!_.isShaderMaterial&&!_.isRawShaderMaterial||_.clipping===!0)&&(G.numClippingPlanes=L.numPlanes,G.numIntersection=L.numIntersection,Ie.clippingPlanes=L.uniform),G.environment=_.isMeshStandardMaterial?B.environment:null,G.fog=B.fog,G.envMap=X.get(_.envMap||G.environment),G.needsLights=rs(_),G.lightsStateVersion=Re,G.needsLights&&(Ie.ambientLightColor.value=ae.state.ambient,Ie.lightProbe.value=ae.state.probe,Ie.directionalLights.value=ae.state.directional,Ie.directionalLightShadows.value=ae.state.directionalShadow,Ie.spotLights.value=ae.state.spot,Ie.spotLightShadows.value=ae.state.spotShadow,Ie.rectAreaLights.value=ae.state.rectArea,Ie.ltc_1.value=ae.state.rectAreaLTC1,Ie.ltc_2.value=ae.state.rectAreaLTC2,Ie.pointLights.value=ae.state.point,Ie.pointLightShadows.value=ae.state.pointShadow,Ie.hemisphereLights.value=ae.state.hemi,Ie.directionalShadowMap.value=ae.state.directionalShadowMap,Ie.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,Ie.spotShadowMap.value=ae.state.spotShadowMap,Ie.spotShadowMatrix.value=ae.state.spotShadowMatrix,Ie.pointShadowMap.value=ae.state.pointShadowMap,Ie.pointShadowMatrix.value=ae.state.pointShadowMatrix);const He=G.program.getUniforms(),Lt=Hn.seqWithValue(He.seq,Ie);G.uniformsList=Lt}function ct(_,B,F,G){B.isScene!==!0&&(B=Pe),Z.resetTextureUnits();const ae=B.fog,Oe=F.isMeshStandardMaterial?B.environment:null,Re=w===null?p.outputEncoding:w.texture.encoding,Be=X.get(F.envMap||Oe),Ne=De.get(F),et=d.state.lights;if(se===!0&&(ce===!0||_!==x)){const ot=_===x&&F.id===M;L.setState(F,_,ot)}F.version===Ne.__version?(F.fog&&Ne.fog!==ae||Ne.environment!==Oe||Ne.needsLights&&Ne.lightsStateVersion!==et.state.version||Ne.numClippingPlanes!==void 0&&(Ne.numClippingPlanes!==L.numPlanes||Ne.numIntersection!==L.numIntersection)||Ne.outputEncoding!==Re||Ne.envMap!==Be)&&Ft(F,B,G):(Ft(F,B,G),Ne.__version=F.version);let tt=!1,Ie=!1,He=!1;const Lt=Ne.program,Xe=Lt.getUniforms(),jt=Ne.uniforms;if(Se.useProgram(Lt.program)&&(tt=!0,Ie=!0,He=!0),F.id!==M&&(M=F.id,Ie=!0),tt||x!==_){if(Xe.setValue(V,"projectionMatrix",_.projectionMatrix),Ee.logarithmicDepthBuffer&&Xe.setValue(V,"logDepthBufFC",2/(Math.log(_.far+1)/Math.LN2)),x!==_&&(x=_,Ie=!0,He=!0),F.isShaderMaterial||F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshStandardMaterial||F.envMap){const ot=Xe.map.cameraPosition;ot!==void 0&&ot.setValue(V,Le.setFromMatrixPosition(_.matrixWorld))}(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial)&&Xe.setValue(V,"isOrthographic",_.isOrthographicCamera===!0),(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial||F.isShadowMaterial||F.skinning)&&Xe.setValue(V,"viewMatrix",_.matrixWorldInverse)}if(F.skinning){Xe.setOptional(V,G,"bindMatrix"),Xe.setOptional(V,G,"bindMatrixInverse");const ot=G.skeleton;if(ot){const Kn=ot.bones;if(Ee.floatVertexTextures){if(ot.boneTexture===null){let mt=Math.sqrt(Kn.length*4);mt=ze.ceilPowerOfTwo(mt),mt=Math.max(mt,4);const dn=new Float32Array(mt*mt*4);dn.set(ot.boneMatrices);const pn=new Ji(dn,mt,mt,Kt,Bn);ot.boneMatrices=dn,ot.boneTexture=pn,ot.boneTextureSize=mt}Xe.setValue(V,"boneTexture",ot.boneTexture,Z),Xe.setValue(V,"boneTextureSize",ot.boneTextureSize)}else Xe.setOptional(V,ot,"boneMatrices")}}return(Ie||Ne.receiveShadow!==G.receiveShadow)&&(Ne.receiveShadow=G.receiveShadow,Xe.setValue(V,"receiveShadow",G.receiveShadow)),Ie&&(Xe.setValue(V,"toneMappingExposure",p.toneMappingExposure),Ne.needsLights&&is(jt,He),ae&&F.fog&&b.refreshFogUniforms(jt,ae),b.refreshMaterialUniforms(jt,F,N,P),Hn.upload(V,Ne.uniformsList,jt,Z)),F.isShaderMaterial&&F.uniformsNeedUpdate===!0&&(Hn.upload(V,Ne.uniformsList,jt,Z),F.uniformsNeedUpdate=!1),F.isSpriteMaterial&&Xe.setValue(V,"center",G.center),Xe.setValue(V,"modelViewMatrix",G.modelViewMatrix),Xe.setValue(V,"normalMatrix",G.normalMatrix),Xe.setValue(V,"modelMatrix",G.matrixWorld),Lt}function is(_,B){_.ambientLightColor.needsUpdate=B,_.lightProbe.needsUpdate=B,_.directionalLights.needsUpdate=B,_.directionalLightShadows.needsUpdate=B,_.pointLights.needsUpdate=B,_.pointLightShadows.needsUpdate=B,_.spotLights.needsUpdate=B,_.spotLightShadows.needsUpdate=B,_.rectAreaLights.needsUpdate=B,_.hemisphereLights.needsUpdate=B}function rs(_){return _.isMeshLambertMaterial||_.isMeshToonMaterial||_.isMeshPhongMaterial||_.isMeshStandardMaterial||_.isShadowMaterial||_.isShaderMaterial&&_.lights===!0}this.setFramebuffer=function(_){y!==_&&w===null&&V.bindFramebuffer(36160,_),y=_},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return m},this.getRenderList=function(){return h},this.setRenderList=function(_){h=_},this.getRenderTarget=function(){return w},this.setRenderTarget=function(_,B=0,F=0){w=_,g=B,m=F,_&&De.get(_).__webglFramebuffer===void 0&&Z.setupRenderTarget(_);let G=y,ae=!1;if(_){const Oe=De.get(_).__webglFramebuffer;_.isWebGLCubeRenderTarget?(G=Oe[B],ae=!0):_.isWebGLMultisampleRenderTarget?G=De.get(_).__webglMultisampledFramebuffer:G=Oe,A.copy(_.viewport),H.copy(_.scissor),O=_.scissorTest}else A.copy(R).multiplyScalar(N).floor(),H.copy(z).multiplyScalar(N).floor(),O=W;if(S!==G&&(V.bindFramebuffer(36160,G),S=G),Se.viewport(A),Se.scissor(H),Se.setScissorTest(O),ae){const Oe=De.get(_.texture);V.framebufferTexture2D(36160,36064,34069+B,Oe.__webglTexture,F)}},this.readRenderTargetPixels=function(_,B,F,G,ae,Oe,Re){if(!(_&&_.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=De.get(_).__webglFramebuffer;if(_.isWebGLCubeRenderTarget&&Re!==void 0&&(Be=Be[Re]),Be){let Ne=!1;Be!==S&&(V.bindFramebuffer(36160,Be),Ne=!0);try{const et=_.texture,tt=et.format,Ie=et.type;if(tt!==Kt&&pe.convert(tt)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Ie!==Ba&&pe.convert(Ie)!==V.getParameter(35738)&&!(Ie===Bn&&(Ee.isWebGL2||ye.get("OES_texture_float")||ye.get("WEBGL_color_buffer_float")))&&!(Ie===Ys&&(Ee.isWebGL2?ye.get("EXT_color_buffer_float"):ye.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}V.checkFramebufferStatus(36160)===36053?B>=0&&B<=_.width-G&&F>=0&&F<=_.height-ae&&V.readPixels(B,F,G,ae,pe.convert(tt),pe.convert(Ie),Oe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Ne&&V.bindFramebuffer(36160,S)}}},this.copyFramebufferToTexture=function(_,B,F=0){const G=Math.pow(2,-F),ae=Math.floor(B.image.width*G),Oe=Math.floor(B.image.height*G),Re=pe.convert(B.format);Z.setTexture2D(B,0),V.copyTexImage2D(3553,F,Re,_.x,_.y,ae,Oe,0),Se.unbindTexture()},this.copyTextureToTexture=function(_,B,F,G=0){const ae=B.image.width,Oe=B.image.height,Re=pe.convert(F.format),Be=pe.convert(F.type);Z.setTexture2D(F,0),V.pixelStorei(37440,F.flipY),V.pixelStorei(37441,F.premultiplyAlpha),V.pixelStorei(3317,F.unpackAlignment),B.isDataTexture?V.texSubImage2D(3553,G,_.x,_.y,ae,Oe,Re,Be,B.image.data):B.isCompressedTexture?V.compressedTexSubImage2D(3553,G,_.x,_.y,B.mipmaps[0].width,B.mipmaps[0].height,Re,B.mipmaps[0].data):V.texSubImage2D(3553,G,_.x,_.y,Re,Be,B.image),G===0&&F.generateMipmaps&&V.generateMipmap(3553),Se.unbindTexture()},this.initTexture=function(_){Z.setTexture2D(_,0),Se.unbindTexture()},this.resetState=function(){Se.reset(),xe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Bl(t){ns.call(this,t)}Bl.prototype=Object.assign(Object.create(ns.prototype),{constructor:Bl,isWebGL1Renderer:!0});class Sh extends Me{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.background!==null&&(n.object.background=this.background.toJSON(e)),this.environment!==null&&(n.object.environment=this.environment.toJSON(e)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}function Ot(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=go,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ze.generateUUID()}Object.defineProperty(Ot.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Ot.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ze.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new Ot(e,this.stride);return n.setUsage(this.usage),n},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ze.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const ni=new E;function ci(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(ci.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}});Object.assign(ci.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)ni.x=this.getX(e),ni.y=this.getY(e),ni.z=this.getZ(e),ni.applyMatrix4(t),this.setXYZ(e,ni.x,ni.y,ni.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new Ae(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ci(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function hi(t){Te.call(this),this.type="SpriteMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}hi.prototype=Object.create(Te.prototype);hi.prototype.constructor=hi;hi.prototype.isSpriteMaterial=!0;hi.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};let Pi;const xr=new E,Ri=new E,Ii=new E,Di=new q,_r=new q,Th=new Fe,bs=new E,br=new E,ws=new E,kl=new q,Vo=new q,Ul=new q;function Hl(t){if(Me.call(this),this.type="Sprite",Pi===void 0){Pi=new Ye;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ot(e,5);Pi.setIndex([0,1,2,0,2,3]),Pi.setAttribute("position",new ci(n,3,0,!1)),Pi.setAttribute("uv",new ci(n,2,3,!1))}this.geometry=Pi,this.material=t!==void 0?t:new hi,this.center=new q(.5,.5)}Hl.prototype=Object.assign(Object.create(Me.prototype),{constructor:Hl,isSprite:!0,raycast:function(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ri.setFromMatrixScale(this.matrixWorld),Th.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Ii.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ri.multiplyScalar(-Ii.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Ms(bs.set(-.5,-.5,0),Ii,s,Ri,i,r),Ms(br.set(.5,-.5,0),Ii,s,Ri,i,r),Ms(ws.set(.5,.5,0),Ii,s,Ri,i,r),kl.set(0,0),Vo.set(1,0),Ul.set(1,1);let o=t.ray.intersectTriangle(bs,br,ws,!1,xr);if(o===null&&(Ms(br.set(-.5,.5,0),Ii,s,Ri,i,r),Vo.set(0,1),o=t.ray.intersectTriangle(bs,ws,br,!1,xr),o===null))return;const a=t.ray.origin.distanceTo(xr);a<t.near||a>t.far||e.push({distance:a,point:xr.clone(),uv:_t.getUV(xr,bs,br,ws,kl,Vo,Ul,new q),face:null,object:this})},copy:function(t){return Me.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}});function Ms(t,e,n,i,r,s){Di.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(_r.x=s*Di.x-r*Di.y,_r.y=r*Di.x+s*Di.y):_r.copy(Di),t.copy(e),t.x+=_r.x,t.y+=_r.y,t.applyMatrix4(Th)}const Ss=new E,Gl=new E;function ha(){Me.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}ha.prototype=Object.assign(Object.create(Me.prototype),{constructor:ha,isLOD:!0,copy:function(t){Me.prototype.copy.call(this,t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Ss.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Ss);this.getObjectForDistance(i).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Ss.setFromMatrixPosition(t.matrixWorld),Gl.setFromMatrixPosition(this.matrixWorld);const n=Ss.distanceTo(Gl)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){const e=Me.prototype.toJSON.call(this,t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});const Vl=new E,Wl=new Je,jl=new Je,rv=new E,ql=new Fe;function ua(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),ut.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Fe,this.bindMatrixInverse=new Fe}ua.prototype=Object.assign(Object.create(ut.prototype),{constructor:ua,isSkinnedMesh:!0,copy:function(t){return ut.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new Je,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){ut.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;Wl.fromBufferAttribute(i.attributes.skinIndex,t),jl.fromBufferAttribute(i.attributes.skinWeight,t),Vl.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const s=jl.getComponent(r);if(s!==0){const o=Wl.getComponent(r);ql.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),e.addScaledVector(rv.copy(Vl).applyMatrix4(ql),s)}}return e.applyMatrix4(this.bindMatrixInverse)}});function fa(){Me.call(this),this.type="Bone"}fa.prototype=Object.assign(Object.create(Me.prototype),{constructor:fa,isBone:!0});const Xl=new Fe,sv=new Fe;function da(t=[],e=[]){this.uuid=ze.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(da.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Fe)}},calculateInverses:function(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Fe;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=t.length;r<s;r++){const o=t[r]?t[r].matrixWorld:sv;Xl.multiplyMatrices(o,e[r]),Xl.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new da(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const r=t.bones[n];let s=e[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new fa),this.bones.push(s),this.boneInverses.push(new Fe().fromArray(t.boneInverses[n]))}return this.init(),this},toJSON:function(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const s=e[i];t.bones.push(s.uuid);const o=n[i];t.boneInverses.push(o.toArray())}return t}});const Yl=new Fe,Zl=new Fe,Ts=[],wr=new ut;function Jl(t,e,n){ut.call(this,t,e),this.instanceMatrix=new Ae(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Jl.prototype=Object.assign(Object.create(ut.prototype),{constructor:Jl,isInstancedMesh:!0,copy:function(t){return ut.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,t*3)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,t*16)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(wr.geometry=this.geometry,wr.material=this.material,wr.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Yl),Zl.multiplyMatrices(n,Yl),wr.matrixWorld=Zl,wr.raycast(t,Ts);for(let s=0,o=Ts.length;s<o;s++){const a=Ts[s];a.instanceId=r,a.object=this,e.push(a)}Ts.length=0}},setColorAt:function(t,e){this.instanceColor===null&&(this.instanceColor=new Ae(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,t*3)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,t*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Vt(t){Te.call(this),this.type="LineBasicMaterial",this.color=new _e(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}Vt.prototype=Object.create(Te.prototype);Vt.prototype.constructor=Vt;Vt.prototype.isLineBasicMaterial=!0;Vt.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Kl=new E,Ql=new E,$l=new Fe,Es=new es,As=new Zn;function Ki(t=new Ye,e=new Vt){Me.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}Ki.prototype=Object.assign(Object.create(Me.prototype),{constructor:Ki,isLine:!0,copy:function(t){return Me.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Kl.fromBufferAttribute(e,i-1),Ql.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Kl.distanceTo(Ql);t.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let i=1,r=e.length;i<r;i++)n[i]=n[i-1],n[i]+=e[i-1].distanceTo(e[i])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),As.copy(n.boundingSphere),As.applyMatrix4(i),As.radius+=r,t.ray.intersectsSphere(As)===!1)return;$l.copy(i).invert(),Es.copy(t.ray).applyMatrix4($l);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new E,l=new E,c=new E,u=new E,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const d=n.index,p=n.attributes.position;if(d!==null){const v=d.array;for(let y=0,g=v.length-1;y<g;y+=h){const m=v[y],w=v[y+1];if(a.fromBufferAttribute(p,m),l.fromBufferAttribute(p,w),Es.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const M=t.ray.origin.distanceTo(u);M<t.near||M>t.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(let v=0,y=p.count-1;v<y;v+=h){if(a.fromBufferAttribute(p,v),l.fromBufferAttribute(p,v+1),Es.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const m=t.ray.origin.distanceTo(u);m<t.near||m>t.far||e.push({distance:m,point:c.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const d=n.vertices,f=d.length;for(let p=0;p<f-1;p+=h){if(Es.distanceSqToSegment(d[p],d[p+1],u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const y=t.ray.origin.distanceTo(u);y<t.near||y>t.far||e.push({distance:y,point:c.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Ls=new E,Cs=new E;function Qs(t,e){Ki.call(this,t,e),this.type="LineSegments"}Qs.prototype=Object.assign(Object.create(Ki.prototype),{constructor:Qs,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)Ls.fromBufferAttribute(e,i),Cs.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ls.distanceTo(Cs);t.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let i=0,r=e.length;i<r;i+=2)Ls.copy(e[i]),Cs.copy(e[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ls.distanceTo(Cs)}return this}});function ec(t,e){Ki.call(this,t,e),this.type="LineLoop"}ec.prototype=Object.assign(Object.create(Ki.prototype),{constructor:ec,isLineLoop:!0});function ui(t){Te.call(this),this.type="PointsMaterial",this.color=new _e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}ui.prototype=Object.create(Te.prototype);ui.prototype.constructor=ui;ui.prototype.isPointsMaterial=!0;ui.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const tc=new Fe,pa=new es,Ps=new Zn,Rs=new E;function ma(t=new Ye,e=new ui){Me.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}ma.prototype=Object.assign(Object.create(Me.prototype),{constructor:ma,isPoints:!0,copy:function(t){return Me.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ps.copy(n.boundingSphere),Ps.applyMatrix4(i),Ps.radius+=r,t.ray.intersectsSphere(Ps)===!1)return;tc.copy(i).invert(),pa.copy(t.ray).applyMatrix4(tc);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position;if(a!==null){const u=a.array;for(let h=0,d=u.length;h<d;h++){const f=u[h];Rs.fromBufferAttribute(c,f),Wo(Rs,f,o,i,t,e,this)}}else for(let u=0,h=c.count;u<h;u++)Rs.fromBufferAttribute(c,u),Wo(Rs,u,o,i,t,e,this)}else{const a=n.vertices;for(let l=0,c=a.length;l<c;l++)Wo(a[l],l,o,i,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Wo(t,e,n,i,r,s,o){const a=pa.distanceSqToPoint(t);if(a<n){const l=new E;pa.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}function nc(t,e,n,i,r,s,o,a,l){$e.call(this,t,e,n,i,r,s,o,a,l),this.format=o!==void 0?o:si,this.minFilter=s!==void 0?s:bt,this.magFilter=r!==void 0?r:bt,this.generateMipmaps=!1;const c=this;function u(){c.needsUpdate=!0,t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(u)}nc.prototype=Object.assign(Object.create($e.prototype),{constructor:nc,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Gr(t,e,n,i,r,s,o,a,l,c,u,h){$e.call(this,null,s,o,a,l,c,i,r,u,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}Gr.prototype=Object.create($e.prototype);Gr.prototype.constructor=Gr;Gr.prototype.isCompressedTexture=!0;function $s(t,e,n,i,r,s,o,a,l){$e.call(this,t,e,n,i,r,s,o,a,l),this.needsUpdate=!0}$s.prototype=Object.create($e.prototype);$s.prototype.constructor=$s;$s.prototype.isCanvasTexture=!0;function eo(t,e,n,i,r,s,o,a,l,c){if(c=c!==void 0?c:Vi,c!==Vi&&c!==Fr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===Vi&&(n=Xs),n===void 0&&c===Fr&&(n=Cr),$e.call(this,null,i,r,s,o,a,c,n,l),this.image={width:t,height:e},this.magFilter=o!==void 0?o:St,this.minFilter=a!==void 0?a:St,this.flipY=!1,this.generateMipmaps=!1}eo.prototype=Object.create($e.prototype);eo.prototype.constructor=eo;eo.prototype.isDepthTexture=!0;let ov=0;const en=new Fe,jo=new Me,Is=new E;function Bt(){Object.defineProperty(this,"id",{value:ov+=2}),this.uuid=ze.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Bt.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Bt,isGeometry:!0,applyMatrix4:function(t){const e=new At().getNormalMatrix(t);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(t);for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(e).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return en.makeRotationX(t),this.applyMatrix4(en),this},rotateY:function(t){return en.makeRotationY(t),this.applyMatrix4(en),this},rotateZ:function(t){return en.makeRotationZ(t),this.applyMatrix4(en),this},translate:function(t,e,n){return en.makeTranslation(t,e,n),this.applyMatrix4(en),this},scale:function(t,e,n){return en.makeScale(t,e,n),this.applyMatrix4(en),this},lookAt:function(t){return jo.lookAt(t),jo.updateMatrix(),this.applyMatrix4(jo.matrix),this},fromBufferGeometry:function(t){const e=this,n=t.index!==null?t.index:void 0,i=t.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,l=i.uv2;l!==void 0&&(this.faceVertexUvs[1]=[]);for(let h=0;h<r.count;h++)e.vertices.push(new E().fromBufferAttribute(r,h)),o!==void 0&&e.colors.push(new _e().fromBufferAttribute(o,h));function c(h,d,f,p){const v=o===void 0?[]:[e.colors[h].clone(),e.colors[d].clone(),e.colors[f].clone()],y=s===void 0?[]:[new E().fromBufferAttribute(s,h),new E().fromBufferAttribute(s,d),new E().fromBufferAttribute(s,f)],g=new ta(h,d,f,y,v,p);e.faces.push(g),a!==void 0&&e.faceVertexUvs[0].push([new q().fromBufferAttribute(a,h),new q().fromBufferAttribute(a,d),new q().fromBufferAttribute(a,f)]),l!==void 0&&e.faceVertexUvs[1].push([new q().fromBufferAttribute(l,h),new q().fromBufferAttribute(l,d),new q().fromBufferAttribute(l,f)])}const u=t.groups;if(u.length>0)for(let h=0;h<u.length;h++){const d=u[h],f=d.start,p=d.count;for(let v=f,y=f+p;v<y;v+=3)n!==void 0?c(n.getX(v),n.getX(v+1),n.getX(v+2),d.materialIndex):c(v,v+1,v+2,d.materialIndex)}else if(n!==void 0)for(let h=0;h<n.count;h+=3)c(n.getX(h),n.getX(h+1),n.getX(h+2));else for(let h=0;h<r.count;h+=3)c(h,h+1,h+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Is).negate(),this.translate(Is.x,Is.y,Is.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new Fe;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new E,e=new E;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];t.subVectors(a,o),e.subVectors(s,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t=!0){const e=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)e[n]=new E;if(t){const n=new E,i=new E;for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],l=this.vertices[o.b],c=this.vertices[o.c];n.subVectors(c,l),i.subVectors(a,l),n.cross(i),e[o.a].add(n),e[o.b].add(n),e[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];e[r.a].add(r.normal),e[r.b].add(r.normal),e[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)e[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(e[r.a]),s[1].copy(e[r.b]),s[2].copy(e[r.c])):(s[0]=e[r.a].clone(),s[1]=e[r.b].clone(),s[2]=e[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const n=this.faces[t],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const t=new Bt;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const r=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const l=new E,c={a:new E,b:new E,c:new E};r.push(l),s.push(c)}}const i=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],l=i.vertexNormals[r];a.copy(o.normal),l.a.copy(o.vertexNormals[0]),l.b.copy(o.vertexNormals[1]),l.c.copy(o.vertexNormals[2])}}for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Yn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Zn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n=0){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}let i;const r=this.vertices.length,s=this.vertices,o=t.vertices,a=this.faces,l=t.faces,c=this.colors,u=t.colors;e!==void 0&&(i=new At().getNormalMatrix(e));for(let h=0,d=o.length;h<d;h++){const p=o[h].clone();e!==void 0&&p.applyMatrix4(e),s.push(p)}for(let h=0,d=u.length;h<d;h++)c.push(u[h].clone());for(let h=0,d=l.length;h<d;h++){const f=l[h];let p,v;const y=f.vertexNormals,g=f.vertexColors,m=new ta(f.a+r,f.b+r,f.c+r);m.normal.copy(f.normal),i!==void 0&&m.normal.applyMatrix3(i).normalize();for(let w=0,S=y.length;w<S;w++)p=y[w].clone(),i!==void 0&&p.applyMatrix3(i).normalize(),m.vertexNormals.push(p);m.color.copy(f.color);for(let w=0,S=g.length;w<S;w++)v=g[w],m.vertexColors.push(v.clone());m.materialIndex=f.materialIndex+n,a.push(m)}for(let h=0,d=t.faceVertexUvs.length;h<d;h++){const f=t.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(let p=0,v=f.length;p<v;p++){const y=f[p],g=[];for(let m=0,w=y.length;m<w;m++)g.push(y[m].clone());this.faceVertexUvs[h].push(g)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(t=4){const e={},n=[],i=[],r=Math.pow(10,t);for(let a=0,l=this.vertices.length;a<l;a++){const c=this.vertices[a],u=Math.round(c.x*r)+"_"+Math.round(c.y*r)+"_"+Math.round(c.z*r);e[u]===void 0?(e[u]=a,n.push(this.vertices[a]),i[a]=n.length-1):i[a]=i[e[u]]}const s=[];for(let a=0,l=this.faces.length;a<l;a++){const c=this.faces[a];c.a=i[c.a],c.b=i[c.b],c.c=i[c.c];const u=[c.a,c.b,c.c];for(let h=0;h<3;h++)if(u[h]===u[(h+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const l=s[a];this.faces.splice(l,1);for(let c=0,u=this.faceVertexUvs.length;c<u;c++)this.faceVertexUvs[c].splice(l,1)}const o=this.vertices.length-n.length;return this.vertices=n,o},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const i=t[e];this.vertices.push(new E(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let a=0;a<e;a++)t[a]._id=a;function n(a,l){return a.materialIndex-l.materialIndex}t.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===e&&(s=[]),r&&r.length===e&&(o=[]);for(let a=0;a<e;a++){const l=t[a]._id;s&&s.push(i[l]),o&&o.push(r[l])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){const f=this.parameters;for(const p in f)f[p]!==void 0&&(t[p]=f[p]);return t}const e=[];for(let f=0;f<this.vertices.length;f++){const p=this.vertices[f];e.push(p.x,p.y,p.z)}const n=[],i=[],r={},s=[],o={},a=[],l={};for(let f=0;f<this.faces.length;f++){const p=this.faces[f],v=!0,y=!1,g=this.faceVertexUvs[0][f]!==void 0,m=p.normal.length()>0,w=p.vertexNormals.length>0,S=p.color.r!==1||p.color.g!==1||p.color.b!==1,M=p.vertexColors.length>0;let x=0;if(x=c(x,0,0),x=c(x,1,v),x=c(x,2,y),x=c(x,3,g),x=c(x,4,m),x=c(x,5,w),x=c(x,6,S),x=c(x,7,M),n.push(x),n.push(p.a,p.b,p.c),n.push(p.materialIndex),g){const A=this.faceVertexUvs[0][f];n.push(d(A[0]),d(A[1]),d(A[2]))}if(m&&n.push(u(p.normal)),w){const A=p.vertexNormals;n.push(u(A[0]),u(A[1]),u(A[2]))}if(S&&n.push(h(p.color)),M){const A=p.vertexColors;n.push(h(A[0]),h(A[1]),h(A[2]))}}function c(f,p,v){return v?f|1<<p:f&~(1<<p)}function u(f){const p=f.x.toString()+f.y.toString()+f.z.toString();return r[p]!==void 0||(r[p]=i.length/3,i.push(f.x,f.y,f.z)),r[p]}function h(f){const p=f.r.toString()+f.g.toString()+f.b.toString();return o[p]!==void 0||(o[p]=s.length,s.push(f.getHex())),o[p]}function d(f){const p=f.x.toString()+f.y.toString();return l[p]!==void 0||(l[p]=a.length/2,a.push(f.x,f.y)),l[p]}return t.data={},t.data.vertices=e,t.data.normals=i,s.length>0&&(t.data.colors=s),a.length>0&&(t.data.uvs=[a]),t.data.faces=n,t},clone:function(){return new Bt().copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let h=0,d=e.length;h<d;h++)this.vertices.push(e[h].clone());const n=t.colors;for(let h=0,d=n.length;h<d;h++)this.colors.push(n[h].clone());const i=t.faces;for(let h=0,d=i.length;h<d;h++)this.faces.push(i[h].clone());for(let h=0,d=t.faceVertexUvs.length;h<d;h++){const f=t.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(let p=0,v=f.length;p<v;p++){const y=f[p],g=[];for(let m=0,w=y.length;m<w;m++){const S=y[m];g.push(S.clone())}this.faceVertexUvs[h].push(g)}}const r=t.morphTargets;for(let h=0,d=r.length;h<d;h++){const f={};if(f.name=r[h].name,r[h].vertices!==void 0){f.vertices=[];for(let p=0,v=r[h].vertices.length;p<v;p++)f.vertices.push(r[h].vertices[p].clone())}if(r[h].normals!==void 0){f.normals=[];for(let p=0,v=r[h].normals.length;p<v;p++)f.normals.push(r[h].normals[p].clone())}this.morphTargets.push(f)}const s=t.morphNormals;for(let h=0,d=s.length;h<d;h++){const f={};if(s[h].vertexNormals!==void 0){f.vertexNormals=[];for(let p=0,v=s[h].vertexNormals.length;p<v;p++){const y=s[h].vertexNormals[p],g={};g.a=y.a.clone(),g.b=y.b.clone(),g.c=y.c.clone(),f.vertexNormals.push(g)}}if(s[h].faceNormals!==void 0){f.faceNormals=[];for(let p=0,v=s[h].faceNormals.length;p<v;p++)f.faceNormals.push(s[h].faceNormals[p].clone())}this.morphNormals.push(f)}const o=t.skinWeights;for(let h=0,d=o.length;h<d;h++)this.skinWeights.push(o[h].clone());const a=t.skinIndices;for(let h=0,d=a.length;h<d;h++)this.skinIndices.push(a[h].clone());const l=t.lineDistances;for(let h=0,d=l.length;h<d;h++)this.lineDistances.push(l[h]);const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=t.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});new E;new E;new E;new _t;const av={triangulate:function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let s=Eh(t,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,d,f;if(i&&(s=fv(t,e,s,n)),t.length>80*n){a=c=t[0],l=u=t[1];for(let p=n;p<r;p+=n)h=t[p],d=t[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?1/f:0}return Vr(s,o,n,a,l,f),o}};function Eh(t,e,n,i,r){let s,o;if(r===Mv(t,e,n,i)>0)for(s=e;s<n;s+=i)o=ic(s,t[s],t[s+1],o);else for(s=n-i;s>=e;s-=i)o=ic(s,t[s],t[s+1],o);return o&&yo(o,o.next)&&(jr(o),o=o.next),o}function Xn(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(yo(n,n.next)||st(n.prev,n,n.next)===0)){if(jr(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Vr(t,e,n,i,r,s,o){if(!t)return;!o&&s&&vv(t,i,r,s);let a=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,s?cv(t,i,r,s):lv(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),jr(t),t=c.next,a=c.next;continue}if(t=c,t===a){o?o===1?(t=hv(Xn(t),e,n),Vr(t,e,n,i,r,s,2)):o===2&&uv(t,e,n,i,r,s):Vr(Xn(t),e,n,i,r,s,1);break}}}function lv(t){const e=t.prev,n=t,i=t.next;if(st(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Hi(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&st(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function cv(t,e,n,i){const r=t.prev,s=t,o=t.next;if(st(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,u=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,h=ga(a,l,e,n,i),d=ga(c,u,e,n,i);let f=t.prevZ,p=t.nextZ;for(;f&&f.z>=h&&p&&p.z<=d;){if(f!==t.prev&&f!==t.next&&Hi(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&st(f.prev,f,f.next)>=0||(f=f.prevZ,p!==t.prev&&p!==t.next&&Hi(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;f&&f.z>=h;){if(f!==t.prev&&f!==t.next&&Hi(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&st(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;p&&p.z<=d;){if(p!==t.prev&&p!==t.next&&Hi(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function hv(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!yo(r,s)&&Ah(r,i,i.next,s)&&Wr(r,s)&&Wr(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),jr(i),jr(i.next),i=t=s),i=i.next}while(i!==t);return Xn(i)}function uv(t,e,n,i,r,s){let o=t;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&_v(o,a)){let l=Lh(o,a);o=Xn(o,o.next),l=Xn(l,l.next),Vr(o,e,n,i,r,s),Vr(l,e,n,i,r,s);return}a=a.next}o=o.next}while(o!==t)}function fv(t,e,n,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:t.length,c=Eh(t,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(xv(c));for(r.sort(dv),s=0;s<r.length;s++)pv(r[s],n),n=Xn(n,n.next);return n}function dv(t,e){return t.x-e.x}function pv(t,e){if(e=mv(t,e),e){const n=Lh(e,t);Xn(e,e.next),Xn(n,n.next)}}function mv(t,e){let n=e;const i=t.x,r=t.y;let s=-1/0,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const d=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(d<=i&&d>s){if(s=d,d===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;n=o;do i>=n.x&&n.x>=l&&i!==n.x&&Hi(r<c?i:s,r,l,c,r<c?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),Wr(n,t)&&(h<u||h===u&&(n.x>o.x||n.x===o.x&&gv(o,n)))&&(o=n,u=h)),n=n.next;while(n!==a);return o}function gv(t,e){return st(t.prev,t,e.prev)<0&&st(e.next,t,t.next)<0}function vv(t,e,n,i){let r=t;do r.z===null&&(r.z=ga(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,yv(r)}function yv(t){let e,n,i,r,s,o,a,l,c=1;do{for(n=t,t=null,s=null,o=0;n;){for(o++,i=n,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(o>1);return t}function ga(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function xv(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Hi(t,e,n,i,r,s,o,a){return(r-o)*(e-a)-(t-o)*(s-a)>=0&&(t-o)*(i-a)-(n-o)*(e-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function _v(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!bv(t,e)&&(Wr(t,e)&&Wr(e,t)&&wv(t,e)&&(st(t.prev,t,e.prev)||st(t,e.prev,e))||yo(t,e)&&st(t.prev,t,t.next)>0&&st(e.prev,e,e.next)>0)}function st(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function yo(t,e){return t.x===e.x&&t.y===e.y}function Ah(t,e,n,i){const r=Ns(st(t,e,n)),s=Ns(st(t,e,i)),o=Ns(st(n,i,t)),a=Ns(st(n,i,e));return!!(r!==s&&o!==a||r===0&&Ds(t,n,e)||s===0&&Ds(t,i,e)||o===0&&Ds(n,t,i)||a===0&&Ds(n,e,i))}function Ds(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ns(t){return t>0?1:t<0?-1:0}function bv(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ah(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Wr(t,e){return st(t.prev,t,t.next)<0?st(t,e,t.next)>=0&&st(t,t.prev,e)>=0:st(t,e,t.prev)<0||st(t,t.next,e)<0}function wv(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function Lh(t,e){const n=new va(t.i,t.x,t.y),i=new va(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function ic(t,e,n,i){const r=new va(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function jr(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function va(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Mv(t,e,n,i){let r=0;for(let s=e,o=n-i;s<n;s+=i)r+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return r}const Gn={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return Gn.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];rc(t),sc(n,t);let s=t.length;e.forEach(rc);for(let a=0;a<e.length;a++)i.push(s),s+=e[a].length,sc(n,e[a]);const o=av.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function rc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function sc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Ch extends Ye{constructor(e,n){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new We(r,3)),this.setAttribute("uv",new We(s,2)),this.computeVertexNormals();function o(a){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,u=n.steps!==void 0?n.steps:1;let h=n.depth!==void 0?n.depth:100,d=n.bevelEnabled!==void 0?n.bevelEnabled:!0,f=n.bevelThickness!==void 0?n.bevelThickness:6,p=n.bevelSize!==void 0?n.bevelSize:f-2,v=n.bevelOffset!==void 0?n.bevelOffset:0,y=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,m=n.UVGenerator!==void 0?n.UVGenerator:Sv;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=n.amount);let w,S=!1,M,x,A,H;g&&(w=g.getSpacedPoints(u),S=!0,d=!1,M=g.computeFrenetFrames(u,!1),x=new E,A=new E,H=new E),d||(y=0,f=0,p=0,v=0);const O=a.extractPoints(c);let J=O.shape;const P=O.holes;if(!Gn.isClockWise(J)){J=J.reverse();for(let Z=0,X=P.length;Z<X;Z++){const ee=P[Z];Gn.isClockWise(ee)&&(P[Z]=ee.reverse())}}const C=Gn.triangulateShape(J,P),I=J;for(let Z=0,X=P.length;Z<X;Z++){const ee=P[Z];J=J.concat(ee)}function R(Z,X,ee){return X||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().multiplyScalar(ee).add(Z)}const z=J.length,W=C.length;function Q(Z,X,ee){let ve,he,T;const b=Z.x-X.x,Y=Z.y-X.y,j=ee.x-Z.x,L=ee.y-Z.y,K=b*b+Y*Y,oe=b*L-Y*j;if(Math.abs(oe)>Number.EPSILON){const de=Math.sqrt(K),te=Math.sqrt(j*j+L*L),pe=X.x-Y/de,xe=X.y+b/de,Ce=ee.x-L/te,fe=ee.y+j/te,be=((Ce-pe)*L-(fe-xe)*j)/(b*L-Y*j);ve=pe+b*be-Z.x,he=xe+Y*be-Z.y;const Ze=ve*ve+he*he;if(Ze<=2)return new q(ve,he);T=Math.sqrt(Ze/2)}else{let de=!1;b>Number.EPSILON?j>Number.EPSILON&&(de=!0):b<-Number.EPSILON?j<-Number.EPSILON&&(de=!0):Math.sign(Y)===Math.sign(L)&&(de=!0),de?(ve=-Y,he=b,T=Math.sqrt(K)):(ve=b,he=Y,T=Math.sqrt(K/2))}return new q(ve/T,he/T)}const se=[];for(let Z=0,X=I.length,ee=X-1,ve=Z+1;Z<X;Z++,ee++,ve++)ee===X&&(ee=0),ve===X&&(ve=0),se[Z]=Q(I[Z],I[ee],I[ve]);const ce=[];let ue,Le=se.concat();for(let Z=0,X=P.length;Z<X;Z++){const ee=P[Z];ue=[];for(let ve=0,he=ee.length,T=he-1,b=ve+1;ve<he;ve++,T++,b++)T===he&&(T=0),b===he&&(b=0),ue[ve]=Q(ee[ve],ee[T],ee[b]);ce.push(ue),Le=Le.concat(ue)}for(let Z=0;Z<y;Z++){const X=Z/y,ee=f*Math.cos(X*Math.PI/2),ve=p*Math.sin(X*Math.PI/2)+v;for(let he=0,T=I.length;he<T;he++){const b=R(I[he],se[he],ve);ye(b.x,b.y,-ee)}for(let he=0,T=P.length;he<T;he++){const b=P[he];ue=ce[he];for(let Y=0,j=b.length;Y<j;Y++){const L=R(b[Y],ue[Y],ve);ye(L.x,L.y,-ee)}}}const Pe=p+v;for(let Z=0;Z<z;Z++){const X=d?R(J[Z],Le[Z],Pe):J[Z];S?(A.copy(M.normals[0]).multiplyScalar(X.x),x.copy(M.binormals[0]).multiplyScalar(X.y),H.copy(w[0]).add(A).add(x),ye(H.x,H.y,H.z)):ye(X.x,X.y,0)}for(let Z=1;Z<=u;Z++)for(let X=0;X<z;X++){const ee=d?R(J[X],Le[X],Pe):J[X];S?(A.copy(M.normals[Z]).multiplyScalar(ee.x),x.copy(M.binormals[Z]).multiplyScalar(ee.y),H.copy(w[Z]).add(A).add(x),ye(H.x,H.y,H.z)):ye(ee.x,ee.y,h/u*Z)}for(let Z=y-1;Z>=0;Z--){const X=Z/y,ee=f*Math.cos(X*Math.PI/2),ve=p*Math.sin(X*Math.PI/2)+v;for(let he=0,T=I.length;he<T;he++){const b=R(I[he],se[he],ve);ye(b.x,b.y,h+ee)}for(let he=0,T=P.length;he<T;he++){const b=P[he];ue=ce[he];for(let Y=0,j=b.length;Y<j;Y++){const L=R(b[Y],ue[Y],ve);S?ye(L.x,L.y+w[u-1].y,w[u-1].x+ee):ye(L.x,L.y,h+ee)}}}qe(),V();function qe(){const Z=r.length/3;if(d){let X=0,ee=z*X;for(let ve=0;ve<W;ve++){const he=C[ve];Ee(he[2]+ee,he[1]+ee,he[0]+ee)}X=u+y*2,ee=z*X;for(let ve=0;ve<W;ve++){const he=C[ve];Ee(he[0]+ee,he[1]+ee,he[2]+ee)}}else{for(let X=0;X<W;X++){const ee=C[X];Ee(ee[2],ee[1],ee[0])}for(let X=0;X<W;X++){const ee=C[X];Ee(ee[0]+z*u,ee[1]+z*u,ee[2]+z*u)}}i.addGroup(Z,r.length/3-Z,0)}function V(){const Z=r.length/3;let X=0;at(I,X),X+=I.length;for(let ee=0,ve=P.length;ee<ve;ee++){const he=P[ee];at(he,X),X+=he.length}i.addGroup(Z,r.length/3-Z,1)}function at(Z,X){let ee=Z.length;for(;--ee>=0;){const ve=ee;let he=ee-1;he<0&&(he=Z.length-1);for(let T=0,b=u+y*2;T<b;T++){const Y=z*T,j=z*(T+1),L=X+ve+Y,K=X+he+Y,oe=X+he+j,de=X+ve+j;Se(L,K,oe,de)}}}function ye(Z,X,ee){l.push(Z),l.push(X),l.push(ee)}function Ee(Z,X,ee){Ve(Z),Ve(X),Ve(ee);const ve=r.length/3,he=m.generateTopUV(i,r,ve-3,ve-2,ve-1);De(he[0]),De(he[1]),De(he[2])}function Se(Z,X,ee,ve){Ve(Z),Ve(X),Ve(ve),Ve(X),Ve(ee),Ve(ve);const he=r.length/3,T=m.generateSideWallUV(i,r,he-6,he-3,he-2,he-1);De(T[0]),De(T[1]),De(T[3]),De(T[1]),De(T[2]),De(T[3])}function Ve(Z){r.push(l[Z*3+0]),r.push(l[Z*3+1]),r.push(l[Z*3+2])}function De(Z){s.push(Z.x),s.push(Z.y)}}}toJSON(){const e=Ye.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return Tv(n,i,e)}}const Sv={generateTopUV:function(t,e,n,i,r){const s=e[n*3],o=e[n*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new q(s,o),new q(a,l),new q(c,u)]},generateSideWallUV:function(t,e,n,i,r,s){const o=e[n*3],a=e[n*3+1],l=e[n*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],d=e[r*3],f=e[r*3+1],p=e[r*3+2],v=e[s*3],y=e[s*3+1],g=e[s*3+2];return Math.abs(a-u)<.01?[new q(o,1-l),new q(c,1-h),new q(d,1-p),new q(v,1-g)]:[new q(a,1-l),new q(u,1-h),new q(f,1-p),new q(y,1-g)]}};function Tv(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Ev extends Bt{constructor(e,n){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},this.fromBufferGeometry(new Ch(e,n)),this.mergeVertices()}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return Av(n,i,e)}}function Av(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function to(t,e,n){Ye.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,l=new E,c=new E,u=new E,h=new E,d=new E;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const f=e+1;for(let p=0;p<=n;p++){const v=p/n;for(let y=0;y<=e;y++){const g=y/e;t(g,v,c),r.push(c.x,c.y,c.z),g-a>=0?(t(g-a,v,u),h.subVectors(c,u)):(t(g+a,v,u),h.subVectors(u,c)),v-a>=0?(t(g,v-a,u),d.subVectors(c,u)):(t(g,v+a,u),d.subVectors(u,c)),l.crossVectors(h,d).normalize(),s.push(l.x,l.y,l.z),o.push(g,v)}}for(let p=0;p<n;p++)for(let v=0;v<e;v++){const y=p*f+v,g=p*f+v+1,m=(p+1)*f+v+1,w=(p+1)*f+v;i.push(y,g,w),i.push(g,m,w)}this.setIndex(i),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(o,2))}to.prototype=Object.create(Ye.prototype);to.prototype.constructor=to;function ya(t,e,n){Bt.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new to(t,e,n)),this.mergeVertices()}ya.prototype=Object.create(Bt.prototype);ya.prototype.constructor=ya;class Lv extends Ye{constructor(e,n=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(o,2));function c(u){const h=r.length/3,d=u.extractPoints(n);let f=d.shape;const p=d.holes;Gn.isClockWise(f)===!1&&(f=f.reverse());for(let y=0,g=p.length;y<g;y++){const m=p[y];Gn.isClockWise(m)===!0&&(p[y]=m.reverse())}const v=Gn.triangulateShape(f,p);for(let y=0,g=p.length;y<g;y++){const m=p[y];f=f.concat(m)}for(let y=0,g=f.length;y<g;y++){const m=f[y];r.push(m.x,m.y,0),s.push(0,0,1),o.push(m.x,m.y)}for(let y=0,g=v.length;y<g;y++){const m=v[y],w=m[0]+h,S=m[1]+h,M=m[2]+h;i.push(w,S,M),l+=3}}}toJSON(){const e=Ye.prototype.toJSON.call(this),n=this.parameters.shapes;return Cv(n,e)}}function Cv(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class Pv extends Bt{constructor(e,n){super(),this.type="ShapeGeometry",typeof n=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),n=n.curveSegments),this.parameters={shapes:e,curveSegments:n},this.fromBufferGeometry(new Lv(e,n)),this.mergeVertices()}toJSON(){const e=Bt.prototype.toJSON.call(this),n=this.parameters.shapes;return Rv(n,e)}}function Rv(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class Iv extends Ye{constructor(e=1,n=8,i=6,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new E,d=new E,f=[],p=[],v=[],y=[];for(let g=0;g<=i;g++){const m=[],w=g/i;let S=0;g==0&&o==0?S=.5/n:g==i&&l==Math.PI&&(S=-.5/n);for(let M=0;M<=n;M++){const x=M/n;h.x=-e*Math.cos(r+x*s)*Math.sin(o+w*a),h.y=e*Math.cos(o+w*a),h.z=e*Math.sin(r+x*s)*Math.sin(o+w*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),v.push(d.x,d.y,d.z),y.push(x+S,1-w),m.push(c++)}u.push(m)}for(let g=0;g<i;g++)for(let m=0;m<n;m++){const w=u[g][m+1],S=u[g][m],M=u[g+1][m],x=u[g+1][m+1];(g!==0||o>0)&&f.push(w,S,x),(g!==i-1||l<Math.PI)&&f.push(S,M,x)}this.setIndex(f),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(v,3)),this.setAttribute("uv",new We(y,2))}}class Ph extends Bt{constructor(e,n,i,r,s,o,a){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Iv(e,n,i,r,s,o,a)),this.mergeVertices()}}function Qi(t){Te.call(this),this.type="ShadowMaterial",this.color=new _e(0),this.transparent=!0,this.setValues(t)}Qi.prototype=Object.create(Te.prototype);Qi.prototype.constructor=Qi;Qi.prototype.isShadowMaterial=!0;Qi.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this};function qr(t){wt.call(this,t),this.type="RawShaderMaterial"}qr.prototype=Object.create(wt.prototype);qr.prototype.constructor=qr;qr.prototype.isRawShaderMaterial=!0;function Mn(t){Te.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new _e(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}Mn.prototype=Object.create(Te.prototype);Mn.prototype.constructor=Mn;Mn.prototype.isMeshStandardMaterial=!0;Mn.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};function fi(t){Mn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=ze.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}fi.prototype=Object.create(Mn.prototype);fi.prototype.constructor=fi;fi.prototype.isMeshPhysicalMaterial=!0;fi.prototype.copy=function(t){return Mn.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new _e).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};function di(t){Te.call(this),this.type="MeshPhongMaterial",this.color=new _e(16777215),this.specular=new _e(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}di.prototype=Object.create(Te.prototype);di.prototype.constructor=di;di.prototype.isMeshPhongMaterial=!0;di.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function $i(t){Te.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new _e(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}$i.prototype=Object.create(Te.prototype);$i.prototype.constructor=$i;$i.prototype.isMeshToonMaterial=!0;$i.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function er(t){Te.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}er.prototype=Object.create(Te.prototype);er.prototype.constructor=er;er.prototype.isMeshNormalMaterial=!0;er.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function tr(t){Te.call(this),this.type="MeshLambertMaterial",this.color=new _e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}tr.prototype=Object.create(Te.prototype);tr.prototype.constructor=tr;tr.prototype.isMeshLambertMaterial=!0;tr.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function nr(t){Te.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new _e(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}nr.prototype=Object.create(Te.prototype);nr.prototype.constructor=nr;nr.prototype.isMeshMatcapMaterial=!0;nr.prototype.copy=function(t){return Te.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function ir(t){Vt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}ir.prototype=Object.create(Vt.prototype);ir.prototype.constructor=ir;ir.prototype.isLineDashedMaterial=!0;ir.prototype.copy=function(t){return Vt.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Dv=Object.freeze({__proto__:null,ShadowMaterial:Qi,SpriteMaterial:hi,RawShaderMaterial:qr,ShaderMaterial:wt,PointsMaterial:ui,MeshPhysicalMaterial:fi,MeshStandardMaterial:Mn,MeshPhongMaterial:di,MeshToonMaterial:$i,MeshNormalMaterial:er,MeshLambertMaterial:tr,MeshDepthMaterial:ai,MeshDistanceMaterial:li,MeshBasicMaterial:Wn,MeshMatcapMaterial:nr,LineDashedMaterial:ir,LineBasicMaterial:Vt,Material:Te});const it={arraySlice:function(t,e,n){return it.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*e;for(let l=0;l!==e;++l)r[o++]=t[a+l]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),n.push.apply(n,o)),s=t[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),n.push(o)),s=t[r++];while(s!==void 0)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*r;if(!(p<n||p>=i)){h.push(c.times[f]);for(let v=0;v<u;++v)d.push(c.values[f*u+v])}}h.length!==0&&(c.times=it.convertArray(h,c.times.constructor),c.values=it.convertArray(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=n.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(s<=a.times[0]){const g=u,m=h-u;v=it.arraySlice(a.values,g,m)}else if(s>=a.times[p]){const g=p*h+u,m=g+h-u;v=it.arraySlice(a.values,g,m)}else{const g=a.createInterpolant(),m=u,w=h-u;g.evaluate(s),v=it.arraySlice(g.resultBuffer,m,w)}l==="quaternion"&&new It().fromArray(v).normalize().conjugate().toArray(v);const y=c.times.length;for(let g=0;g<y;++g){const m=g*f+d;if(l==="quaternion")It.multiplyQuaternionsFlat(c.values,m,v,0,c.values,m);else{const w=f-d*2;for(let S=0;S<w;++S)c.values[m+S]-=v[S]}}}return t.blendMode=ah,t}};function Ut(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(Ut.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{let s;n:{i:if(!(t<i)){for(let o=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break t}s=e.length;break n}if(!(t>=r)){const o=e[1];t<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;t<e[o]?s=o:n=o+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let s=0;s!==i;++s)e[s]=n[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(Ut.prototype,{beforeStart_:Ut.prototype.copySampleValue_,afterEnd_:Ut.prototype.copySampleValue_});function xa(t,e,n,i){Ut.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}xa.prototype=Object.assign(Object.create(Ut.prototype),{constructor:xa,DefaultSettings_:{endingStart:Fi,endingEnd:Fi},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case Oi:r=t,o=2*e-n;break;case Js:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=t,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case Oi:s=t,a=2*n-e;break;case Js:s=1,a=n+i[1]-i[0];break;default:s=t-1,a=e}const l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-n),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-e)/(i-e),p=f*f,v=p*f,y=-h*v+2*h*p-h*f,g=(1+h)*v+(-1.5-2*h)*p+(-.5+h)*f+1,m=(-1-d)*v+(1.5+d)*p+.5*f,w=d*v-d*p;for(let S=0;S!==o;++S)r[S]=y*s[c+S]+g*s[l+S]+m*s[a+S]+w*s[u+S];return r}});function no(t,e,n,i){Ut.call(this,t,e,n,i)}no.prototype=Object.assign(Object.create(Ut.prototype),{constructor:no,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=(n-e)/(i-e),u=1-c;for(let h=0;h!==o;++h)r[h]=s[l+h]*u+s[a+h]*c;return r}});function _a(t,e,n,i){Ut.call(this,t,e,n,i)}_a.prototype=Object.assign(Object.create(Ut.prototype),{constructor:_a,interpolate_:function(t){return this.copySampleValue_(t-1)}});function Mt(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=it.convertArray(e,this.TimeBufferType),this.values=it.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(Mt,{toJSON:function(t){const e=t.constructor;let n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:it.convertArray(t.times,Array),values:it.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}});Object.assign(Mt.prototype,{constructor:Mt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:js,InterpolantFactoryMethodDiscrete:function(t){return new _a(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new no(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new xa(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case Zs:e=this.InterpolantFactoryMethodDiscrete;break;case js:e=this.InterpolantFactoryMethodLinear;break;case _o:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Zs;case this.InterpolantFactoryMethodLinear:return js;case this.InterpolantFactoryMethodSmooth:return _o}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;s!==-1&&n[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=it.arraySlice(n,r,s),this.values=it.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),t=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),t=!1;break}s=a}if(i!==void 0&&it.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),t=!1;break}}return t},optimize:function(){const t=it.arraySlice(this.times),e=it.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===_o,r=t.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const l=t[o],c=t[o+1];if(l!==c&&(o!==1||l!==l[0]))if(i)a=!0;else{const u=o*n,h=u-n,d=u+n;for(let f=0;f!==n;++f){const p=e[u+f];if(p!==e[h+f]||p!==e[d+f]){a=!0;break}}}if(a){if(o!==s){t[s]=t[o];const u=o*n,h=s*n;for(let d=0;d!==n;++d)e[h+d]=e[u+d]}++s}}if(r>0){t[s]=t[r];for(let o=r*n,a=s*n,l=0;l!==n;++l)e[a+l]=e[o+l];++s}return s!==t.length?(this.times=it.arraySlice(t,0,s),this.values=it.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this},clone:function(){const t=it.arraySlice(this.times,0),e=it.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}});function ba(t,e,n){Mt.call(this,t,e,n)}ba.prototype=Object.assign(Object.create(Mt.prototype),{constructor:ba,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Zs,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function wa(t,e,n,i){Mt.call(this,t,e,n,i)}wa.prototype=Object.assign(Object.create(Mt.prototype),{constructor:wa,ValueTypeName:"color"});function Xr(t,e,n,i){Mt.call(this,t,e,n,i)}Xr.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Xr,ValueTypeName:"number"});function Ma(t,e,n,i){Ut.call(this,t,e,n,i)}Ma.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Ma,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-e)/(i-e);let l=t*o;for(let c=l+o;l!==c;l+=4)It.slerpFlat(r,0,s,l-o,s,l,a);return r}});function io(t,e,n,i){Mt.call(this,t,e,n,i)}io.prototype=Object.assign(Object.create(Mt.prototype),{constructor:io,ValueTypeName:"quaternion",DefaultInterpolation:js,InterpolantFactoryMethodLinear:function(t){return new Ma(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function Sa(t,e,n,i){Mt.call(this,t,e,n,i)}Sa.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Sa,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Zs,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Yr(t,e,n,i){Mt.call(this,t,e,n,i)}Yr.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Yr,ValueTypeName:"vector"});function Jt(t,e=-1,n,i=ka){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ze.generateUUID(),this.duration<0&&this.resetDuration()}function Nv(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xr;case"vector":case"vector2":case"vector3":case"vector4":return Yr;case"color":return wa;case"quaternion":return io;case"bool":case"boolean":return ba;case"string":return Sa}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function zv(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Nv(t.type);if(t.times===void 0){const n=[],i=[];it.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Jt,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let s=0,o=n.length;s!==o;++s)e.push(zv(n[s]).scale(i));const r=new Jt(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,s=n.length;r!==s;++r)e.push(Mt.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const r=e.length,s=[];for(let o=0;o<r;o++){let a=[],l=[];a.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const c=it.getKeyframeOrder(a);a=it.sortedArray(a,1,c),l=it.sortedArray(l,1,c),!i&&a[0]===0&&(a.push(r),l.push(l[0])),s.push(new Xr(".morphTargetInfluences["+e[o].name+"]",a,l).scale(1/n))}return new Jt(t,-1,s)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=t.length;o<a;o++){const l=t[o],c=l.name.match(r);if(c&&c.length>1){const u=c[1];let h=i[u];h||(i[u]=h=[]),h.push(l)}}const s=[];for(const o in i)s.push(Jt.CreateFromMorphTargetSequence(o,i[o],e,n));return s},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,h,d,f,p){if(d.length!==0){const v=[],y=[];it.flattenJSON(d,v,y,f),v.length!==0&&p.push(new u(h,v,y))}},i=[],r=t.name||"default",s=t.fps||30,o=t.blendMode;let a=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const h=l[u].keys;if(!(!h||h.length===0))if(h[0].morphTargets){const d={};let f;for(f=0;f<h.length;f++)if(h[f].morphTargets)for(let p=0;p<h[f].morphTargets.length;p++)d[h[f].morphTargets[p]]=-1;for(const p in d){const v=[],y=[];for(let g=0;g!==h[f].morphTargets.length;++g){const m=h[f];v.push(m.time),y.push(m.morphTarget===p?1:0)}i.push(new Xr(".morphTargetInfluence["+p+"]",v,y))}a=d.length*(s||1)}else{const d=".bones["+e[u].name+"]";n(Yr,d+".position",h,"pos",i),n(io,d+".quaternion",h,"rot",i),n(Yr,d+".scale",h,"scl",i)}}return i.length===0?null:new Jt(r,a,i,o)}});Object.assign(Jt.prototype,{resetDuration:function(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Jt(this.name,this.duration,t,this.blendMode)},toJSON:function(){return Jt.toJSON(this)}});const rr={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Fv(t,e,n){const i=this;let r=!1,s=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(c){o++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,o),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return a?a(c):c},this.setURLModifier=function(c){return a=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){const u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(let u=0,h=l.length;u<h;u+=2){const d=l[u],f=l[u+1];if(d.global&&(d.lastIndex=0),d.test(c))return f}return null}}const Ov=new Fv;function Ke(t){this.manager=t!==void 0?t:Ov,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ke.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Zt={};function Sn(t){Ke.call(this,t)}Sn.prototype=Object.assign(Object.create(Ke.prototype),{constructor:Sn,load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=rr.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;if(Zt[t]!==void 0){Zt[t].push({onLoad:e,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=t.match(o);let l;if(a){const c=a[1],u=!!a[2];let h=a[3];h=decodeURIComponent(h),u&&(h=atob(h));try{let d;const f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":const p=new Uint8Array(h.length);for(let y=0;y<h.length;y++)p[y]=h.charCodeAt(y);f==="blob"?d=new Blob([p.buffer],{type:c}):d=p.buffer;break;case"document":d=new DOMParser().parseFromString(h,c);break;case"json":d=JSON.parse(h);break;default:d=h;break}setTimeout(function(){e&&e(d),r.manager.itemEnd(t)},0)}catch(d){setTimeout(function(){i&&i(d),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{Zt[t]=[],Zt[t].push({onLoad:e,onProgress:n,onError:i}),l=new XMLHttpRequest,l.open("GET",t,!0),l.addEventListener("load",function(c){const u=this.response,h=Zt[t];if(delete Zt[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),rr.add(t,u);for(let d=0,f=h.length;d<f;d++){const p=h[d];p.onLoad&&p.onLoad(u)}r.manager.itemEnd(t)}else{for(let d=0,f=h.length;d<f;d++){const p=h[d];p.onError&&p.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),l.addEventListener("progress",function(c){const u=Zt[t];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onProgress&&f.onProgress(c)}},!1),l.addEventListener("error",function(c){const u=Zt[t];delete Zt[t];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),l.addEventListener("abort",function(c){const u=Zt[t];delete Zt[t];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(t),l},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}});function oc(t){Ke.call(this,t)}oc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:oc,load:function(t,e,n,i){const r=this,s=new Sn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Jt.parse(t[n]);e.push(i)}return e}});function ac(t){Ke.call(this,t)}ac.prototype=Object.assign(Object.create(Ke.prototype),{constructor:ac,load:function(t,e,n,i){const r=this,s=[],o=new Gr,a=new Sn(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(u){a.load(t[u],function(h){const d=r.parse(h,!0);s[u]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},l+=1,l===6&&(d.mipmapCount===1&&(o.minFilter=bt),o.image=s,o.format=d.format,o.needsUpdate=!0,e&&e(o))},n,i)}if(Array.isArray(t))for(let u=0,h=t.length;u<h;++u)c(u);else a.load(t,function(u){const h=r.parse(u,!0);if(h.isCubemap){const d=h.mipmaps.length/h.mipmapCount;for(let f=0;f<d;f++){s[f]={mipmaps:[]};for(let p=0;p<h.mipmapCount;p++)s[f].mipmaps.push(h.mipmaps[f*h.mipmapCount+p]),s[f].format=h.format,s[f].width=h.width,s[f].height=h.height}o.image=s}else o.image.width=h.width,o.image.height=h.height,o.mipmaps=h.mipmaps;h.mipmapCount===1&&(o.minFilter=bt),o.format=h.format,o.needsUpdate=!0,e&&e(o)},n,i);return o}});function ro(t){Ke.call(this,t)}ro.prototype=Object.assign(Object.create(Ke.prototype),{constructor:ro,load:function(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=rr.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),rr.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(c){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(t),r.manager.itemEnd(t)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}});function Ta(t){Ke.call(this,t)}Ta.prototype=Object.assign(Object.create(Ke.prototype),{constructor:Ta,load:function(t,e,n,i){const r=new qn,s=new ro(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(l){s.load(t[l],function(c){r.images[l]=c,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let l=0;l<t.length;++l)a(l);return r}});function lc(t){Ke.call(this,t)}lc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:lc,load:function(t,e,n,i){const r=this,s=new Ji,o=new Sn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(t,function(a){const l=r.parse(a);!l||(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:Rt,s.wrapT=l.wrapT!==void 0?l.wrapT:Rt,s.magFilter=l.magFilter!==void 0?l.magFilter:bt,s.minFilter=l.minFilter!==void 0?l.minFilter:bt,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=mo),l.mipmapCount===1&&(s.minFilter=bt),s.needsUpdate=!0,e&&e(s,l))},n,i),s}});function so(t){Ke.call(this,t)}so.prototype=Object.assign(Object.create(Ke.prototype),{constructor:so,load:function(t,e,n,i){const r=new $e,s=new ro(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(o){r.image=o;const a=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;r.format=a?si:Kt,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}});function we(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(we.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;e?s=e:s=t*n[r-1];let o=0,a=r-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=n[i]-s,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const c=n[i],h=n[i+1]-c,d=(s-c)/h;return(i+d)/(r-1)},getTangent:function(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=e||(s.isVector2?new q:new E);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new E,i=[],r=[],s=[],o=new E,a=new Fe;for(let d=0;d<=t;d++){const f=d/t;i[d]=this.getTangentAt(f,new E),i[d].normalize()}r[0]=new E,s[0]=new E;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),s[d]=s[d-1].clone(),o.crossVectors(i[d-1],i[d]),o.length()>Number.EPSILON){o.normalize();const f=Math.acos(ze.clamp(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(a.makeRotationAxis(o,f))}s[d].crossVectors(i[d],r[d])}if(e===!0){let d=Math.acos(ze.clamp(r[0].dot(r[t]),-1,1));d/=t,i[0].dot(o.crossVectors(r[0],r[t]))>0&&(d=-d);for(let f=1;f<=t;f++)r[f].applyMatrix4(a.makeRotationAxis(i[f],d*f)),s[f].crossVectors(i[f],r[f])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function Wt(t,e,n,i,r,s,o,a){we.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Wt.prototype=Object.create(we.prototype);Wt.prototype.constructor=Wt;Wt.prototype.isEllipseCurve=!0;Wt.prototype.getPoint=function(t,e){const n=e||new q,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=a-this.aX,d=l-this.aY;a=h*c-d*u+this.aX,l=h*u+d*c+this.aY}return n.set(a,l)};Wt.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};Wt.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};Wt.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function Zr(t,e,n,i,r,s){Wt.call(this,t,e,n,n,i,r,s),this.type="ArcCurve"}Zr.prototype=Object.create(Wt.prototype);Zr.prototype.constructor=Zr;Zr.prototype.isArcCurve=!0;function Ua(){let t=0,e=0,n=0,i=0;function r(s,o,a,l){t=s,e=a,n=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let d=(o-s)/c-(a-s)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,r(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return t+e*s+n*o+i*a}}}const zs=new E,qo=new Ua,Xo=new Ua,Yo=new Ua;function Nt(t=[],e=!1,n="centripetal",i=.5){we.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}Nt.prototype=Object.create(we.prototype);Nt.prototype.constructor=Nt;Nt.prototype.isCatmullRomCurve3=!0;Nt.prototype.getPoint=function(t,e=new E){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let l,c;this.closed||o>0?l=i[(o-1)%r]:(zs.subVectors(i[0],i[1]).add(i[0]),l=zs);const u=i[o%r],h=i[(o+1)%r];if(this.closed||o+2<r?c=i[(o+2)%r]:(zs.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=zs),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let f=Math.pow(l.distanceToSquared(u),d),p=Math.pow(u.distanceToSquared(h),d),v=Math.pow(h.distanceToSquared(c),d);p<1e-4&&(p=1),f<1e-4&&(f=p),v<1e-4&&(v=p),qo.initNonuniformCatmullRom(l.x,u.x,h.x,c.x,f,p,v),Xo.initNonuniformCatmullRom(l.y,u.y,h.y,c.y,f,p,v),Yo.initNonuniformCatmullRom(l.z,u.z,h.z,c.z,f,p,v)}else this.curveType==="catmullrom"&&(qo.initCatmullRom(l.x,u.x,h.x,c.x,this.tension),Xo.initCatmullRom(l.y,u.y,h.y,c.y,this.tension),Yo.initCatmullRom(l.z,u.z,h.z,c.z,this.tension));return n.set(qo.calc(a),Xo.calc(a),Yo.calc(a)),n};Nt.prototype.copy=function(t){we.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};Nt.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};Nt.prototype.fromJSON=function(t){we.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new E().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function cc(t,e,n,i,r){const s=(i-e)*.5,o=(r-n)*.5,a=t*t,l=t*a;return(2*n-2*i+s+o)*l+(-3*n+3*i-2*s-o)*a+s*t+n}function Bv(t,e){const n=1-t;return n*n*e}function kv(t,e){return 2*(1-t)*t*e}function Uv(t,e){return t*t*e}function Ir(t,e,n,i){return Bv(t,e)+kv(t,n)+Uv(t,i)}function Hv(t,e){const n=1-t;return n*n*n*e}function Gv(t,e){const n=1-t;return 3*n*n*t*e}function Vv(t,e){return 3*(1-t)*t*t*e}function Wv(t,e){return t*t*t*e}function Dr(t,e,n,i,r){return Hv(t,e)+Gv(t,n)+Vv(t,i)+Wv(t,r)}function on(t=new q,e=new q,n=new q,i=new q){we.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}on.prototype=Object.create(we.prototype);on.prototype.constructor=on;on.prototype.isCubicBezierCurve=!0;on.prototype.getPoint=function(t,e=new q){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Dr(t,i.x,r.x,s.x,o.x),Dr(t,i.y,r.y,s.y,o.y)),n};on.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};on.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};on.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function Tn(t=new E,e=new E,n=new E,i=new E){we.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}Tn.prototype=Object.create(we.prototype);Tn.prototype.constructor=Tn;Tn.prototype.isCubicBezierCurve3=!0;Tn.prototype.getPoint=function(t,e=new E){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Dr(t,i.x,r.x,s.x,o.x),Dr(t,i.y,r.y,s.y,o.y),Dr(t,i.z,r.z,s.z,o.z)),n};Tn.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};Tn.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};Tn.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function zt(t=new q,e=new q){we.call(this),this.type="LineCurve",this.v1=t,this.v2=e}zt.prototype=Object.create(we.prototype);zt.prototype.constructor=zt;zt.prototype.isLineCurve=!0;zt.prototype.getPoint=function(t,e=new q){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};zt.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};zt.prototype.getTangent=function(t,e){const n=e||new q;return n.copy(this.v2).sub(this.v1).normalize(),n};zt.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};zt.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};zt.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function an(t=new E,e=new E){we.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}an.prototype=Object.create(we.prototype);an.prototype.constructor=an;an.prototype.isLineCurve3=!0;an.prototype.getPoint=function(t,e=new E){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};an.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};an.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};an.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};an.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function ln(t=new q,e=new q,n=new q){we.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}ln.prototype=Object.create(we.prototype);ln.prototype.constructor=ln;ln.prototype.isQuadraticBezierCurve=!0;ln.prototype.getPoint=function(t,e=new q){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Ir(t,i.x,r.x,s.x),Ir(t,i.y,r.y,s.y)),n};ln.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};ln.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};ln.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function En(t=new E,e=new E,n=new E){we.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}En.prototype=Object.create(we.prototype);En.prototype.constructor=En;En.prototype.isQuadraticBezierCurve3=!0;En.prototype.getPoint=function(t,e=new E){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Ir(t,i.x,r.x,s.x),Ir(t,i.y,r.y,s.y),Ir(t,i.z,r.z,s.z)),n};En.prototype.copy=function(t){return we.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};En.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};En.prototype.fromJSON=function(t){return we.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function cn(t=[]){we.call(this),this.type="SplineCurve",this.points=t}cn.prototype=Object.create(we.prototype);cn.prototype.constructor=cn;cn.prototype.isSplineCurve=!0;cn.prototype.getPoint=function(t,e=new q){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],u=i[s>i.length-3?i.length-1:s+2];return n.set(cc(o,a.x,l.x,c.x,u.x),cc(o,a.y,l.y,c.y,u.y)),n};cn.prototype.copy=function(t){we.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this};cn.prototype.toJSON=function(){const t=we.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t};cn.prototype.fromJSON=function(t){we.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new q().fromArray(i))}return this};var jv=Object.freeze({__proto__:null,ArcCurve:Zr,CatmullRomCurve3:Nt,CubicBezierCurve:on,CubicBezierCurve3:Tn,EllipseCurve:Wt,LineCurve:zt,LineCurve3:an,QuadraticBezierCurve:ln,QuadraticBezierCurve3:En,SplineCurve:cn});function Un(){we.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}Un.prototype=Object.assign(Object.create(we.prototype),{constructor:Un,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new zt(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const r=n[i]-e,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?t*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,a=s.getPoints(o);for(let l=0;l<a.length;l++){const c=a[l];n&&n.equals(c)||(e.push(c),n=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){we.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=we.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){we.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new jv[i.type]().fromJSON(i))}return this}});function rn(t){Un.call(this),this.type="Path",this.currentPoint=new q,t&&this.setFromPoints(t)}rn.prototype=Object.assign(Object.create(Un.prototype),{constructor:rn,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new zt(this.currentPoint.clone(),new q(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const r=new ln(this.currentPoint.clone(),new q(t,e),new q(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,s){const o=new on(this.currentPoint.clone(),new q(t,e),new q(n,i),new q(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(t){const e=[this.currentPoint.clone()].concat(t),n=new cn(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,n,i,r,s),this},absarc:function(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this},ellipse:function(t,e,n,i,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,o,a),this},absellipse:function(t,e,n,i,r,s,o,a){const l=new Wt(t,e,n,i,r,s,o,a);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(t){return Un.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Un.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Un.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function Wi(t){rn.call(this,t),this.uuid=ze.generateUUID(),this.type="Shape",this.holes=[]}Wi.prototype=Object.assign(Object.create(rn.prototype),{constructor:Wi,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){rn.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const t=rn.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){rn.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new rn().fromJSON(i))}return this}});function nt(t,e=1){Me.call(this),this.type="Light",this.color=new _e(t),this.intensity=e}nt.prototype=Object.assign(Object.create(Me.prototype),{constructor:nt,isLight:!0,copy:function(t){return Me.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=Me.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function hc(t,e,n){nt.call(this,t,n),this.type="HemisphereLight",this.position.copy(Me.DefaultUp),this.updateMatrix(),this.groundColor=new _e(e)}hc.prototype=Object.assign(Object.create(nt.prototype),{constructor:hc,isHemisphereLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function An(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new Fe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vo,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new Je(0,0,1,1)]}Object.assign(An.prototype,{_projScreenMatrix:new Fe,_lightPositionWorld:new E,_lookTarget:new E,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(t.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Ea(){An.call(this,new pt(50,1,.5,500)),this.focus=1}Ea.prototype=Object.assign(Object.create(An.prototype),{constructor:Ea,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=ze.RAD2DEG*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),An.prototype.updateMatrices.call(this,t)}});function uc(t,e,n,i,r,s){nt.call(this,t,e),this.type="SpotLight",this.position.copy(Me.DefaultUp),this.updateMatrix(),this.target=new Me,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new Ea}uc.prototype=Object.assign(Object.create(nt.prototype),{constructor:uc,isSpotLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Aa(){An.call(this,new pt(90,1,.5,500)),this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new Je(2,1,1,1),new Je(0,1,1,1),new Je(3,1,1,1),new Je(1,1,1,1),new Je(3,0,1,1),new Je(1,0,1,1)],this._cubeDirections=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],this._cubeUps=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)]}Aa.prototype=Object.assign(Object.create(An.prototype),{constructor:Aa,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function fc(t,e,n,i){nt.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Aa}fc.prototype=Object.assign(Object.create(nt.prototype),{constructor:fc,isPointLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function La(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){jn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}La.prototype=Object.assign(Object.create(jn.prototype),{constructor:La,isOrthographicCamera:!0,copy:function(t,e){return jn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,o=i+e,a=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,o-=c*this.view.offsetY,a=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=Me.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function Ca(){An.call(this,new La(-5,5,5,-5,.5,500))}Ca.prototype=Object.assign(Object.create(An.prototype),{constructor:Ca,isDirectionalLightShadow:!0,updateMatrices:function(t){An.prototype.updateMatrices.call(this,t)}});function oo(t,e){nt.call(this,t,e),this.type="DirectionalLight",this.position.copy(Me.DefaultUp),this.updateMatrix(),this.target=new Me,this.shadow=new Ca}oo.prototype=Object.assign(Object.create(nt.prototype),{constructor:oo,isDirectionalLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Pa(t,e){nt.call(this,t,e),this.type="AmbientLight"}Pa.prototype=Object.assign(Object.create(nt.prototype),{constructor:Pa,isAmbientLight:!0});function dc(t,e,n,i){nt.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}dc.prototype=Object.assign(Object.create(nt.prototype),{constructor:dc,isRectAreaLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=nt.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class qv{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new E)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.282095),n.addScaledVector(o[1],.488603*r),n.addScaledVector(o[2],.488603*s),n.addScaledVector(o[3],.488603*i),n.addScaledVector(o[4],1.092548*(i*r)),n.addScaledVector(o[5],1.092548*(r*s)),n.addScaledVector(o[6],.315392*(3*s*s-1)),n.addScaledVector(o[7],1.092548*(i*s)),n.addScaledVector(o[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.886227),n.addScaledVector(o[1],2*.511664*r),n.addScaledVector(o[2],2*.511664*s),n.addScaledVector(o[3],2*.511664*i),n.addScaledVector(o[4],2*.429043*i*r),n.addScaledVector(o[5],2*.429043*r*s),n.addScaledVector(o[6],.743125*s*s-.247708),n.addScaledVector(o[7],2*.429043*i*s),n.addScaledVector(o[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}function sn(t,e){nt.call(this,void 0,e),this.type="LightProbe",this.sh=t!==void 0?t:new qv}sn.prototype=Object.assign(Object.create(nt.prototype),{constructor:sn,isLightProbe:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=nt.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}});function pc(t){Ke.call(this,t),this.textures={}}pc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:pc,load:function(t,e,n,i){const r=this,s=new Sn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new Dv[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=new _e().setHex(t.sheen)),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.morphNormals!==void 0&&(i.morphNormals=t.morphNormals),t.dithering!==void 0&&(i.dithering=t.dithering),t.vertexTangents!==void 0&&(i.vertexTangents=t.vertexTangents),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const s=t.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new _e().setHex(s.value);break;case"v2":i.uniforms[r].value=new q().fromArray(s.value);break;case"v3":i.uniforms[r].value=new E().fromArray(s.value);break;case"v4":i.uniforms[r].value=new Je().fromArray(s.value);break;case"m3":i.uniforms[r].value=new At().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Fe().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new q().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new q().fromArray(t.clearcoatNormalScale)),t.transmission!==void 0&&(i.transmission=t.transmission),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const Xv={decodeText:function(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function ao(){Ye.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}ao.prototype=Object.assign(Object.create(Ye.prototype),{constructor:ao,isInstancedBufferGeometry:!0,copy:function(t){return Ye.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t=Ye.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}});function Ra(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ae.call(this,t,e,n),this.meshPerAttribute=i||1}Ra.prototype=Object.assign(Object.create(Ae.prototype),{constructor:Ra,isInstancedBufferAttribute:!0,copy:function(t){return Ae.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Ae.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});function mc(t){Ke.call(this,t)}mc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:mc,load:function(t,e,n,i){const r=this,s=new Sn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e={},n={};function i(d,f){if(e[f]!==void 0)return e[f];const v=d.interleavedBuffers[f],y=r(d,v.buffer),g=ps(v.type,y),m=new Ot(g,v.stride);return m.uuid=v.uuid,e[f]=m,m}function r(d,f){if(n[f]!==void 0)return n[f];const v=d.arrayBuffers[f],y=new Uint32Array(v).buffer;return n[f]=y,y}const s=t.isInstancedBufferGeometry?new ao:new Ye,o=t.data.index;if(o!==void 0){const d=ps(o.type,o.array);s.setIndex(new Ae(d,1))}const a=t.data.attributes;for(const d in a){const f=a[d];let p;if(f.isInterleavedBufferAttribute){const v=i(t.data,f.data);p=new ci(v,f.itemSize,f.offset,f.normalized)}else{const v=ps(f.type,f.array),y=f.isInstancedBufferAttribute?Ra:Ae;p=new y(v,f.itemSize,f.normalized)}f.name!==void 0&&(p.name=f.name),s.setAttribute(d,p)}const l=t.data.morphAttributes;if(l)for(const d in l){const f=l[d],p=[];for(let v=0,y=f.length;v<y;v++){const g=f[v];let m;if(g.isInterleavedBufferAttribute){const w=i(t.data,g.data);m=new ci(w,g.itemSize,g.offset,g.normalized)}else{const w=ps(g.type,g.array);m=new Ae(w,g.itemSize,g.normalized)}g.name!==void 0&&(m.name=g.name),p.push(m)}s.morphAttributes[d]=p}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(u!==void 0)for(let d=0,f=u.length;d!==f;++d){const p=u[d];s.addGroup(p.start,p.count,p.materialIndex)}const h=t.data.boundingSphere;if(h!==void 0){const d=new E;h.center!==void 0&&d.fromArray(h.center),s.boundingSphere=new Zn(d,h.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}});function gc(t){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ke.call(this,t),this.options={premultiplyAlpha:"none"}}gc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:gc,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=rr.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(t,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){rr.add(t,a),e&&e(a),r.manager.itemEnd(t)}).catch(function(a){i&&i(a),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});function Rh(){this.type="ShapePath",this.color=new _e,this.subPaths=[],this.currentPath=null}Object.assign(Rh.prototype,{moveTo:function(t,e){return this.currentPath=new rn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(g){const m=[];for(let w=0,S=g.length;w<S;w++){const M=g[w],x=new Wi;x.curves=M.curves,m.push(x)}return m}function i(g,m){const w=m.length;let S=!1;for(let M=w-1,x=0;x<w;M=x++){let A=m[M],H=m[x],O=H.x-A.x,J=H.y-A.y;if(Math.abs(J)>Number.EPSILON){if(J<0&&(A=m[x],O=-O,H=m[M],J=-J),g.y<A.y||g.y>H.y)continue;if(g.y===A.y){if(g.x===A.x)return!0}else{const P=J*(g.x-A.x)-O*(g.y-A.y);if(P===0)return!0;if(P<0)continue;S=!S}}else{if(g.y!==A.y)continue;if(H.x<=g.x&&g.x<=A.x||A.x<=g.x&&g.x<=H.x)return!0}}return S}const r=Gn.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return n(s);let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Wi,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=t?!u:u;const h=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,m=s.length;g<m;g++)a=s[g],v=a.getPoints(),o=r(v),o=t?!o:o,o?(!u&&d[p]&&p++,d[p]={s:new Wi,p:v},d[p].s.curves=a.curves,u&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return n(s);if(d.length>1){let g=!1;const m=[];for(let w=0,S=d.length;w<S;w++)h[w]=[];for(let w=0,S=d.length;w<S;w++){const M=f[w];for(let x=0;x<M.length;x++){const A=M[x];let H=!0;for(let O=0;O<d.length;O++)i(A.p,d[O].p)&&(w!==O&&m.push({froms:w,tos:O,hole:x}),H?(H=!1,h[O].push(A)):g=!0);H&&h[w].push(A)}}m.length>0&&(g||(f=h))}let y;for(let g=0,m=d.length;g<m;g++){l=d[g].s,c.push(l),y=f[g];for(let w=0,S=y.length;w<S;w++)l.holes.push(y[w].h)}return c}});function Ih(t){this.type="Font",this.data=t}Object.assign(Ih.prototype,{isFont:!0,generateShapes:function(t,e=100){const n=[],i=Yv(t,e,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function Yv(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,l=0;for(let c=0;c<i.length;c++){const u=i[c];if(u===`
`)a=0,l-=s;else{const h=Zv(u,r,a,l,n);a+=h.offsetX,o.push(h.path)}}return o}function Zv(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}const o=new Rh;let a,l,c,u,h,d,f,p;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let y=0,g=v.length;y<g;)switch(v[y++]){case"m":a=v[y++]*e+n,l=v[y++]*e+i,o.moveTo(a,l);break;case"l":a=v[y++]*e+n,l=v[y++]*e+i,o.lineTo(a,l);break;case"q":c=v[y++]*e+n,u=v[y++]*e+i,h=v[y++]*e+n,d=v[y++]*e+i,o.quadraticCurveTo(h,d,c,u);break;case"b":c=v[y++]*e+n,u=v[y++]*e+i,h=v[y++]*e+n,d=v[y++]*e+i,f=v[y++]*e+n,p=v[y++]*e+i,o.bezierCurveTo(h,d,f,p,c,u);break}}return{offsetX:s.ha*e,path:o}}function vc(t){Ke.call(this,t)}vc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:vc,load:function(t,e,n,i){const r=this,s=new Sn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const l=r.parse(a);e&&e(l)},n,i)},parse:function(t){return new Ih(t)}});let Fs;const Jv={getContext:function(){return Fs===void 0&&(Fs=new(window.AudioContext||window.webkitAudioContext)),Fs},setContext:function(t){Fs=t}};function yc(t){Ke.call(this,t)}yc.prototype=Object.assign(Object.create(Ke.prototype),{constructor:yc,load:function(t,e,n,i){const r=this,s=new Sn(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{const a=o.slice(0);Jv.getContext().decodeAudioData(a,function(c){e(c)})}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)}});function xc(t,e,n){sn.call(this,void 0,n);const i=new _e().set(t),r=new _e().set(e),s=new E(i.r,i.g,i.b),o=new E(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}xc.prototype=Object.assign(Object.create(sn.prototype),{constructor:xc,isHemisphereLightProbe:!0,copy:function(t){return sn.prototype.copy.call(this,t),this},toJSON:function(t){return sn.prototype.toJSON.call(this,t)}});function _c(t,e){sn.call(this,void 0,e);const n=new _e().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}_c.prototype=Object.assign(Object.create(sn.prototype),{constructor:_c,isAmbientLightProbe:!0,copy:function(t){return sn.prototype.copy.call(this,t),this},toJSON:function(t){return sn.prototype.toJSON.call(this,t)}});const bc=new Fe,wc=new Fe;function Kv(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new pt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new pt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(Kv.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const i=t.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,o=e.near*Math.tan(ze.DEG2RAD*e.fov*.5)/e.zoom;let a,l;wc.elements[12]=-r,bc.elements[12]=r,a=-o*e.aspect+s,l=o*e.aspect+s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(i),a=-o*e.aspect-s,l=o*e.aspect-s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(wc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(bc)}});function Dh(t,e,n){this.binding=t,this.valueSize=n;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Dh.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=e}else{s+=e;const o=e/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=e*this._origIndex;this._mixBufferRegion(n,i,a,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let a=e,l=e+e;a!==l;++a)if(n[a]!==n[a+e]){o.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,s=i;r!==s;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)t[e+s]=t[n+s]},_slerp:function(t,e,n,i){It.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,r){const s=this._workIndex*r;It.multiplyQuaternionsFlat(t,s,t,e,t,n),It.slerpFlat(t,e,t,e,t,s,i)},_lerp:function(t,e,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=e+o;t[a]=t[a]*s+t[n+o]*i}},_lerpAdditive:function(t,e,n,i,r){for(let s=0;s!==r;++s){const o=e+s;t[o]=t[o]+t[n+s]*i}}});const Ha="\\[\\]\\.:\\/",Qv=new RegExp("["+Ha+"]","g"),Ga="[^"+Ha+"]",$v="[^"+Ha.replace("\\.","")+"]",e0=/((?:WC+[\/:])*)/.source.replace("WC",Ga),t0=/(WCOD+)?/.source.replace("WCOD",$v),n0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ga),i0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ga),r0=new RegExp("^"+e0+t0+n0+i0+"$"),s0=["material","materials","bones"];function Nh(t,e,n){const i=n||Et.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(Nh.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function Et(t,e,n){this.path=e,this.parsedPath=n||Et.parseTrackName(e),this.node=Et.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Et,{Composite:Nh,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Et.Composite(t,e,n):new Et(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Qv,"")},parseTrackName:function(t){const e=r0.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);s0.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===e||o.uuid===e)return o;const a=n(o.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}});Object.assign(Et.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Et.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let c=0;c<t.length;c++)if(t[c].name===l){l=c;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(l!==void 0){if(t[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[l]}}const s=t[i];if(s===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(Et.prototype,{_getValue_unbound:Et.prototype.getValue,_setValue_unbound:Et.prototype.setValue});function o0(){this.uuid=ze.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(o0.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid;let f=e[d];if(f===void 0){f=a++,e[d]=f,t.push(h);for(let p=0,v=s;p!==v;++p)r[p].push(new Et(h,n[p],i[p]))}else if(f<l){o=t[f];const p=--l,v=t[p];e[v.uuid]=f,t[f]=v,e[d]=p,t[p]=h;for(let y=0,g=s;y!==g;++y){const m=r[y],w=m[p];let S=m[f];m[f]=w,S===void 0&&(S=new Et(h,n[y],i[y])),m[p]=S}}else t[f]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],l=a.uuid,c=e[l];if(c!==void 0&&c>=r){const u=r++,h=t[u];e[h.uuid]=c,t[c]=h,e[l]=u,t[u]=a;for(let d=0,f=i;d!==f;++d){const p=n[d],v=p[u],y=p[c];p[c]=v,p[u]=y}}}this.nCachedObjects_=r},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=e[c];if(u!==void 0)if(delete e[c],u<r){const h=--r,d=t[h],f=--s,p=t[f];e[d.uuid]=u,t[u]=d,e[p.uuid]=h,t[h]=p,t.pop();for(let v=0,y=i;v!==y;++v){const g=n[v],m=g[h],w=g[f];g[u]=m,g[h]=w,g.pop()}}else{const h=--s,d=t[h];h>0&&(e[d.uuid]=u),t[u]=d,t.pop();for(let f=0,p=i;f!==p;++f){const v=n[f];v[u]=v[h],v.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,u=new Array(l);i=r.length,n[t]=i,s.push(t),o.push(e),r.push(u);for(let h=c,d=a.length;h!==d;++h){const f=a[h];u[h]=new Et(f,t,e)}return u},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],l=t[o];e[l]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class a0{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,o=s.length,a=new Array(o),l={endingStart:Fi,endingEnd:Fi};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Cf,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,n),this.warp(a,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=n/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const o=this._updateTime(n),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case ah:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case ka:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===Pf;if(e===0)return s===-1?r:o&&(s&1)===1?n-r:r;if(i===Lf){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=n||r<0){const a=Math.floor(r/n);r-=n*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=Oi,r.endingEnd=Oi):(e?r.endingStart=this.zeroSlopeAtStart?Oi:Fi:r.endingStart=Js,n?r.endingEnd=this.zeroSlopeAtEnd?Oi:Fi:r.endingEnd=Js)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=n,a[1]=s+e,l[1]=i,this}}function Mc(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Mc.prototype=Object.assign(Object.create(Ln.prototype),{constructor:Mc,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,o=t._interpolants,a=n.uuid,l=this._bindingsByRootAndName;let c=l[a];c===void 0&&(c={},l[a]=c);for(let u=0;u!==r;++u){const h=i[u],d=h.name;let f=c[d];if(f!==void 0)s[u]=f;else{if(f=s[u],f!==void 0){f._cacheIndex===null&&(++f.referenceCount,this._addInactiveBinding(f,a,d));continue}const p=e&&e._propertyBindings[u].binding.parsedPath;f=new Dh(Et.create(n,d,p),h.ValueTypeName,h.getValueSize()),++f.referenceCount,this._addInactiveBinding(f,a,d),s[u]=f}o[u].resultBuffer=f.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const o=s.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),t._byClipCacheIndex=null;const u=o.actionByRoot,h=(t._localRoot||this._root).uuid;delete u[h],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],l=t._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new no(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,r=i.uuid;let s=typeof t=="string"?Jt.findByName(i,t):t;const o=s!==null?s.uuid:t,a=this._actionsByClip[o];let l=null;if(n===void 0&&(s!==null?n=s.blendMode:n=ka),a!==void 0){const u=a.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;l=a.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new a0(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?Jt.findByName(n,t):t,s=r?r.uuid:t,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let l=0;l!==n;++l)e[l]._update(i,t,r,s);const o=this._bindings,a=this._nActiveBindings;for(let l=0;l!==a;++l)o[l].apply(s);return this},setTime:function(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const l=s[o];this._deactivateAction(l);const c=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,e[c]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Sc(t,e,n){Ot.call(this,t,e),this.meshPerAttribute=n||1}Sc.prototype=Object.assign(Object.create(Ot.prototype),{constructor:Sc,isInstancedInterleavedBuffer:!0,copy:function(t){return Ot.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Ot.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Ot.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function zh(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(zh.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(zh.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}});function Va(t,e,n,i){this.ray=new es(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new ch,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Tc(t,e){return t.distance-e.distance}function Ia(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0){const r=t.children;for(let s=0,o=r.length;s<o;s++)Ia(r[s],e,n,!0)}}Object.assign(Va.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e,n){const i=n||[];return Ia(t,this,i,e),i.sort(Tc),i},intersectObjects:function(t,e,n){const i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=t.length;r<s;r++)Ia(t[r],this,i,e);return i.sort(Tc),i}});const Ec=new q;class l0{constructor(e,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new q(1/0,1/0),this.max=n!==void 0?n:new q(-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Ec.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new q),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new q),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new q),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new q),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ec.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function lo(t){Me.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}lo.prototype=Object.create(Me.prototype);lo.prototype.constructor=lo;lo.prototype.isImmediateRenderObject=!0;const Fn=new E,Os=new Fe,Zo=new Fe;class c0 extends Qs{constructor(e){const n=Fh(e),i=new Ye,r=[],s=[],o=new _e(0,0,1),a=new _e(0,1,0);for(let c=0;c<n.length;c++){const u=n[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new We(r,3)),i.setAttribute("color",new We(s,3));const l=new Vt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");Zo.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<n.length;s++){const a=n[s];a.parent&&a.parent.isBone&&(Os.multiplyMatrices(Zo,a.matrixWorld),Fn.setFromMatrixPosition(Os),r.setXYZ(o,Fn.x,Fn.y,Fn.z),Os.multiplyMatrices(Zo,a.parent.matrixWorld),Fn.setFromMatrixPosition(Os),r.setXYZ(o+1,Fn.x,Fn.y,Fn.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Fh(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Fh(t.children[n]));return e}class h0 extends Qs{constructor(e=10,n=10,i=4473924,r=8947848){i=new _e(i),r=new _e(r);const s=n/2,o=e/n,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=n;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===s?i:r;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const u=new Ye;u.setAttribute("position",new We(l,3)),u.setAttribute("color",new We(c,3));const h=new Vt({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}const u0=new Float32Array(1);new Int32Array(u0.buffer);we.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(we.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(Un.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new Bt;for(let n=0,i=t.length;n<i;n++){const r=t[n];e.vertices.push(new E(r.x,r.y,r.z||0))}return e}});Object.assign(rn.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});Object.create(Nt.prototype);Object.create(Nt.prototype);function Oh(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Nt.call(this,t),this.type="catmullrom"}Oh.prototype=Object.create(Nt.prototype);Object.assign(Oh.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});h0.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};c0.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Ke.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Xv.extractUrlBase(t)}});Ke.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(l0.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(Yn.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(Zn.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});vo.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};Object.assign(ze,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ze.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ze.ceilPowerOfTwo(t)}});Object.assign(At.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}});Object.assign(Fe.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new E().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}});bn.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};Object.assign(It.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(es.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(_t.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}});Object.assign(_t,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),_t.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),_t.getNormal(t,e,n,i)}});Object.assign(Wi.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ev(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Pv(this,t)}});Object.assign(q.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(E.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Je.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Bt.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.assign(Me.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(Me.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(ut.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(ut.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Rf},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(ha.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(da.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});ua.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(we.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});pt.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(nt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(Ae.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Or},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Or)}}});Object.assign(Ae.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Or:go),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ye.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ae(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(Ye.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(ao.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}});Object.defineProperties(Va.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}});Object.defineProperties(Ot.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Or},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}});Object.assign(Ot.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Or:go),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ch.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(Sh.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Te.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new _e}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===ih}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}});Object.defineProperties(di.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(fi.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}});Object.defineProperties(wt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(ns.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(ns.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?lh:$r}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(wh.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Qt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});Zi.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};Zi.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};cr.crossOrigin=void 0;cr.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new so;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};cr.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Ta;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};cr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};cr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:su}}));class f0{constructor(){this.audioContext=null,this.masterGain=null,this.reverb=null,this.delay=null,this.isInitialized=!1}async init(){if(!this.isInitialized)try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.audioContext.state==="suspended"&&await this.audioContext.resume(),console.log("Audio context initialized:",this.audioContext.state),this.masterGain=this.audioContext.createGain(),this.masterGain.gain.setValueAtTime(.12,this.audioContext.currentTime),this.masterGain.connect(this.audioContext.destination),await this.createReverb(),await this.createDelay(),this.isInitialized=!0,console.log("Audio system initialized successfully");const e=document.querySelector(".audio-notice");e&&(e.style.opacity="0",e.style.transform="translateY(-20px) translateX(-50%)",setTimeout(()=>e==null?void 0:e.remove(),300)),this.playWelcomeSound()}catch(e){console.warn("Audio initialization failed:",e)}}async createReverb(){const n=this.audioContext.sampleRate*3.2;this.reverb=this.audioContext.createConvolver();const i=this.audioContext.createBuffer(2,n,this.audioContext.sampleRate);for(let r=0;r<2;r++){const s=i.getChannelData(r);for(let o=0;o<n;o++){const a=Math.pow(1-o/n,1.1),l=o<n*.05?Math.random()*.6:0;s[o]=(Math.random()*2-1)*a*.3+l}}this.reverb.buffer=i,this.reverb.connect(this.masterGain)}async createDelay(){this.delay=this.audioContext.createDelay(1.5),this.delay.delayTime.setValueAtTime(.33,this.audioContext.currentTime);const e=this.audioContext.createDelay(1.5);e.delayTime.setValueAtTime(.52,this.audioContext.currentTime);const n=this.audioContext.createGain();n.gain.setValueAtTime(.28,this.audioContext.currentTime);const i=this.audioContext.createGain();i.gain.setValueAtTime(.22,this.audioContext.currentTime),this.delay.connect(n),n.connect(e),e.connect(this.delay),this.delay.connect(i),e.connect(i),i.connect(this.reverb)}playWelcomeSound(){if(!this.isInitialized)return;const e=this.audioContext.currentTime,n=this.audioContext.createOscillator();n.type="sine",n.frequency.setValueAtTime(880,e);const i=this.audioContext.createGain();i.gain.setValueAtTime(.025,e),i.gain.exponentialRampToValueAtTime(.001,e+1),n.connect(i),i.connect(this.reverb),n.start(),n.stop(e+1)}playDragSound(){if(!this.isInitialized)return;const e=this.audioContext.currentTime,n=this.audioContext.createOscillator(),i=this.audioContext.createOscillator(),r=this.audioContext.createOscillator();n.type="sine",i.type="triangle",r.type="sawtooth";const s=70+Math.random()*30;n.frequency.setValueAtTime(s,e),i.frequency.setValueAtTime(s*1.618,e),r.frequency.setValueAtTime(s*.5,e),n.frequency.exponentialRampToValueAtTime(s*1.3,e+.4),i.frequency.exponentialRampToValueAtTime(s*2.1,e+.4);const o=this.audioContext.createBiquadFilter();o.type="bandpass",o.frequency.setValueAtTime(180,e),o.frequency.exponentialRampToValueAtTime(350,e+.4),o.Q.setValueAtTime(6,e);const a=this.audioContext.createBiquadFilter();a.type="highpass",a.frequency.setValueAtTime(100,e),a.Q.setValueAtTime(1.5,e);const l=this.audioContext.createGain();l.gain.setValueAtTime(.18,e),l.gain.exponentialRampToValueAtTime(.01,e+.5),n.connect(o),i.connect(o),r.connect(a),o.connect(a),a.connect(l),l.connect(this.delay),l.connect(this.reverb),n.start(),i.start(),r.start(),n.stop(e+.5),i.stop(e+.5),r.stop(e+.5)}playClickSound(){if(!this.isInitialized)return;const e=this.audioContext.currentTime,n=this.audioContext.createOscillator(),i=this.audioContext.createOscillator(),r=this.audioContext.createOscillator();n.type="sine",i.type="sine",r.type="triangle";const s=400+Math.random()*300,o=s*2.718,a=s*.707;n.frequency.setValueAtTime(s,e),i.frequency.setValueAtTime(o,e),r.frequency.setValueAtTime(a,e);const l=this.audioContext.createGain();l.gain.setValueAtTime(80,e),l.gain.exponentialRampToValueAtTime(10,e+.2);const c=this.audioContext.createGain();c.gain.setValueAtTime(30,e),c.gain.linearRampToValueAtTime(5,e+.4),i.connect(l),r.connect(c),l.connect(n.frequency),c.connect(n.frequency);const u=this.audioContext.createBiquadFilter();u.type="bandpass",u.frequency.setValueAtTime(s,e),u.Q.setValueAtTime(8,e);const h=this.audioContext.createBiquadFilter();h.type="highpass",h.frequency.setValueAtTime(200,e),h.Q.setValueAtTime(2,e);const d=this.audioContext.createGain();d.gain.setValueAtTime(.135,e),d.gain.exponentialRampToValueAtTime(.001,e+2.5),n.connect(u),u.connect(h),h.connect(d),d.connect(this.delay),d.connect(this.reverb),n.start(),i.start(),r.start(),n.stop(e+2.5),i.stop(e+2.5),r.stop(e+2.5)}playHoverSound(){if(!this.isInitialized)return;const e=this.audioContext.currentTime,n=this.audioContext.createOscillator();n.type="sine";const i=1e3+Math.random()*1e3;n.frequency.setValueAtTime(i,e),n.frequency.exponentialRampToValueAtTime(i*1.5,e+.15),n.frequency.exponentialRampToValueAtTime(i*.8,e+.8);const r=this.audioContext.createOscillator();r.type="sine",r.frequency.setValueAtTime(7,e);const s=this.audioContext.createGain();s.gain.setValueAtTime(.4,e);const o=this.audioContext.createGain();o.gain.setValueAtTime(.012,e),o.gain.exponentialRampToValueAtTime(.001,e+1.8),r.connect(s),s.connect(o.gain),n.connect(o),o.connect(this.reverb),n.start(),r.start(),n.stop(e+1.8),r.stop(e+1.8)}playMorphSound(e){if(!this.isInitialized)return;const n=this.audioContext.currentTime,i=this.audioContext.createOscillator(),r=this.audioContext.createOscillator(),s=this.audioContext.createOscillator();i.type="sine",r.type="triangle",s.type="sawtooth";const o=230;i.frequency.setValueAtTime(o,n),r.frequency.setValueAtTime(o*1.26,n),s.frequency.setValueAtTime(o*1.5,n);const a=this.audioContext.createBiquadFilter();a.type="bandpass",a.frequency.setValueAtTime(200+e*800,n),a.Q.setValueAtTime(4+e*8,n);const l=this.audioContext.createGain(),c=Math.sin(e*Math.PI)*.02;l.gain.setValueAtTime(c,n),l.gain.linearRampToValueAtTime(.23,n+1.5),i.connect(a),r.connect(a),s.connect(a),a.connect(l),l.connect(this.delay),l.connect(this.reverb),i.start(),r.start(),s.start(),i.stop(n+1.5),r.stop(n+1.5),s.stop(n+1.5)}}const sr=new f0,ii=new so,Nr=[ii.load(`${Qn}/my-photo.jpg`),ii.load(`${Qn}/my-photo2.png`),ii.load(`${Qn}/photo3.jpg`),ii.load(`${Qn}/photo4.jpg`),ii.load(`${Qn}/photo5.jpg`),ii.load(`${Qn}/photo6.jpg`),ii.load(`${Qn}/photo8.jpg`)];let Vn;const ur=new Sh;let Bh=.2,ji=!1,qs={x:0,y:0},tn={x:0,y:0},Gi={x:0,y:0};const Ac=.008,Lc=.05;let kh=0,zr=!1;const d0={uniforms:{tDiffuse1:{value:Nr[0]},tDiffuse2:{value:Nr[1]},morphFactor:{value:Bh},time:{value:0}},vertexShader:`
        // Classic Perlin 3D Noise by Stefan Gustavson
        vec4 permute(vec4 x) { return mod(((x*34.0)+1.0)*x, 289.0); }
        vec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }
        vec3 fade(vec3 t) { return t*t*t*(t*(t*6.0-15.0)+10.0); }

        float cnoise(vec3 P) {
            vec3 Pi0 = floor(P);
            vec3 Pi1 = Pi0 + vec3(1.0);
            Pi0 = mod(Pi0, 289.0);
            Pi1 = mod(Pi1, 289.0);
            vec3 Pf0 = fract(P);
            vec3 Pf1 = Pf0 - vec3(1.0);
            vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
            vec4 iy = vec4(Pi0.yy, Pi1.yy);
            vec4 iz0 = Pi0.zzzz;
            vec4 iz1 = Pi1.zzzz;

            vec4 ixy = permute(permute(ix) + iy);
            vec4 ixy0 = permute(ixy + iz0);
            vec4 ixy1 = permute(ixy + iz1);

            vec4 gx0 = ixy0 / 7.0;
            vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;
            gx0 = fract(gx0);
            vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
            vec4 sz0 = step(gz0, vec4(0.0));
            gx0 -= sz0 * (step(0.0, gx0) - 0.5);
            gy0 -= sz0 * (step(0.0, gy0) - 0.5);

            vec4 gx1 = ixy1 / 7.0;
            vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;
            gx1 = fract(gx1);
            vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
            vec4 sz1 = step(gz1, vec4(0.0));
            gx1 -= sz1 * (step(0.0, gx1) - 0.5);
            gy1 -= sz1 * (step(0.0, gy1) - 0.5);

            vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);
            vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);
            vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);
            vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);
            vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);
            vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);
            vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);
            vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);

            vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
            g000 *= norm0.x;
            g010 *= norm0.y;
            g100 *= norm0.z;
            g110 *= norm0.w;
            vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
            g001 *= norm1.x;
            g011 *= norm1.y;
            g101 *= norm1.z;
            g111 *= norm1.w;

            float n000 = dot(g000, Pf0);
            float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
            float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
            float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
            float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
            float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
            float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
            float n111 = dot(g111, Pf1);

            vec3 fade_xyz = fade(Pf0);
            vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
            vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
            float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
            return 2.2 * n_xyz;
        }

        uniform float time;
        varying vec2 vUv;

        void main() {
            vUv = uv;
            vec3 pos = position;
            float noiseValue = cnoise(vec3(pos.x + time, pos.y, pos.z));
            pos = pos * (1.0 + noiseValue);
            gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
        }
    `,fragmentShader:`
        uniform sampler2D tDiffuse1;
        uniform sampler2D tDiffuse2;
        uniform float morphFactor;
        varying vec2 vUv;

        void main() {
            vec2 offset = vec2(0.3, 0.2);
            vec2 shiftedUv = fract(vUv + offset); 
            vec4 color1 = texture2D(tDiffuse1, shiftedUv);
            vec4 color2 = texture2D(tDiffuse2, shiftedUv);
            gl_FragColor = mix(color1, color2, morphFactor);
        }
    `},ri=new ut(new Ph(1,200,200),new wt(d0));ri.scale.set(1.3,1.3,1.3);ri.position.set(0,0,0);ur.add(ri);const p0=new Pa(4210752);ur.add(p0);const Uh=new oo(16777215,.8);Uh.position.set(1,1,1);const Hh=new oo(16777215,.2);Hh.position.set(-1,0,1);ur.add(Hh);ur.add(Uh);let Da=5,Gh=.2,or=new pt(75,window.innerWidth/window.innerHeight,Gh,Da);or.position.z=2.2;const wn=new kn;ur.add(wn);let Jo=[];const co=new Va,qi=new q;let On=null,Wa=[];const m0=(t,e)=>{for(;wn.children.length>0;)wn.remove(wn.children[0]);Jo=[...t.map((n,i)=>({...n,type:"music",index:i,id:`music-${i}`})),...e.map((n,i)=>({...n,type:"programming",index:i,id:`programming-${i}`}))],Jo.forEach((n,i)=>{const r=Math.PI*(3-Math.sqrt(5)),s=1-i/(Jo.length-1)*2,o=r*i,a=g0(n,{phi:Math.acos(s),theta:o});wn.add(a)}),Wa=wn.children.map(n=>n.children.find(i=>i instanceof ut))},g0=(t,e)=>{const n=new kn,i=5,r=new Ye,s=new Float32Array(i*3),o=new Float32Array(i*3),a=new Float32Array(i);for(let d=0;d<i;d++){const f=Math.random()*Math.PI*2,p=Math.random()*Math.PI,v=.005+Math.random()*.01;s[d*3]=v*Math.sin(p)*Math.cos(f),s[d*3+1]=v*Math.sin(p)*Math.sin(f),s[d*3+2]=v*Math.cos(p),o[d*3]=1,o[d*3+1]=0+Math.random()*.2,o[d*3+2]=.5+Math.random()*.3,a[d]=1+Math.random()*1.2}r.setAttribute("position",new Ae(s,3)),r.setAttribute("color",new Ae(o,3)),r.setAttribute("size",new Ae(a,1));const l=new wt({uniforms:{time:{value:0},destructionFactor:{value:0},hoverFactor:{value:0}},vertexShader:`
            attribute float size;
            attribute vec3 color;
            varying vec3 vColor;
            uniform float time;
            uniform float destructionFactor;
            uniform float hoverFactor;
            
            void main() {
                vColor = color;
                
                vec3 pos = position;
                
                pos += normalize(position) * hoverFactor * 0.1;
                
                if (destructionFactor > 0.0) {
                    float explosionForce = destructionFactor * 2.0;
                    pos += normalize(position) * explosionForce;
                    pos += vec3(
                        sin(time * 10.0 + position.x * 20.0) * destructionFactor * 0.05,
                        cos(time * 8.0 + position.y * 15.0) * destructionFactor * 0.05,
                        sin(time * 12.0 + position.z * 18.0) * destructionFactor * 0.05
                    );
                }
                
                vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);
                gl_PointSize = size * (200.0 / -mvPosition.z) * (1.0 - destructionFactor * 0.5);
                gl_Position = projectionMatrix * mvPosition;
            }
        `,fragmentShader:`
            varying vec3 vColor;
            uniform float destructionFactor;
            
            void main() {
                float distance = length(gl_PointCoord - vec2(0.5));
                if (distance > 0.5) discard;
                
                float alpha = 1.0 - distance * 2.0;
                alpha *= (1.0 - destructionFactor * 0.7);
                
                gl_FragColor = vec4(vColor, alpha);
            }
        `,transparent:!0,depthTest:!1,blending:Ko}),c=new ma(r,l);n.add(c);const u=new ut(new Ph(.05,8,8),new Wn({visible:!1}));n.add(u);const h=1.6;return n.position.x=h*Math.sin(e.phi)*Math.cos(e.theta),n.position.y=h*Math.sin(e.phi)*Math.sin(e.theta),n.position.z=h*Math.cos(e.phi),n.userData={...t,originalPosition:n.position.clone(),particleMaterial:l,destructionFactor:0,hoverFactor:0,isHovered:!1,isClicked:!1,movementOffset:Math.random()*2*Math.PI},n};let Bs=0,ks=!1,Vh=91e-6,Wh=Vh;const Cc=2e3;let Pc=0,ho=0,Rc=0;const v0=()=>{ho=window.pageYOffset||document.documentElement.scrollTop;const t=1+ho/1e3*2;Wh=Vh*Math.min(t,5)};window.addEventListener("scroll",v0);const jh=async()=>{requestAnimationFrame(jh);const t=performance.now();ri.material.uniforms.time.value=t*1e-5;const e=ri.material.uniforms;!ks&&t-Pc>Cc&&(ks=!0,e.tDiffuse1.value=Nr[Bs],Bs=(Bs+1)%Nr.length,e.tDiffuse2.value=Nr[Bs],e.morphFactor.value=.6,Pc=t,t-Rc>Cc&&(sr.playMorphSound(e.morphFactor.value),Rc=t)),ks&&(e.morphFactor.value+=Wh,e.morphFactor.value>=1&&(e.morphFactor.value=1,ks=!1)),ji||(tn.x+=(Gi.x-tn.x)*Lc,tn.y+=(Gi.y-tn.y)*Lc);const n=t*19e-5,i=t*19e-5;ri.rotation.x=tn.x+n,ri.rotation.y=tn.y+i,wn.rotation.x=tn.x+n,wn.rotation.y=tn.y+i,Da=ho/60+2,Gh=ho/5929+.01,Bh=Da-2,wn.children.forEach(r=>{const s=r.userData,o=s.particleMaterial,a=t*5e-4+s.movementOffset,l=.05*Math.sin(a),c=s.originalPosition.clone().multiplyScalar(1+l);r.position.copy(c),o&&o.uniforms&&(o.uniforms.time.value=t*1e-5,s.isHovered&&s.hoverFactor<1?s.hoverFactor+=.1:!s.isHovered&&s.hoverFactor>0&&(s.hoverFactor-=.1),o.uniforms.hoverFactor.value=s.hoverFactor,s.isClicked&&s.destructionFactor<3&&(s.destructionFactor+=.1),o.uniforms.destructionFactor.value=s.destructionFactor)}),Vn&&Vn.render(ur,or)},Ic=async()=>{Vn&&(Vn.setPixelRatio(window.devicePixelRatio),Vn.setSize(window.innerWidth,window.innerHeight),or.aspect=window.innerWidth/window.innerHeight,or.updateProjectionMatrix())},qh=t=>{!t||(console.log("Mouse down detected at:",t.clientX,t.clientY),sr.isInitialized||sr.init(),ji=!0,zr=!1,kh=performance.now(),qs={x:t.clientX,y:t.clientY},document.body.style.cursor="grabbing",t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation())},Xh=t=>{if(!!t)if(qi.x=t.clientX/window.innerWidth*2-1,qi.y=-(t.clientY/window.innerHeight)*2+1,ji){const e={x:t.clientX-qs.x,y:t.clientY-qs.y};(Math.abs(e.x)>1||Math.abs(e.y)>1)&&(zr=!0,console.log("Dragging with delta:",e.x,e.y),Math.random()<.58&&sr.playDragSound(),Gi.y+=e.x*Ac,Gi.x-=e.y*Ac,tn.y=Gi.y,tn.x=Gi.x,qs={x:t.clientX,y:t.clientY}),t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation()}else{co.setFromCamera(qi,or);const e=co.intersectObjects(Wa);if(e.length>0){let i=e[0].object.parent;On!==i&&!i.userData.isClicked&&(On&&(On.userData.isHovered=!1),On=i,On.userData.isHovered=!0,Math.random()<.03&&sr.playHoverSound())}else On&&(On.userData.isHovered=!1,On=null);document.body.style.cursor=e.length>0?"pointer":"grab"}},Yh=t=>{console.log("Mouse up detected, was dragging:",ji,"moved while dragging:",zr);const e=performance.now()-kh,n=ji&&(e>100||zr);ji=!1,zr=!1,document.body.style.cursor="grab",n||y0(t)},y0=t=>{if(!t)return;const e=Vn.domElement.getBoundingClientRect();qi.x=(t.clientX-e.left)/e.width*2-1,qi.y=-((t.clientY-e.top)/e.height)*2+1,co.setFromCamera(qi,or);const n=co.intersectObjects(Wa);if(n.length>0){let r=n[0].object.parent;const s=r.userData;sr.playClickSound(),console.log("Project clicked:",s.id),r.userData.isClicked||(r.userData.isClicked=!0,r.userData.isHovered=!1);const o=document.getElementById(s.id);o?(console.log("Scrolling to project:",s.id),o.scrollIntoView({behavior:"smooth",block:"center"}),o.style.transform="scale(1.02)",o.style.transition="transform 0.5s ease",setTimeout(()=>{o.style.transform="scale(1)"},1e3)):console.warn("Project element not found:",s.id)}},x0=t=>{if(!t||!t.touches)return;const e=t.touches[0];qh({clientX:e.clientX,clientY:e.clientY,preventDefault:()=>t.preventDefault(),stopPropagation:()=>t.stopPropagation()})},_0=t=>{if(!t||!t.touches)return;const e=t.touches[0];Xh({clientX:e.clientX,clientY:e.clientY,preventDefault:()=>t.preventDefault(),stopPropagation:()=>t.stopPropagation()})},b0=t=>{Yh({preventDefault:()=>t&&t.preventDefault?t.preventDefault():null,stopPropagation:()=>t&&t.stopPropagation?t.stopPropagation():null})},w0=async t=>{Vn=new ns({canvas:t,antialias:!0}),Vn.setClearColor("#000000"),t.style.cursor="grab",window.addEventListener("resize",Ic),t.addEventListener("mousedown",qh,{passive:!1}),document.addEventListener("mousemove",Xh,{passive:!1}),document.addEventListener("mouseup",Yh,{passive:!1}),t.addEventListener("touchstart",x0,{passive:!1}),t.addEventListener("touchmove",_0,{passive:!1}),t.addEventListener("touchend",b0,{passive:!1}),t.addEventListener("mouseenter",()=>{console.log("Mouse entered canvas - events are working!")}),console.log("Scene initialized with drag controls"),await Ic(),await jh()};function Zh(t,{delay:e=0,duration:n=400,easing:i=Jh}={}){const r=+getComputedStyle(t).opacity;return{delay:e,duration:n,easing:i,css:s=>`opacity: ${s*r}`}}function M0(t){let e,n,i,r=t[0].name+"",s,o,a,l,c=t[0].title+"",u,h,d,f,p,v,y,g=t[0].bio+"",m;return{c(){e=ne("div"),n=ne("div"),i=ne("h2"),s=me(r),o=ke(),a=ne("h2"),l=me("\xA0"),u=me(c),h=me(" and "),d=ne("mark"),f=me("guitarist."),p=ke(),v=ne("h2"),y=me("\xA0"),m=me(g),this.h()},l(w){e=ie(w,"DIV",{class:!0});var S=$(e);n=ie(S,"DIV",{class:!0});var M=$(n);i=ie(M,"H2",{class:!0});var x=$(i);s=ge(x,r),x.forEach(U),o=Ue(M),a=ie(M,"H2",{class:!0});var A=$(a);l=ge(A,"\xA0"),u=ge(A,c),h=ge(A," and "),d=ie(A,"MARK",{id:!0,style:!0,class:!0});var H=$(d);f=ge(H,"guitarist."),H.forEach(U),A.forEach(U),p=Ue(M),v=ie(M,"H2",{class:!0});var O=$(v);y=ge(O,"\xA0"),m=ge(O,g),O.forEach(U),M.forEach(U),S.forEach(U),this.h()},h(){k(i,"class","text-6xl font-black tracking-widest ml-20 adaptive-text svelte-e1v3kp"),re(i,"text-white",t[1]==="text-white"),re(i,"text-gray-900",t[1]==="text-gray-900"),k(d,"id","revelation"),xt(d,"background","none"),xt(d,"color","#FF0080"),k(d,"class","font-black svelte-e1v3kp"),k(a,"class","text-2xl font-thin tracking-widest mt-6 ml-20 adaptive-text svelte-e1v3kp"),re(a,"text-white",t[1]==="text-white"),re(a,"text-gray-900",t[1]==="text-gray-900"),k(v,"class","text-2xl font-thin tracking-widest mt-6 ml-20 adaptive-text svelte-e1v3kp"),re(v,"text-white",t[1]==="text-white"),re(v,"text-gray-900",t[1]==="text-gray-900"),k(n,"class","group z-10"),k(e,"class","hero-section h-[75vh] flex flex-col justify-center relative svelte-e1v3kp")},m(w,S){je(w,e,S),D(e,n),D(n,i),D(i,s),D(n,o),D(n,a),D(a,l),D(a,u),D(a,h),D(a,d),D(d,f),D(n,p),D(n,v),D(v,y),D(v,m)},p(w,[S]){S&1&&r!==(r=w[0].name+"")&&Tt(s,r),S&2&&re(i,"text-white",w[1]==="text-white"),S&2&&re(i,"text-gray-900",w[1]==="text-gray-900"),S&1&&c!==(c=w[0].title+"")&&Tt(u,c),S&2&&re(a,"text-white",w[1]==="text-white"),S&2&&re(a,"text-gray-900",w[1]==="text-gray-900"),S&1&&g!==(g=w[0].bio+"")&&Tt(m,g),S&2&&re(v,"text-white",w[1]==="text-white"),S&2&&re(v,"text-gray-900",w[1]==="text-gray-900")},i:kt,o:kt,d(w){w&&U(e)}}}function S0(t,e,n){let{personalData:i}=e,{adaptiveTextClass:r}=e,{adaptiveSubTextClass:s}=e;return t.$$set=o=>{"personalData"in o&&n(0,i=o.personalData),"adaptiveTextClass"in o&&n(1,r=o.adaptiveTextClass),"adaptiveSubTextClass"in o&&n(2,s=o.adaptiveSubTextClass)},[i,r,s]}class T0 extends Jr{constructor(e){super(),Kr(this,e,S0,M0,Qr,{personalData:0,adaptiveTextClass:1,adaptiveSubTextClass:2})}}function E0(t){let e,n,i,r,s,o,a,l,c,u,h,d;return{c(){e=ne("div"),n=ne("a"),i=gi("svg"),r=gi("path"),s=ke(),o=ne("a"),a=gi("svg"),l=gi("path"),c=ke(),u=ne("a"),h=gi("svg"),d=gi("path"),this.h()},l(f){e=ie(f,"DIV",{class:!0});var p=$(e);n=ie(p,"A",{href:!0,target:!0,rel:!0,class:!0,title:!0});var v=$(n);i=vi(v,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,class:!0});var y=$(i);r=vi(y,"path",{d:!0}),$(r).forEach(U),y.forEach(U),v.forEach(U),s=Ue(p),o=ie(p,"A",{href:!0,target:!0,rel:!0,class:!0,title:!0});var g=$(o);a=vi(g,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,class:!0});var m=$(a);l=vi(m,"path",{d:!0}),$(l).forEach(U),m.forEach(U),g.forEach(U),c=Ue(p),u=ie(p,"A",{href:!0,target:!0,rel:!0,class:!0,title:!0});var w=$(u);h=vi(w,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,class:!0});var S=$(h);d=vi(S,"path",{d:!0}),$(d).forEach(U),S.forEach(U),w.forEach(U),p.forEach(U),this.h()},h(){k(r,"d","M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"),k(i,"width","24"),k(i,"height","24"),k(i,"viewBox","0 0 24 24"),k(i,"fill","currentColor"),k(i,"class","svelte-1qoq37v"),k(n,"href","https://www.youtube.com/@pawo161"),k(n,"target","_blank"),k(n,"rel","noopener noreferrer"),k(n,"class","social-bubble youtube svelte-1qoq37v"),k(n,"title","YouTube"),k(l,"d","M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"),k(a,"width","24"),k(a,"height","24"),k(a,"viewBox","0 0 24 24"),k(a,"fill","currentColor"),k(a,"class","svelte-1qoq37v"),k(o,"href","https://www.instagram.com/pawel_knorps/"),k(o,"target","_blank"),k(o,"rel","noopener noreferrer"),k(o,"class","social-bubble instagram svelte-1qoq37v"),k(o,"title","Instagram"),k(d,"d","M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"),k(h,"width","24"),k(h,"height","24"),k(h,"viewBox","0 0 24 24"),k(h,"fill","currentColor"),k(h,"class","svelte-1qoq37v"),k(u,"href","https://www.facebook.com/pawo161/"),k(u,"target","_blank"),k(u,"rel","noopener noreferrer"),k(u,"class","social-bubble facebook svelte-1qoq37v"),k(u,"title","Facebook"),k(e,"class","social-bubbles fixed top-8 right-8 z-20 flex flex-col gap-4 svelte-1qoq37v")},m(f,p){je(f,e,p),D(e,n),D(n,i),D(i,r),D(e,s),D(e,o),D(o,a),D(a,l),D(e,c),D(e,u),D(u,h),D(h,d)},p:kt,i:kt,o:kt,d(f){f&&U(e)}}}class A0 extends Jr{constructor(e){super(),Kr(this,e,null,E0,Qr,{})}}function Dc(t,e,n){const i=t.slice();return i[4]=e[n],i[6]=n,i}function Nc(t,e,n){const i=t.slice();return i[7]=e[n],i}function zc(t,e,n){const i=t.slice();return i[7]=e[n],i}function Fc(t,e,n){const i=t.slice();return i[4]=e[n],i[6]=n,i}function Oc(t,e,n){const i=t.slice();return i[13]=e[n],i}function Bc(t,e,n){const i=t.slice();return i[13]=e[n],i}function kc(t){let e,n,i,r,s,o,a=t[0],l=[];for(let c=0;c<a.length;c+=1)l[c]=Wc(Fc(t,a,c));return{c(){e=ne("div"),n=ne("h3"),i=ne("mark"),r=me("//"),s=me(" MUSIC"),o=ke();for(let c=0;c<l.length;c+=1)l[c].c();this.h()},l(c){e=ie(c,"DIV",{class:!0});var u=$(e);n=ie(u,"H3",{class:!0});var h=$(n);i=ie(h,"MARK",{style:!0,class:!0});var d=$(i);r=ge(d,"//"),d.forEach(U),s=ge(h," MUSIC"),h.forEach(U),o=Ue(u);for(let f=0;f<l.length;f+=1)l[f].l(u);u.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-3xl font-black tracking-widest mb-16 opacity-80 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(e,"class","project-group ml-24 mb-32 svelte-ud7962")},m(c,u){je(c,e,u),D(e,n),D(n,i),D(i,r),D(n,s),D(e,o);for(let h=0;h<l.length;h+=1)l[h].m(e,null)},p(c,u){if(u&4&&re(n,"text-white",c[2]==="text-white"),u&4&&re(n,"text-gray-900",c[2]==="text-gray-900"),u&13){a=c[0];let h;for(h=0;h<a.length;h+=1){const d=Fc(c,a,h);l[h]?(l[h].p(d,u),ht(l[h],1)):(l[h]=Wc(d),l[h].c(),ht(l[h],1),l[h].m(e,null))}for(;h<l.length;h+=1)l[h].d(1);l.length=a.length}},i(c){for(let u=0;u<a.length;u+=1)ht(l[u])},o:kt,d(c){c&&U(e),ar(l,c)}}}function L0(t){let e,n,i,r,s,o=t[4].title+"",a,l,c,u=t[4].description+"",h,d,f,p=t[4].features&&Uc(t);return{c(){e=ne("div"),n=ne("h2"),i=ne("mark"),r=me("."),s=me("\xA0"),a=me(o),l=ke(),c=ne("h2"),h=me(u),d=ke(),f=ne("div"),p&&p.c(),this.h()},l(v){e=ie(v,"DIV",{class:!0});var y=$(e);n=ie(y,"H2",{class:!0});var g=$(n);i=ie(g,"MARK",{style:!0,class:!0});var m=$(i);r=ge(m,"."),m.forEach(U),s=ge(g,"\xA0"),a=ge(g,o),g.forEach(U),l=Ue(y),c=ie(y,"H2",{class:!0});var w=$(c);h=ge(w,u),w.forEach(U),d=Ue(y),f=ie(y,"DIV",{class:!0});var S=$(f);p&&p.l(S),S.forEach(U),y.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-xl font-black mb-4 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(c,"class","text-md font-base mb-6 leading-relaxed adaptive-subtext svelte-ud7962"),re(c,"text-gray-300",t[3]==="text-gray-300"),re(c,"text-gray-200",t[3]==="text-gray-200"),re(c,"text-gray-700",t[3]==="text-gray-700"),k(f,"class","flex flex-wrap gap-3"),k(e,"class","h-auto px-0 py-0 tracking-widest")},m(v,y){je(v,e,y),D(e,n),D(n,i),D(i,r),D(n,s),D(n,a),D(e,l),D(e,c),D(c,h),D(e,d),D(e,f),p&&p.m(f,null)},p(v,y){y&1&&o!==(o=v[4].title+"")&&Tt(a,o),y&4&&re(n,"text-white",v[2]==="text-white"),y&4&&re(n,"text-gray-900",v[2]==="text-gray-900"),y&1&&u!==(u=v[4].description+"")&&Tt(h,u),y&8&&re(c,"text-gray-300",v[3]==="text-gray-300"),y&8&&re(c,"text-gray-200",v[3]==="text-gray-200"),y&8&&re(c,"text-gray-700",v[3]==="text-gray-700"),v[4].features?p?p.p(v,y):(p=Uc(v),p.c(),p.m(f,null)):p&&(p.d(1),p=null)},d(v){v&&U(e),p&&p.d()}}}function C0(t){let e,n,i,r,s,o=t[4].title+"",a,l,c,u=t[4].description+"",h,d,f,p,v=t[4].features&&Gc(t);return{c(){e=ne("a"),n=ne("h2"),i=ne("mark"),r=me("."),s=me("\xA0"),a=me(o),l=ke(),c=ne("h2"),h=me(u),d=ke(),f=ne("div"),v&&v.c(),this.h()},l(y){e=ie(y,"A",{href:!0,rel:!0,target:!0,class:!0});var g=$(e);n=ie(g,"H2",{class:!0});var m=$(n);i=ie(m,"MARK",{style:!0,class:!0});var w=$(i);r=ge(w,"."),w.forEach(U),s=ge(m,"\xA0"),a=ge(m,o),m.forEach(U),l=Ue(g),c=ie(g,"H2",{class:!0});var S=$(c);h=ge(S,u),S.forEach(U),d=Ue(g),f=ie(g,"DIV",{class:!0});var M=$(f);v&&v.l(M),M.forEach(U),g.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-xl font-black mb-4 hover:text-[#FF0080] transition-colors duration-300 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(c,"class","text-md font-base mb-6 leading-relaxed adaptive-subtext svelte-ud7962"),re(c,"text-gray-300",t[3]==="text-gray-300"),re(c,"text-gray-200",t[3]==="text-gray-200"),re(c,"text-gray-700",t[3]==="text-gray-700"),k(f,"class","flex flex-wrap gap-3"),k(e,"href",p=t[4].links.youtube||t[4].links.bandcamp||t[4].links.soundcloud||t[4].links.facebook),k(e,"rel","noopener noreferrer"),k(e,"target","_blank"),k(e,"class","block h-auto px-0 py-0 tracking-widest transition-all duration-300 transform hover:scale-[1.02] cursor-pointer")},m(y,g){je(y,e,g),D(e,n),D(n,i),D(i,r),D(n,s),D(n,a),D(e,l),D(e,c),D(c,h),D(e,d),D(e,f),v&&v.m(f,null)},p(y,g){g&1&&o!==(o=y[4].title+"")&&Tt(a,o),g&4&&re(n,"text-white",y[2]==="text-white"),g&4&&re(n,"text-gray-900",y[2]==="text-gray-900"),g&1&&u!==(u=y[4].description+"")&&Tt(h,u),g&8&&re(c,"text-gray-300",y[3]==="text-gray-300"),g&8&&re(c,"text-gray-200",y[3]==="text-gray-200"),g&8&&re(c,"text-gray-700",y[3]==="text-gray-700"),y[4].features?v?v.p(y,g):(v=Gc(y),v.c(),v.m(f,null)):v&&(v.d(1),v=null),g&1&&p!==(p=y[4].links.youtube||y[4].links.bandcamp||y[4].links.soundcloud||y[4].links.facebook)&&k(e,"href",p)},d(y){y&&U(e),v&&v.d()}}}function Uc(t){let e,n=t[4].features,i=[];for(let r=0;r<n.length;r+=1)i[r]=Hc(Oc(t,n,r));return{c(){for(let r=0;r<i.length;r+=1)i[r].c();e=Ht()},l(r){for(let s=0;s<i.length;s+=1)i[s].l(r);e=Ht()},m(r,s){for(let o=0;o<i.length;o+=1)i[o].m(r,s);je(r,e,s)},p(r,s){if(s&1){n=r[4].features;let o;for(o=0;o<n.length;o+=1){const a=Oc(r,n,o);i[o]?i[o].p(a,s):(i[o]=Hc(a),i[o].c(),i[o].m(e.parentNode,e))}for(;o<i.length;o+=1)i[o].d(1);i.length=n.length}},d(r){ar(i,r),r&&U(e)}}}function Hc(t){let e,n=t[13]+"",i;return{c(){e=ne("span"),i=me(n),this.h()},l(r){e=ie(r,"SPAN",{class:!0});var s=$(e);i=ge(s,n),s.forEach(U),this.h()},h(){k(e,"class","text-[0.65rem] text-[#FF0080] tracking-widest uppercase font-semibold border border-[#FF0080]/30 px-3 py-1 rounded-full svelte-ud7962")},m(r,s){je(r,e,s),D(e,i)},p(r,s){s&1&&n!==(n=r[13]+"")&&Tt(i,n)},d(r){r&&U(e)}}}function Gc(t){let e,n=t[4].features,i=[];for(let r=0;r<n.length;r+=1)i[r]=Vc(Bc(t,n,r));return{c(){for(let r=0;r<i.length;r+=1)i[r].c();e=Ht()},l(r){for(let s=0;s<i.length;s+=1)i[s].l(r);e=Ht()},m(r,s){for(let o=0;o<i.length;o+=1)i[o].m(r,s);je(r,e,s)},p(r,s){if(s&1){n=r[4].features;let o;for(o=0;o<n.length;o+=1){const a=Bc(r,n,o);i[o]?i[o].p(a,s):(i[o]=Vc(a),i[o].c(),i[o].m(e.parentNode,e))}for(;o<i.length;o+=1)i[o].d(1);i.length=n.length}},d(r){ar(i,r),r&&U(e)}}}function Vc(t){let e,n=t[13]+"",i;return{c(){e=ne("span"),i=me(n),this.h()},l(r){e=ie(r,"SPAN",{class:!0});var s=$(e);i=ge(s,n),s.forEach(U),this.h()},h(){k(e,"class","text-[0.65rem] text-[#FF0080] tracking-widest uppercase font-semibold border border-[#FF0080]/30 px-3 py-1 rounded-full transform hover:skew-x-3 transition-transform duration-200 svelte-ud7962")},m(r,s){je(r,e,s),D(e,i)},p(r,s){s&1&&n!==(n=r[13]+"")&&Tt(i,n)},d(r){r&&U(e)}}}function Wc(t){let e,n,i;function r(a,l){return a[4].links?C0:L0}let s=r(t),o=s(t);return{c(){e=ne("div"),o.c(),n=ke(),this.h()},l(a){e=ie(a,"DIV",{id:!0,class:!0});var l=$(e);o.l(l),n=Ue(l),l.forEach(U),this.h()},h(){k(e,"id","music-"+t[6]),k(e,"class","group my-20 translate-y-0 hover:-translate-y-8 duration-[400ms] ease-in-out mr-10 w-[20rem] md:w-[40rem] lg:w-[30rem] xl:w-[40rem] project-card svelte-ud7962")},m(a,l){je(a,e,l),o.m(e,null),D(e,n)},p(a,l){s===(s=r(a))&&o?o.p(a,l):(o.d(1),o=s(a),o&&(o.c(),o.m(e,n)))},i(a){i||Tr(()=>{i=th(e,Zh,{delay:250*t[6],duration:1e3}),i.start()})},o:kt,d(a){a&&U(e),o.d()}}}function jc(t){let e,n,i,r,s,o,a=t[1],l=[];for(let c=0;c<a.length;c+=1)l[c]=Jc(Dc(t,a,c));return{c(){e=ne("div"),n=ne("h3"),i=ne("mark"),r=me("//"),s=me(" OTHER"),o=ke();for(let c=0;c<l.length;c+=1)l[c].c();this.h()},l(c){e=ie(c,"DIV",{class:!0});var u=$(e);n=ie(u,"H3",{class:!0});var h=$(n);i=ie(h,"MARK",{style:!0,class:!0});var d=$(i);r=ge(d,"//"),d.forEach(U),s=ge(h," OTHER"),h.forEach(U),o=Ue(u);for(let f=0;f<l.length;f+=1)l[f].l(u);u.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-3xl font-black tracking-widest mb-16 opacity-80 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(e,"class","project-group ml-24 mb-32 svelte-ud7962")},m(c,u){je(c,e,u),D(e,n),D(n,i),D(i,r),D(n,s),D(e,o);for(let h=0;h<l.length;h+=1)l[h].m(e,null)},p(c,u){if(u&4&&re(n,"text-white",c[2]==="text-white"),u&4&&re(n,"text-gray-900",c[2]==="text-gray-900"),u&14){a=c[1];let h;for(h=0;h<a.length;h+=1){const d=Dc(c,a,h);l[h]?(l[h].p(d,u),ht(l[h],1)):(l[h]=Jc(d),l[h].c(),ht(l[h],1),l[h].m(e,null))}for(;h<l.length;h+=1)l[h].d(1);l.length=a.length}},i(c){for(let u=0;u<a.length;u+=1)ht(l[u])},o:kt,d(c){c&&U(e),ar(l,c)}}}function P0(t){let e,n,i,r,s,o=t[4].title+"",a,l,c,u=t[4].description+"",h,d,f,p=t[4].technologies&&qc(t);return{c(){e=ne("div"),n=ne("h2"),i=ne("mark"),r=me("."),s=me("\xA0"),a=me(o),l=ke(),c=ne("h2"),h=me(u),d=ke(),f=ne("div"),p&&p.c(),this.h()},l(v){e=ie(v,"DIV",{class:!0});var y=$(e);n=ie(y,"H2",{class:!0});var g=$(n);i=ie(g,"MARK",{style:!0,class:!0});var m=$(i);r=ge(m,"."),m.forEach(U),s=ge(g,"\xA0"),a=ge(g,o),g.forEach(U),l=Ue(y),c=ie(y,"H2",{class:!0});var w=$(c);h=ge(w,u),w.forEach(U),d=Ue(y),f=ie(y,"DIV",{class:!0});var S=$(f);p&&p.l(S),S.forEach(U),y.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-xl font-black mb-4 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(c,"class","text-md font-base mb-6 leading-relaxed adaptive-subtext svelte-ud7962"),re(c,"text-gray-300",t[3]==="text-gray-300"),re(c,"text-gray-200",t[3]==="text-gray-200"),re(c,"text-gray-700",t[3]==="text-gray-700"),k(f,"class","flex flex-wrap gap-3"),k(e,"class","h-auto px-0 py-0 tracking-widest")},m(v,y){je(v,e,y),D(e,n),D(n,i),D(i,r),D(n,s),D(n,a),D(e,l),D(e,c),D(c,h),D(e,d),D(e,f),p&&p.m(f,null)},p(v,y){y&2&&o!==(o=v[4].title+"")&&Tt(a,o),y&4&&re(n,"text-white",v[2]==="text-white"),y&4&&re(n,"text-gray-900",v[2]==="text-gray-900"),y&2&&u!==(u=v[4].description+"")&&Tt(h,u),y&8&&re(c,"text-gray-300",v[3]==="text-gray-300"),y&8&&re(c,"text-gray-200",v[3]==="text-gray-200"),y&8&&re(c,"text-gray-700",v[3]==="text-gray-700"),v[4].technologies?p?p.p(v,y):(p=qc(v),p.c(),p.m(f,null)):p&&(p.d(1),p=null)},d(v){v&&U(e),p&&p.d()}}}function R0(t){let e,n,i,r,s,o=t[4].title+"",a,l,c,u=t[4].description+"",h,d,f,p,v=t[4].technologies&&Yc(t);return{c(){e=ne("a"),n=ne("h2"),i=ne("mark"),r=me("."),s=me("\xA0"),a=me(o),l=ke(),c=ne("h2"),h=me(u),d=ke(),f=ne("div"),v&&v.c(),this.h()},l(y){e=ie(y,"A",{href:!0,rel:!0,target:!0,class:!0});var g=$(e);n=ie(g,"H2",{class:!0});var m=$(n);i=ie(m,"MARK",{style:!0,class:!0});var w=$(i);r=ge(w,"."),w.forEach(U),s=ge(m,"\xA0"),a=ge(m,o),m.forEach(U),l=Ue(g),c=ie(g,"H2",{class:!0});var S=$(c);h=ge(S,u),S.forEach(U),d=Ue(g),f=ie(g,"DIV",{class:!0});var M=$(f);v&&v.l(M),M.forEach(U),g.forEach(U),this.h()},h(){xt(i,"background","none"),k(i,"class","text-[#FF0080]"),k(n,"class","text-xl font-black mb-4 hover:text-[#FF0080] transition-colors duration-300 adaptive-text svelte-ud7962"),re(n,"text-white",t[2]==="text-white"),re(n,"text-gray-900",t[2]==="text-gray-900"),k(c,"class","text-md font-base mb-6 leading-relaxed adaptive-subtext svelte-ud7962"),re(c,"text-gray-300",t[3]==="text-gray-300"),re(c,"text-gray-200",t[3]==="text-gray-200"),re(c,"text-gray-700",t[3]==="text-gray-700"),k(f,"class","flex flex-wrap gap-3"),k(e,"href",p=t[4].github||t[4].demo),k(e,"rel","noopener noreferrer"),k(e,"target","_blank"),k(e,"class","block h-auto px-0 py-0 tracking-widest transition-all duration-300 transform hover:scale-[1.02] cursor-pointer")},m(y,g){je(y,e,g),D(e,n),D(n,i),D(i,r),D(n,s),D(n,a),D(e,l),D(e,c),D(c,h),D(e,d),D(e,f),v&&v.m(f,null)},p(y,g){g&2&&o!==(o=y[4].title+"")&&Tt(a,o),g&4&&re(n,"text-white",y[2]==="text-white"),g&4&&re(n,"text-gray-900",y[2]==="text-gray-900"),g&2&&u!==(u=y[4].description+"")&&Tt(h,u),g&8&&re(c,"text-gray-300",y[3]==="text-gray-300"),g&8&&re(c,"text-gray-200",y[3]==="text-gray-200"),g&8&&re(c,"text-gray-700",y[3]==="text-gray-700"),y[4].technologies?v?v.p(y,g):(v=Yc(y),v.c(),v.m(f,null)):v&&(v.d(1),v=null),g&2&&p!==(p=y[4].github||y[4].demo)&&k(e,"href",p)},d(y){y&&U(e),v&&v.d()}}}function qc(t){let e,n=t[4].technologies,i=[];for(let r=0;r<n.length;r+=1)i[r]=Xc(Nc(t,n,r));return{c(){for(let r=0;r<i.length;r+=1)i[r].c();e=Ht()},l(r){for(let s=0;s<i.length;s+=1)i[s].l(r);e=Ht()},m(r,s){for(let o=0;o<i.length;o+=1)i[o].m(r,s);je(r,e,s)},p(r,s){if(s&2){n=r[4].technologies;let o;for(o=0;o<n.length;o+=1){const a=Nc(r,n,o);i[o]?i[o].p(a,s):(i[o]=Xc(a),i[o].c(),i[o].m(e.parentNode,e))}for(;o<i.length;o+=1)i[o].d(1);i.length=n.length}},d(r){ar(i,r),r&&U(e)}}}function Xc(t){let e,n=t[7]+"",i;return{c(){e=ne("span"),i=me(n),this.h()},l(r){e=ie(r,"SPAN",{class:!0});var s=$(e);i=ge(s,n),s.forEach(U),this.h()},h(){k(e,"class","text-[0.65rem] text-[#FF0080] tracking-widest uppercase font-semibold border border-[#FF0080]/30 px-3 py-1 rounded-full svelte-ud7962")},m(r,s){je(r,e,s),D(e,i)},p(r,s){s&2&&n!==(n=r[7]+"")&&Tt(i,n)},d(r){r&&U(e)}}}function Yc(t){let e,n=t[4].technologies,i=[];for(let r=0;r<n.length;r+=1)i[r]=Zc(zc(t,n,r));return{c(){for(let r=0;r<i.length;r+=1)i[r].c();e=Ht()},l(r){for(let s=0;s<i.length;s+=1)i[s].l(r);e=Ht()},m(r,s){for(let o=0;o<i.length;o+=1)i[o].m(r,s);je(r,e,s)},p(r,s){if(s&2){n=r[4].technologies;let o;for(o=0;o<n.length;o+=1){const a=zc(r,n,o);i[o]?i[o].p(a,s):(i[o]=Zc(a),i[o].c(),i[o].m(e.parentNode,e))}for(;o<i.length;o+=1)i[o].d(1);i.length=n.length}},d(r){ar(i,r),r&&U(e)}}}function Zc(t){let e,n=t[7]+"",i;return{c(){e=ne("span"),i=me(n),this.h()},l(r){e=ie(r,"SPAN",{class:!0});var s=$(e);i=ge(s,n),s.forEach(U),this.h()},h(){k(e,"class","text-[0.65rem] text-[#FF0080] tracking-widest uppercase font-semibold border border-[#FF0080]/30 px-3 py-1 rounded-full transform hover:skew-x-3 transition-transform duration-200 svelte-ud7962")},m(r,s){je(r,e,s),D(e,i)},p(r,s){s&2&&n!==(n=r[7]+"")&&Tt(i,n)},d(r){r&&U(e)}}}function Jc(t){let e,n,i;function r(a,l){return a[4].github||a[4].demo?R0:P0}let s=r(t),o=s(t);return{c(){e=ne("div"),o.c(),n=ke(),this.h()},l(a){e=ie(a,"DIV",{id:!0,class:!0});var l=$(e);o.l(l),n=Ue(l),l.forEach(U),this.h()},h(){k(e,"id","programming-"+t[6]),k(e,"class","group my-20 translate-y-0 hover:-translate-y-8 duration-[400ms] ease-in-out mr-10 w-[20rem] md:w-[40rem] lg:w-[30rem] xl:w-[40rem] project-card svelte-ud7962")},m(a,l){je(a,e,l),o.m(e,null),D(e,n)},p(a,l){t=a,s===(s=r(t))&&o?o.p(t,l):(o.d(1),o=s(t),o&&(o.c(),o.m(e,n)))},i(a){i||Tr(()=>{i=th(e,Zh,{delay:250*(t[6]+t[0].length),duration:1e3}),i.start()})},o:kt,d(a){a&&U(e),o.d()}}}function I0(t){let e,n,i=t[0].length>0&&kc(t),r=t[1].length>0&&jc(t);return{c(){i&&i.c(),e=ke(),r&&r.c(),n=Ht()},l(s){i&&i.l(s),e=Ue(s),r&&r.l(s),n=Ht()},m(s,o){i&&i.m(s,o),je(s,e,o),r&&r.m(s,o),je(s,n,o)},p(s,[o]){s[0].length>0?i?(i.p(s,o),o&1&&ht(i,1)):(i=kc(s),i.c(),ht(i,1),i.m(e.parentNode,e)):i&&(i.d(1),i=null),s[1].length>0?r?(r.p(s,o),o&2&&ht(r,1)):(r=jc(s),r.c(),ht(r,1),r.m(n.parentNode,n)):r&&(r.d(1),r=null)},i(s){ht(i),ht(r)},o:kt,d(s){i&&i.d(s),s&&U(e),r&&r.d(s),s&&U(n)}}}function D0(t,e,n){let{musicProjects:i}=e,{programmingProjects:r}=e,{adaptiveTextClass:s}=e,{adaptiveSubTextClass:o}=e;return t.$$set=a=>{"musicProjects"in a&&n(0,i=a.musicProjects),"programmingProjects"in a&&n(1,r=a.programmingProjects),"adaptiveTextClass"in a&&n(2,s=a.adaptiveTextClass),"adaptiveSubTextClass"in a&&n(3,o=a.adaptiveSubTextClass)},[i,r,s,o]}class N0 extends Jr{constructor(e){super(),Kr(this,e,D0,I0,Qr,{musicProjects:0,programmingProjects:1,adaptiveTextClass:2,adaptiveSubTextClass:3})}}function z0(t){let e,n,i,r,s,o,a,l,c,u,h,d,f,p,v,y,g,m,w,S,M,x,A,H,O,J,P,N,C,I,R,z,W,Q,se,ce,ue,Le,Pe,qe,V,at,ye,Ee,Se,Ve,De,Z,X,ee,ve,he,T,b,Y,j,L,K,oe,de,te,pe,xe,Ce,fe,be,Ze,ft,pi,hn,un,fr,Jn;return{c(){e=ne("div"),n=ne("div"),i=ne("div"),r=ne("h3"),s=ne("mark"),o=me("//"),a=me(" O MNIE"),l=ke(),c=ne("div"),u=ne("p"),h=me("Pawe\u0142 Knorps jest aktywnym muzykiem na polskiej i du\u0144skiej scenie. Niedawno obroni\u0142 dyplom magisterski z gitary jazzowej na pozna\u0144skiej Akademii, a nied\u0142ugo p\xF3\u017Aniej r\xF3wnie\u017C dyplom magisterski z kompozycji jazzowej na presti\u017Cowej uczelni Danish National Academy of Music w Odense."),d=ke(),f=ne("p"),p=me("Jest g\u0142\xF3wnie muzykiem improwizuj\u0105cym \u2013 zawodowo gitarzyst\u0105, ale r\xF3wnie\u017C basist\u0105, producentem muzycznym i kompozytorem. Interesuje go szczeg\xF3lnie tworzenie muzyki, kt\xF3ra przekracza utrwalone granice. Kluczowa jest dla niego swobodna ekspresja i niczym nieskr\u0119powana kreatywno\u015B\u0107."),v=ke(),y=ne("p"),g=me("Jego nowy projekt to oryginalny jazzowy materia\u0142 grany z pozna\u0144skimi jazzmanami \u2013 Krzysztofem Dysem, Dawidem Tok\u0142owiczem, Piotrem Cienkowskim, Kajetanem Pilarskim. Dzia\u0142aj\u0105 pod nazw\u0105 "),m=ne("span"),w=me("Pawel Knorps Group"),S=me(", jest to debiutancki projekt Paw\u0142a jako lidera i kompozytora muzyki jazzowej."),M=ke(),x=ne("p"),A=me("S\u0105 jednym z sze\u015Bciu finalist\xF3w Blue Note Competition 2024, gdzie zostali wybrani spo\u015Br\xF3d prawie 50 zespo\u0142\xF3w jazzowych z Europy."),H=ke(),O=ne("p"),J=me("Pawe\u0142 jest g\u0142\u0119boko zaanga\u017Cowany w tworzenie miejskiej tkanki kulturalnej Poznania. Od 2019 roku jest jedn\u0105 z os\xF3b zarz\u0105dzaj\u0105cych i tworz\u0105cych "),P=ne("span"),N=me("Ko\u0142orking Muzyczny"),C=me(" na \u015Aw. Marcinie 75."),I=ke(),R=ne("p"),z=me("Zorganizowa\u0142 tam kilkadziesi\u0105t wydarze\u0144 \u2013 koncert\xF3w, warsztat\xF3w, spotka\u0144, pr\xF3b muzycznych. Jest to oddolna inicjatywa, kt\xF3ra wspiera spo\u0142ecze\u0144stwo w rozwoju muzycznym bez barier \u2013 bez koszt\xF3w finansowych i ze wsparciem mentorskim."),W=ke(),Q=ne("p"),se=me("Jego poboczn\u0105 pasj\u0105 jest produkcja i tworzenie muzyki elektronicznej jako "),ce=ne("span"),ue=me("enthymeme"),Le=me(". Gra\u0142 improwizowan\u0105, eksperymentaln\u0105 tkank\u0119 d\u017Awi\u0119kow\u0105 w takich klubach jak: Dom Technika, Farby, My, M\xF3zg Bydgoszcz."),Pe=ke(),qe=ne("p"),V=me("Obecnie po powrocie do Poznania w czerwcu 2024 ze studi\xF3w w Danii do\u0142\u0105czy\u0142 do pozna\u0144skich projekt\xF3w: Milomi, SNY, MUIZK NVA LAB, Domsun."),at=ke(),ye=ne("div"),Ee=ne("h3"),Se=ne("mark"),Ve=me("//"),De=me(" DOKONANIA"),Z=ke(),X=ne("div"),ee=ne("div"),ve=ne("span"),he=me("2021"),T=me(" - wygrana O K N O | Mini-konkurs na kreatywne akcje w oknie Ko\u0142orkingu muzycznego"),b=ke(),Y=ne("div"),j=ne("span"),L=me("2020-2021"),K=me(' nagroda od Teatru Muzycznego w Poznaniu w Konkursie \u201ECi\u0105g dalszy nast\u0105pi cz. II" za projekt \u201EPerformance audiowizualny nawi\u0105zuj\u0105cy do sieci neuronowej"'),oe=ke(),de=ne("div"),te=ne("span"),pe=me("2022"),xe=me(" - stypendium programu Erasmus na studia w Syddansk musikkonservatorium w Odense, gdzie p\xF3\u017Aniej zacz\u0105\u0142 pe\u0142noprawne studia magisterskie"),Ce=ke(),fe=ne("div"),be=ne("span"),Ze=me("2024"),ft=me(" \u2013 fina\u0142 Blue Note Competition 2024 z autorskim projektem kompozytorskim Pawel Knorps Group"),pi=ke(),hn=ne("div"),un=ne("span"),fr=me("2024"),Jn=me(' - otrzyma\u0142 Stypendium Tw\xF3rcze Miasta Poznania za projekt \u201EJazzowa tkanka miasta \u2013 album inspirowany d\u017Awi\u0119kami Poznania"'),this.h()},l(lt){e=ie(lt,"DIV",{class:!0});var rt=$(e);n=ie(rt,"DIV",{class:!0,style:!0});var dr=$(n);i=ie(dr,"DIV",{class:!0});var fn=$(i);r=ie(fn,"H3",{class:!0});var mi=$(r);s=ie(mi,"MARK",{style:!0,class:!0});var Ft=$(s);o=ge(Ft,"//"),Ft.forEach(U),a=ge(mi," O MNIE"),mi.forEach(U),l=Ue(fn),c=ie(fn,"DIV",{class:!0});var ct=$(c);u=ie(ct,"P",{class:!0});var is=$(u);h=ge(is,"Pawe\u0142 Knorps jest aktywnym muzykiem na polskiej i du\u0144skiej scenie. Niedawno obroni\u0142 dyplom magisterski z gitary jazzowej na pozna\u0144skiej Akademii, a nied\u0142ugo p\xF3\u017Aniej r\xF3wnie\u017C dyplom magisterski z kompozycji jazzowej na presti\u017Cowej uczelni Danish National Academy of Music w Odense."),is.forEach(U),d=Ue(ct),f=ie(ct,"P",{class:!0});var rs=$(f);p=ge(rs,"Jest g\u0142\xF3wnie muzykiem improwizuj\u0105cym \u2013 zawodowo gitarzyst\u0105, ale r\xF3wnie\u017C basist\u0105, producentem muzycznym i kompozytorem. Interesuje go szczeg\xF3lnie tworzenie muzyki, kt\xF3ra przekracza utrwalone granice. Kluczowa jest dla niego swobodna ekspresja i niczym nieskr\u0119powana kreatywno\u015B\u0107."),rs.forEach(U),v=Ue(ct),y=ie(ct,"P",{class:!0});var _=$(y);g=ge(_,"Jego nowy projekt to oryginalny jazzowy materia\u0142 grany z pozna\u0144skimi jazzmanami \u2013 Krzysztofem Dysem, Dawidem Tok\u0142owiczem, Piotrem Cienkowskim, Kajetanem Pilarskim. Dzia\u0142aj\u0105 pod nazw\u0105 "),m=ie(_,"SPAN",{class:!0});var B=$(m);w=ge(B,"Pawel Knorps Group"),B.forEach(U),S=ge(_,", jest to debiutancki projekt Paw\u0142a jako lidera i kompozytora muzyki jazzowej."),_.forEach(U),M=Ue(ct),x=ie(ct,"P",{class:!0});var F=$(x);A=ge(F,"S\u0105 jednym z sze\u015Bciu finalist\xF3w Blue Note Competition 2024, gdzie zostali wybrani spo\u015Br\xF3d prawie 50 zespo\u0142\xF3w jazzowych z Europy."),F.forEach(U),H=Ue(ct),O=ie(ct,"P",{class:!0});var G=$(O);J=ge(G,"Pawe\u0142 jest g\u0142\u0119boko zaanga\u017Cowany w tworzenie miejskiej tkanki kulturalnej Poznania. Od 2019 roku jest jedn\u0105 z os\xF3b zarz\u0105dzaj\u0105cych i tworz\u0105cych "),P=ie(G,"SPAN",{class:!0});var ae=$(P);N=ge(ae,"Ko\u0142orking Muzyczny"),ae.forEach(U),C=ge(G," na \u015Aw. Marcinie 75."),G.forEach(U),I=Ue(ct),R=ie(ct,"P",{class:!0});var Oe=$(R);z=ge(Oe,"Zorganizowa\u0142 tam kilkadziesi\u0105t wydarze\u0144 \u2013 koncert\xF3w, warsztat\xF3w, spotka\u0144, pr\xF3b muzycznych. Jest to oddolna inicjatywa, kt\xF3ra wspiera spo\u0142ecze\u0144stwo w rozwoju muzycznym bez barier \u2013 bez koszt\xF3w finansowych i ze wsparciem mentorskim."),Oe.forEach(U),W=Ue(ct),Q=ie(ct,"P",{class:!0});var Re=$(Q);se=ge(Re,"Jego poboczn\u0105 pasj\u0105 jest produkcja i tworzenie muzyki elektronicznej jako "),ce=ie(Re,"SPAN",{class:!0});var Be=$(ce);ue=ge(Be,"enthymeme"),Be.forEach(U),Le=ge(Re,". Gra\u0142 improwizowan\u0105, eksperymentaln\u0105 tkank\u0119 d\u017Awi\u0119kow\u0105 w takich klubach jak: Dom Technika, Farby, My, M\xF3zg Bydgoszcz."),Re.forEach(U),Pe=Ue(ct),qe=ie(ct,"P",{class:!0});var Ne=$(qe);V=ge(Ne,"Obecnie po powrocie do Poznania w czerwcu 2024 ze studi\xF3w w Danii do\u0142\u0105czy\u0142 do pozna\u0144skich projekt\xF3w: Milomi, SNY, MUIZK NVA LAB, Domsun."),Ne.forEach(U),ct.forEach(U),at=Ue(fn),ye=ie(fn,"DIV",{class:!0});var et=$(ye);Ee=ie(et,"H3",{class:!0});var tt=$(Ee);Se=ie(tt,"MARK",{style:!0,class:!0});var Ie=$(Se);Ve=ge(Ie,"//"),Ie.forEach(U),De=ge(tt," DOKONANIA"),tt.forEach(U),Z=Ue(et),X=ie(et,"DIV",{class:!0});var He=$(X);ee=ie(He,"DIV",{class:!0});var Lt=$(ee);ve=ie(Lt,"SPAN",{class:!0});var Xe=$(ve);he=ge(Xe,"2021"),Xe.forEach(U),T=ge(Lt," - wygrana O K N O | Mini-konkurs na kreatywne akcje w oknie Ko\u0142orkingu muzycznego"),Lt.forEach(U),b=Ue(He),Y=ie(He,"DIV",{class:!0});var jt=$(Y);j=ie(jt,"SPAN",{class:!0});var ot=$(j);L=ge(ot,"2020-2021"),ot.forEach(U),K=ge(jt,' nagroda od Teatru Muzycznego w Poznaniu w Konkursie \u201ECi\u0105g dalszy nast\u0105pi cz. II" za projekt \u201EPerformance audiowizualny nawi\u0105zuj\u0105cy do sieci neuronowej"'),jt.forEach(U),oe=Ue(He),de=ie(He,"DIV",{class:!0});var Kn=$(de);te=ie(Kn,"SPAN",{class:!0});var mt=$(te);pe=ge(mt,"2022"),mt.forEach(U),xe=ge(Kn," - stypendium programu Erasmus na studia w Syddansk musikkonservatorium w Odense, gdzie p\xF3\u017Aniej zacz\u0105\u0142 pe\u0142noprawne studia magisterskie"),Kn.forEach(U),Ce=Ue(He),fe=ie(He,"DIV",{class:!0});var dn=$(fe);be=ie(dn,"SPAN",{class:!0});var pn=$(be);Ze=ge(pn,"2024"),pn.forEach(U),ft=ge(dn," \u2013 fina\u0142 Blue Note Competition 2024 z autorskim projektem kompozytorskim Pawel Knorps Group"),dn.forEach(U),pi=Ue(He),hn=ie(He,"DIV",{class:!0});var mn=$(hn);un=ie(mn,"SPAN",{class:!0});var ja=$(un);fr=ge(ja,"2024"),ja.forEach(U),Jn=ge(mn,' - otrzyma\u0142 Stypendium Tw\xF3rcze Miasta Poznania za projekt \u201EJazzowa tkanka miasta \u2013 album inspirowany d\u017Awi\u0119kami Poznania"'),mn.forEach(U),He.forEach(U),et.forEach(U),fn.forEach(U),dr.forEach(U),rt.forEach(U),this.h()},h(){xt(s,"background","none"),k(s,"class","text-[#FF0080]"),k(r,"class","text-3xl xl:text-4xl font-black tracking-widest mb-8 opacity-80 adaptive-text svelte-18y2vm8"),re(r,"text-white",t[0]==="text-white"),re(r,"text-gray-900",t[0]==="text-gray-900"),k(u,"class","svelte-18y2vm8"),k(f,"class","svelte-18y2vm8"),k(m,"class","text-[#FF0080] font-semibold svelte-18y2vm8"),k(y,"class","svelte-18y2vm8"),k(x,"class","svelte-18y2vm8"),k(P,"class","text-[#FF0080] font-semibold svelte-18y2vm8"),k(O,"class","svelte-18y2vm8"),k(R,"class","svelte-18y2vm8"),k(ce,"class","text-[#FF0080] font-semibold svelte-18y2vm8"),k(Q,"class","svelte-18y2vm8"),k(qe,"class","svelte-18y2vm8"),k(c,"class","bio-text text-base xl:text-mds leading-relaxed space-y-8 adaptive-subtext svelte-18y2vm8"),re(c,"text-gray-300",t[1]==="text-gray-300"),re(c,"text-gray-200",t[1]==="text-gray-200"),re(c,"text-gray-700",t[1]==="text-gray-700"),xt(Se,"background","none"),k(Se,"class","text-[#FF0080]"),k(Ee,"class","text-2xl xl:text-3xl font-black tracking-widest mb-8 opacity-80 adaptive-text svelte-18y2vm8"),re(Ee,"text-white",t[0]==="text-white"),re(Ee,"text-gray-900",t[0]==="text-gray-900"),k(ve,"class","text-[#FF0080] font-bold text-lg"),k(ee,"class","achievement-item svelte-18y2vm8"),k(j,"class","text-[#FF0080] font-bold text-lg"),k(Y,"class","achievement-item svelte-18y2vm8"),k(te,"class","text-[#FF0080] font-bold text-lg"),k(de,"class","achievement-item svelte-18y2vm8"),k(be,"class","text-[#FF0080] font-bold text-lg"),k(fe,"class","achievement-item svelte-18y2vm8"),k(un,"class","text-[#FF0080] font-bold text-lg"),k(hn,"class","achievement-item svelte-18y2vm8"),k(X,"class","achievements-list text-sm xl:text-base leading-relaxed space-y-6 adaptive-subtext svelte-18y2vm8"),re(X,"text-gray-300",t[1]==="text-gray-300"),re(X,"text-gray-200",t[1]==="text-gray-200"),re(X,"text-gray-700",t[1]==="text-gray-700"),k(ye,"class","achievements-section mt-16 svelte-18y2vm8"),k(i,"class","bio-content-flow svelte-18y2vm8"),k(n,"class","bio-flow-container svelte-18y2vm8"),xt(n,"opacity",t[3]),xt(n,"min-height",t[2]+"px"),k(e,"class","biographical-text svelte-18y2vm8")},m(lt,rt){je(lt,e,rt),D(e,n),D(n,i),D(i,r),D(r,s),D(s,o),D(r,a),D(i,l),D(i,c),D(c,u),D(u,h),D(c,d),D(c,f),D(f,p),D(c,v),D(c,y),D(y,g),D(y,m),D(m,w),D(y,S),D(c,M),D(c,x),D(x,A),D(c,H),D(c,O),D(O,J),D(O,P),D(P,N),D(O,C),D(c,I),D(c,R),D(R,z),D(c,W),D(c,Q),D(Q,se),D(Q,ce),D(ce,ue),D(Q,Le),D(c,Pe),D(c,qe),D(qe,V),D(i,at),D(i,ye),D(ye,Ee),D(Ee,Se),D(Se,Ve),D(Ee,De),D(ye,Z),D(ye,X),D(X,ee),D(ee,ve),D(ve,he),D(ee,T),D(X,b),D(X,Y),D(Y,j),D(j,L),D(Y,K),D(X,oe),D(X,de),D(de,te),D(te,pe),D(de,xe),D(X,Ce),D(X,fe),D(fe,be),D(be,Ze),D(fe,ft),D(X,pi),D(X,hn),D(hn,un),D(un,fr),D(hn,Jn)},p(lt,[rt]){rt&1&&re(r,"text-white",lt[0]==="text-white"),rt&1&&re(r,"text-gray-900",lt[0]==="text-gray-900"),rt&2&&re(c,"text-gray-300",lt[1]==="text-gray-300"),rt&2&&re(c,"text-gray-200",lt[1]==="text-gray-200"),rt&2&&re(c,"text-gray-700",lt[1]==="text-gray-700"),rt&1&&re(Ee,"text-white",lt[0]==="text-white"),rt&1&&re(Ee,"text-gray-900",lt[0]==="text-gray-900"),rt&2&&re(X,"text-gray-300",lt[1]==="text-gray-300"),rt&2&&re(X,"text-gray-200",lt[1]==="text-gray-200"),rt&2&&re(X,"text-gray-700",lt[1]==="text-gray-700"),rt&8&&xt(n,"opacity",lt[3]),rt&4&&xt(n,"min-height",lt[2]+"px")},i:kt,o:kt,d(lt){lt&&U(e)}}}function F0(t,e,n){let i,r,{scrollY:s}=e,{innerHeight:o}=e,{projectsHeight:a}=e,{adaptiveTextClass:l}=e,{adaptiveSubTextClass:c}=e;return t.$$set=u=>{"scrollY"in u&&n(4,s=u.scrollY),"innerHeight"in u&&n(5,o=u.innerHeight),"projectsHeight"in u&&n(6,a=u.projectsHeight),"adaptiveTextClass"in u&&n(0,l=u.adaptiveTextClass),"adaptiveSubTextClass"in u&&n(1,c=u.adaptiveSubTextClass)},t.$$.update=()=>{t.$$.dirty&48&&n(3,i=Math.max(0,Math.min(1,(s-o*.2)/(o*.2)))),t.$$.dirty&96&&n(2,r=Math.max(a/2,o*.8))},[l,c,r,i,s,o,a]}class O0 extends Jr{constructor(e){super(),Kr(this,e,F0,z0,Qr,{scrollY:4,innerHeight:5,projectsHeight:6,adaptiveTextClass:0,adaptiveSubTextClass:1})}}const{setTimeout:Kc,window:Xi}=nu;function Qc(t){let e,n;return{c(){e=ne("div"),n=me("\u{1F3B5} Click sphere for audio"),this.h()},l(i){e=ie(i,"DIV",{class:!0});var r=$(e);n=ge(r,"\u{1F3B5} Click sphere for audio"),r.forEach(U),this.h()},h(){k(e,"class","audio-notice fixed top-6 left-1/2 transform -translate-x-1/2 z-50 bg-black/80 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm border border-white/20 transition-all duration-300 svelte-1slltwo")},m(i,r){je(i,e,r),D(e,n)},d(i){i&&U(e)}}}function $c(t){let e,n,i;return n=new O0({props:{scrollY:t[6],innerHeight:t[7],projectsHeight:t[11],adaptiveTextClass:t[8],adaptiveSubTextClass:t[9]}}),{c(){e=ne("div"),Us(n.$$.fragment),this.h()},l(r){e=ie(r,"DIV",{class:!0});var s=$(e);Hs(n.$$.fragment,s),s.forEach(U),this.h()},h(){k(e,"class","biographical-text xl:w-1/2 2xl:w-2/3 svelte-1slltwo")},m(r,s){je(r,e,s),Gs(n,e,null),i=!0},p(r,s){const o={};s&64&&(o.scrollY=r[6]),s&128&&(o.innerHeight=r[7]),s&2048&&(o.projectsHeight=r[11]),s&256&&(o.adaptiveTextClass=r[8]),s&512&&(o.adaptiveSubTextClass=r[9]),n.$set(o)},i(r){i||(ht(n.$$.fragment,r),i=!0)},o(r){Ni(n.$$.fragment,r),i=!1},d(r){r&&U(e),Vs(n)}}}function eh(t){let e,n;return{c(){e=ne("div"),n=me("\u26A0\uFE0F Scene not initialized - click canvas to retry"),this.h()},l(i){e=ie(i,"DIV",{class:!0});var r=$(e);n=ge(r,"\u26A0\uFE0F Scene not initialized - click canvas to retry"),r.forEach(U),this.h()},h(){k(e,"class","fixed bottom-4 left-4 z-50 bg-red-900/70 text-white px-3 py-2 rounded-lg text-sm backdrop-blur-sm svelte-1slltwo")},m(i,r){je(i,e,r),D(e,n)},d(i){i&&U(e)}}}function B0(t){let e=!1,n=()=>{e=!1},i,r,s,o,a,l,c,u,h,d,f,p,v,y,g,m,w,S,M,x,A,H,O;Tr(t[15]),Tr(t[16]);let J=t[2]&&!t[10]&&Qc();a=new A0({}),u=new T0({props:{personalData:t[3],adaptiveTextClass:t[8],adaptiveSubTextClass:t[9]}}),v=new N0({props:{musicProjects:t[4],programmingProjects:t[5],adaptiveTextClass:t[8],adaptiveSubTextClass:t[9]}});let P=t[12]&&$c(t),N=!t[2]&&eh();return{c(){J&&J.c(),r=ke(),s=ne("canvas"),o=ke(),Us(a.$$.fragment),l=ke(),c=ne("div"),Us(u.$$.fragment),h=ke(),d=ne("div"),f=ne("div"),p=ne("div"),Us(v.$$.fragment),m=ke(),P&&P.c(),w=ke(),S=ne("div"),M=ke(),N&&N.c(),x=Ht(),this.h()},l(C){J&&J.l(C),r=Ue(C),s=ie(C,"CANVAS",{class:!0,style:!0}),$(s).forEach(U),o=Ue(C),Hs(a.$$.fragment,C),l=Ue(C),c=ie(C,"DIV",{class:!0});var I=$(c);Hs(u.$$.fragment,I),h=Ue(I),d=ie(I,"DIV",{class:!0});var R=$(d);f=ie(R,"DIV",{class:!0});var z=$(f);p=ie(z,"DIV",{class:!0});var W=$(p);Hs(v.$$.fragment,W),W.forEach(U),m=Ue(z),P&&P.l(z),z.forEach(U),w=Ue(R),S=ie(R,"DIV",{class:!0}),$(S).forEach(U),R.forEach(U),I.forEach(U),M=Ue(C),N&&N.l(C),x=Ht(),this.h()},h(){k(s,"class","fixed top-0 left-0 w-full h-full cursor-grab svelte-1slltwo"),xt(s,"pointer-events","auto"),xt(s,"z-index","0"),k(p,"class",y=qa(`projects-container flex-1 ${t[12]?"xl:w-1/2":""}`)+" svelte-1slltwo"),Tr(()=>t[18].call(p)),k(f,"class","flex gap-8 xl:gap-16 2xl:gap-24 svelte-1slltwo"),k(S,"class","h-40 bg-gradient-to-b from-transparent to-black/80 svelte-1slltwo"),k(d,"class","projects-flow relative svelte-1slltwo"),k(c,"class","seamless-flow svelte-1slltwo")},m(C,I){J&&J.m(C,I),je(C,r,I),je(C,s,I),t[17](s),je(C,o,I),Gs(a,C,I),je(C,l,I),je(C,c,I),Gs(u,c,null),D(c,h),D(c,d),D(d,f),D(f,p),Gs(v,p,null),g=Kh(p,t[18].bind(p)),D(f,m),P&&P.m(f,null),D(d,w),D(d,S),je(C,M,I),N&&N.m(C,I),je(C,x,I),A=!0,H||(O=[xo(Xi,"scroll",()=>{e=!0,clearTimeout(i),i=Kc(n,100),t[15]()}),xo(Xi,"resize",t[16]),xo(s,"click",t[13])],H=!0)},p(C,[I]){I&64&&!e&&(e=!0,clearTimeout(i),scrollTo(Xi.pageXOffset,C[6]),i=Kc(n,100)),C[2]&&!C[10]?J||(J=Qc(),J.c(),J.m(r.parentNode,r)):J&&(J.d(1),J=null);const R={};I&8&&(R.personalData=C[3]),I&256&&(R.adaptiveTextClass=C[8]),I&512&&(R.adaptiveSubTextClass=C[9]),u.$set(R);const z={};I&16&&(z.musicProjects=C[4]),I&32&&(z.programmingProjects=C[5]),I&256&&(z.adaptiveTextClass=C[8]),I&512&&(z.adaptiveSubTextClass=C[9]),v.$set(z),(!A||I&4096&&y!==(y=qa(`projects-container flex-1 ${C[12]?"xl:w-1/2":""}`)+" svelte-1slltwo"))&&k(p,"class",y),C[12]?P?(P.p(C,I),I&4096&&ht(P,1)):(P=$c(C),P.c(),ht(P,1),P.m(f,null)):P&&(iu(),Ni(P,1,1,()=>{P=null}),Qh()),C[2]?N&&(N.d(1),N=null):N||(N=eh(),N.c(),N.m(x.parentNode,x))},i(C){A||(ht(a.$$.fragment,C),ht(u.$$.fragment,C),ht(v.$$.fragment,C),ht(P),A=!0)},o(C){Ni(a.$$.fragment,C),Ni(u.$$.fragment,C),Ni(v.$$.fragment,C),Ni(P),A=!1},d(C){J&&J.d(C),C&&U(r),C&&U(s),t[17](null),C&&U(o),Vs(a,C),C&&U(l),C&&U(c),Vs(u),Vs(v),g(),P&&P.d(),C&&U(M),N&&N.d(C),C&&U(x),H=!1,$h(O)}}}function k0(t,e,n){let i,r,{data:s}=e;const o=s.portfolioData;let a,l=!1,c={},u=[],h=[],d=0,f=0,p=0,v=.5,y="text-white",g="text-gray-300";function m(){if(!(!a||!l))try{const P=a,N=P.getContext("2d",{willReadFrequently:!0});if(!N)return;const C=[{x:P.width*.2,y:P.height*.3},{x:P.width*.5,y:P.height*.5},{x:P.width*.8,y:P.height*.7},{x:P.width*.3,y:P.height*.8},{x:P.width*.7,y:P.height*.2}];let I=0,R=0;C.forEach(z=>{try{const W=N.getImageData(z.x,z.y,1,1),[Q,se,ce]=W.data;I+=(.299*Q+.587*se+.114*ce)/255,R++}catch{}}),R>0&&(v=I/R,v>.6?(n(8,y="text-gray-900"),n(9,g="text-gray-700")):v>.4?(n(8,y="text-white"),n(9,g="text-gray-200")):(n(8,y="text-white"),n(9,g="text-gray-300")))}catch{n(8,y="text-white"),n(9,g="text-gray-300")}}const w=async()=>{if(!(!a||l))try{console.log("Initializing 3D scene..."),n(1,a.width=window.innerWidth,a),n(1,a.height=window.innerHeight,a),await w0(a),n(2,l=!0),console.log("Scene initialized successfully"),(u.length>0||h.length>0)&&(m0(u,h),console.log("Projects updated")),M=setInterval(m,200)}catch(P){console.error("Failed to initialize scene:",P)}};let S=!1,M;eu(async()=>(await tu(),o?(n(3,c=o.personal),n(4,u=o.musicProjects),n(5,h=o.programmingProjects),console.log("Portfolio data loaded:",{personal:!!c,musicProjects:u.length,programmingProjects:h.length})):console.error("Brak danych portfolio"),setTimeout(async()=>{a?await w():console.error("Canvas element not available")},100),()=>{M&&clearInterval(M)}));const x=()=>{l||(console.log("Manual scene initialization triggered"),w()),n(10,S=!0)};function A(){n(6,d=Xi.pageYOffset)}function H(){n(7,f=Xi.innerHeight),n(0,p=Xi.innerWidth)}function O(P){ru[P?"unshift":"push"](()=>{a=P,n(1,a)})}function J(){r=this.clientHeight,n(11,r)}return t.$$set=P=>{"data"in P&&n(14,s=P.data)},t.$$.update=()=>{t.$$.dirty&1&&n(12,i=p>=1300)},n(11,r=0),[p,a,l,c,u,h,d,f,y,g,S,r,i,x,s,A,H,O,J]}class G0 extends Jr{constructor(e){super(),Kr(this,e,k0,B0,Qr,{data:14})}}export{G0 as default};
